%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: business_allegory-05.eps
%%Creator: Adobe Illustrator(R) 23.1
%%For: Cheremisinov Oleg
%%CreationDate: 28/08/2020
%%BoundingBox: 0 0 1350 900
%%HiResBoundingBox: 0 0 1350 900
%%CropBox: 0 0 1350 900
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.1.1 x673 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 5 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.1 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2020-08-28T19:24:29+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-08-28T19:24:29+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-08-28T19:24:29+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>116</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAdAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWB6t+cOg6V56i8p3trcQ85I4&#xA;G1Nwq24mmRXjVTUlh8YVm24n23yByC6bBjPDbPMm1uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuJAFT0xVj9p568uXem/pSC4d9PMkcSTelKGLSMVFY2UOAKVJK0pvleKZnIgDYJygQFlPkkj&#xA;evFg3HY0NaZYxBSe/wDOPl6w1Z9IubhxqKQLdvAkE8pEDMUD1jRlpyFOuI50k7C1n+OPLf8Av6b/&#xA;AKRLr/qlkuEsOMJvaXcN3bJcQ8vSkFU5o8bUBpukgVh9IyJDIFWxSkV35s0U6rcaFbX0bazbRrPc&#xA;Wq1Z44iVq5oCNgwNOtDXMTW5JRxnh57fAd7dhhZ3TCzvkGnNd3LiOCMO7TSUQCNKnm1egoK4NBOU&#xA;8YJ7z8UZ4iMlHy55m0HzJpq6nol4l7ZM7R+qgYUdPtKyuFZT3oR0oehzOlExNFojISFhM8iydirs&#xA;VY9P5x0ixOv3F/eQpY6EI3u3Vg7xco+RV0WrBjtxFKmu2QgJmRBG3RnMwEQQd+rxrU9R/LfVml87&#xA;ajDev5f/AEkrSwM44zzFg0chgMlafuj1I+FSKdspGlyePW1c/wBjedVj/L8W/d7z3vdfL/mLRPMO&#xA;lxarot2l7YTVCTR1G6mhVlYBlI8CK5lEEc3EEgdwmOBLsVUJb6yhlEU1xHHKVLiNnUNxHVqE1oPH&#xA;GkWhf8SeXv8Aq6Wn/I+L/mrJcJ7kcQ73f4k8vf8AV0tP+R8X/NWPCe5eId7v8SeXv+rpaf8AI+L/&#xA;AJqx4T3LxDvR8UsUsayxOskTgMjqQysDuCCNiMiyXYq7FXYq7FXYq7FXYq7FXYqx/wA/wahc+TtX&#xA;tNOl9C9ubWaKGWpXiWjavxAErt37ZKHNrycng/5X+YLfRfJkeq31xcS/pK59GO1d6ogjCcZIkP2B&#xA;IboOfEb07Zk1xFw5y4QA9/8AKt1HeaXBdLsZ4Y5KeIdQwJPjvmPkG7lYTYeXeYPzA0vVPOnmXyd6&#xA;FzDd2EHqyXbxB1cQvBIFWivQfETV0K8R3zBxaKYznJe0h+r3OTPUx8PgI5JBeWPnQ300YT0tGt4L&#xA;L6oH+tGaMWwIV5F9ARj1m5eow+2FApSuZWTFP+A7+a6XJg4v3w9P9EWb+NPfNElSTSrYorIFQJwd&#xA;GjYcdqFHCsOnhkiKaokEbLtW1Sz0nS7vU71/TtLKGS4nfqQkSl2oO5oMQLSTQt872n5leRYr+68+&#xA;rplykGq6hJZX9n9af1BE8AVrkoPgPMNT06/CV2bAdKfE59L5fDmyGpBwk8PKQHPvsjb4PUtN8xaT&#xA;rXlm9sdN/daVb3E2nxupoDDbtxbixL1UjYseu+TxwlE7uPmyRkKHdv8ApRHlWC206O4t9McmCehM&#xA;akMFdepWnQlTv9GWz35tOL03TJtNa79X94xEVONHPf2ByqVN+O7TPINzsVfL/wCevlfzxB5015dI&#xA;t538veZLa2v9SmjRvq6jTozy9WSnBeBiMm57jMrFIUL5hxMsTZrkWHa7qzRflDpFgTvNdu9PaJCy&#xA;/wDUYcGI3lyH3D7A5GrjWmwDv4j/ALMj9D1L/nE69vILLzFoV0Cht5LW9jiPb61EwY/8DGmDP0LT&#xA;p+oe/wCY7kuJABJNANycVeUeZfIWgeY/zCsPMt1I/qWYFrHDyrDJ6crsGalKqeRDKagin06X+Vbz&#xA;iFUBKr+LmjTAYiedi0o81P5T0TzBJbT6do1vapPb28Vk9t/pU4nWKsqMsUoVVeUivA1pTY5vuM95&#xA;dYYb8gqX8/km31c6F+g7GPWnt5bqKFokdeEKuxJYWap0ibbmMj429WWRwS4bofj4Knluy8tatrN9&#xA;ZRafpFx+ip47TUoUsyjRzGSSN6NJFGrqTEyjgSAVO57S8TzLAYpDmA9htbe3traK3t41hgiRUiij&#xA;AVVVRQKqjYAZXbfSrirsVdirsVdirsVdirsVdiqC1ixur6ze3t50ty4Ks7xmXZhQ0AePscINMZRt&#xA;495v/KSOzhsSdTuWgjNI4bLTXuAGSG1iBek4C1Fkm5O5rlg1HALI+1pnp+JkXkjXf8PaTbaRLBqt&#xA;/FaxGJJf0VNC5EClqn95JXkNhQbnKZ5xI2K+cf1tmPHwit/kVnmbWZZluTJbahFBepwupjpcxRYQ&#xA;lTyZpo+PwswZu3tQ5DGZCRkI866hnkIMREnlfTvZI/lvVr+3uS+o26rqFmltLG1nIHWOknUfWdm/&#xA;fGuXjJvXc1+CyLT4LyG3WO6mjnlHWSOMxA/7EvJ+vIktkRQYl+bun6pqvknVtL0xQ15cWriJCftn&#xA;ugp3ZQQPc5Zi2NtOfufJ+kDR2ml0i/WS2jutXtWtdLuElWZrWSYg7qv++jvuPbLibkCOgkPu/UiM&#xA;gMUonmZQI+An/wAU+k49H0Tyjo2n+XrYSQWPCYJO55Scywcu5puWZj2p26YBZ3ceZA2KLsNbtp9Y&#xA;iRbtby5uiQ8sYoirFG2woTvUeOJjsgT352Wb2KpdIrTfE8JAUV7UFK5RLZzIermmOQbXYqxf805J&#xA;Y/y28zmKNpXbTLqMIqljSSFkJoPANXJQ+oMMn0l8Z32t6d5k0ry/5c0eCVNVgZ4rprh4khlmkWOO&#xA;IQsSKV9I15dWNBlvpxmcz1/QxnlnlhjxV9FgfE2+mvyG8heYNIh1HzR5mrHreuCJEtdv3VtCKJyC&#xA;/DybbbsAO5IyOSYNAckYoEWTzetZU3OIBBBFQeoOKvndPz68pXnmuDQbW1nSefVfqUMqemYOMk7Q&#xA;iTkHVhs1R8Oag9jS8fxCY8F3W4LkfygODho39jMfMJurbVZ/0fDHfRyt65nlAkb1uKBW5AUbgEUA&#xA;HbbNxjw469fEaLi5M2S/QYx2ed6jpv5u3XnM6wl7bDTi6weiyD1RYuCJ4h+6Iq3qOR8XU9elE4xd&#xA;1uonKqvZmHktPMlr5ke51Nl+r3shkuWqaeoZTKH+LYULMNtgDmHgwZYyJlVF3naGr0eTEI4ozEo9&#xA;9cv9MXs9vIskKOpBVhsRuCPEZmF0gNhUwJdirsVdirsVdirsVdirsVYP+aHm670JdDstPMh1PV7+&#xA;K3gigERlMSkGUqJx6R6ovxFftV5DE30Ymr3eM+VPMHmny3rPmE20rpM12Y1t5/UuYraON2rFIwYo&#xA;26mPnXkeGxp1zcg4hvzp1oyGMqB2t7B+X35i3nmPXdW0zULc2Fxaw2VzbWMojEwhuYQ7OWjlmWQc&#xA;/ZeIIDCuY0oVu58Mt7dUh/NvWZtX1x/y9BX0b+wivDEiVuHYTtX035FQFWLdSld612OSw7G2vUS2&#xA;oc2L+ZbvVl8mz6U8T2f1O1hhjaaEGK6YNGiJxePghr8X2tiB9GB/JsIZJZAb4j/b1cjDrpSiIEVQ&#xA;/se7aFd/XNFsbztcwRzAdwJFDUO53FcyiseSndJW+JZuQCgqvhko8mnJzfI+r+X5TrHmzz0xeS50&#xA;XzzFEkzFm4QRXMgZRvWnKSED2AAyYYE29j/N3zGlvr2maRGAZltZbuUHujyLGv3FGy3ENrcbUdHn&#xA;35eeZvqmoaDLcGqXN9Jaxj/LupZIwSf9lluQXbXj2k+j9KWQ3NVbioFW9x4Zhy5Ofj5pzlbkOxVh&#xA;35x3/wBR/KvzVPWhOmXEIPvOhhHcfz4Y82MuT468zeRxpX5QeTvNCJ6d1ql5fm5kp8XElFthy8At&#xA;s7D/AFstvemkigC+7NK/45ln/wAYI/8AiAylyEVirsVfPq/845eQYfOk12jX3pW8q3cds0yGPl6h&#xA;YIf3fMrUfzV98hDNM5THbhAtcmGAwiQviJpmL+V/LM/mu3tl0izFvZ2jz3Ma28QDPcSCOCoC70WG&#xA;bM3iNc3BoWmVz5T8qjzTp0I0axEL2N87xi2h4lkmtArEcaEgOafM5HiNc2XCLWP5U8rW/m2ONtHs&#xA;Tb6jZH04zbRcEls5Kmg40DSJc7+IT2w8RrmihbOtOtoLazjggjWKGMcY4kAVFUbBVUbADwzHkd3K&#xA;xjZEYGbsVdirsVdirsVdirsVdirAvPvkfWNf1uy1ezaJLvRoidFd24iO4eRZJXf4WqH9GNOmy8uv&#xA;LaUSL3YTBI2edaF+Sn5g2S3Mt/Nb3txdzCW4QzN6cgU1ozUWX4qnlRsyp6iJcD8pK+j07R/JUdl5&#xA;ql8zx6clvql7GLe+cXLuphUIEQIfgHAxihVRttmDvfPZ2QArluv1jybb3HnK382x6as+r2MDWtrO&#xA;bqWIek4NQYx+7NObfaU9euwyVm/JiYgg96F8z+XvM3mCyjs2tYLRVnilMjuk9FjarcQVFH/lPjls&#xA;ZgNRxllXlyzu7HQbCyuwguLWCOGQxmqkxqF5DZetK5WebbEUEu1nzDHbzhUtLyThVWdbWYoT12Yq&#xA;AfoOGLDICXkOqaNO/kfzt5fbTLhL7zHqN7qdkOACmSWRJLZmetFJaFSan4e+T4gw4Sx/8w49c1b8&#xA;09M1BNMv208RW1rfSRwvIqRmVvWCugaP4Q5INaV3zJxyjwFx8mMmTFJPLvmW3vvL0VlpOpSQ2kxu&#xA;J2+qykiQXspU0Vaf3Ko2/ie2WDJHfdh4RB5Pp3SfMMQuq/Ub7iRQt9VmNK9/hU5gSNuZAEFlqsGU&#xA;MK0IqKgg7+IO4yDe3irzH/nJS6Nv+TGvhftz/VYU2r9u7ir/AMKDko82E+TDfz88ojTf+cddH07h&#xA;R/Lx04yePNYjbOTTxaY1wxO6Jj0veNOjePT7aNxxdIkVlPYhQCMg2IjFVk8TywtGkrwMwoJYwpZf&#xA;cc1dfvGKpDL5QLoVXVLpXLVM/wC69Tj/ACVVFXjXf7OPW+rHh2rol0f5eTRXc91Frt4JbjgHLCMm&#xA;kYoq9BsKk/Tk+MsfCCo3kO9a7ju21+7NxFHJFG9E2SUozj6TEv3YOIr4YVJPIkss9rcS65fNNZuZ&#xA;IW/dbM0bRNsUOxVztiJlTjCfafp81mpV76e7WlFE4h277GOOM/ecizApGYpdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirA/zb0bUvMFjomg2mnz3drdavZTapPGYxFDZ28yyS&#xA;mXmysagfCFU4QaRIWiPzm8u33mP8std0ewtmu7y5ijNvbIVVneKeOUBS5Va/B3OINFZCwzGGQywx&#xA;yFGjLqGMb0DLUV4tQkVHfAlfirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVaZgqlj0GK&#xA;CaQs+pQW9rcXM1Vit42mkO1eKLyb8BkuFgMgea3f/OSf5d21vHMUvJGeL1jBGtuZFPrGL02BmHx7&#xA;c6A/ZNfbLzpZd4ahqonoXqEFzDPBFPG37udVeMnuGFR+vMenIsKuBLsVdirsVdiqk95aJcx2rzxr&#xA;dSqzxQFlEjqlOTKtakLUVIw0i1XAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KrZA5FFp718MIQbeHaP+YXku8/NDV9Su9TubL6lyttOW4uW+puiL6cjIlRHGXK8hXrXr1GRA&#xA;PFZOymQ4KA3eNwz3Mn5t2+tpaBZbjU11ZbMDnGsbuLv+8QEFhGa7H7X3ZsokGG3u5OsySMSb+96P&#xA;qPmzziL9JtK1q5luoyzNHKyNDIa8vTMdFjAA22GUZOGIs8mGGWScqHMpp5m/O7TJ7XyzLp/mOHTT&#xA;cOkuuwW6NPKgBjYoKI4C7OD8anp1FcqljmTs7DDkgATLm93gn9TY7MMrIbIStVwM3Yqh59RsIJlg&#xA;muI0ncckhLD1CN9wn2iNjiAgmnx75p1XVU/M4Xg80XF1b2t0ttH5hT1lNrFMWMkSkhivprI4ota7&#xA;5shH0bDfudcZevm+i4LiOS0hnSZrmN40ZLgku0ilRRye5Yb1zzXURmcshL6rNvW4aMRw8qYJ58/M&#xA;3Rr7R30Wz1y80u/06YzxX1kGXk0cThYuSMnIc33Vu/XOl0UM0cIBAsHb3OuyTxnIe6vtev8AlDUp&#xA;9S0OyvnnN1Hc28UqXRQRmQsgJbgNlr4dumbQuFEmyneBm7FXYq+eP+cgLzzl5Z8xjXIZ3k0fVY2s&#xA;7aKGeVPSZYAr+onwoCxZmTiT0398/TyiY1W4cDUQkJXexSf8nNe84+Y/M+n6i941nofle2MWp/WL&#xA;qQxzC5a5ZGZfsF6y0HKlAg8Mc1AHbcoxk7b8nu8HnTyxcXYs4dZtXuWp6cQnSr8hUenv8f8Asa5i&#xA;8LaMgPVOo3f1F+I9R398iQziTaOyDkOxVItO87+XdQ8xX3l23nb9K6eeM8LRuF+yG+GSnA7HpWvX&#xA;bbBYumZgavolvm381PKXle+XTr6WSfUWAZrS1T1HQEVUvuoWvhWtN6ZZGBLjzzRjzRmg+c7DzAbg&#xA;WCTwvZlVnjnjKEF68SrDkjg8T9lj74TCubXHOJ/SyGMsUHL7XfIFyI8l2BLsVeCedvz183+UvOVz&#xA;pGqWCJZxXqTWvpIjNLpnJgTz9RgHfjtsKd8zMeGMhfl9rh5M0ga8/sZ55M/MKYeTLPXPPM9to51C&#xA;ZUsZ5WSGOWOaMSQn7TBSyhvtU2G+UZ4xiduTdp5SkN+bM1u3dgYyGRt1puCPYjI0vGbRmQbmN/mR&#xA;rd1oXkLXtXtGCXVnZTSQuTSjhCFI969PfFBeLf8AONel6deRa/NqNorahDJaKbW7hUyQo0byI68h&#xA;sJA+3yyUWqbDdW1TS778wbxEuTBBq+qGJb+PkWW1luRydAB+1s30U8c2eSMuADydVsZE9LZL5nh0&#xA;ayt3+oW62sVSyRgkuUVeNXYklmbqT45TVBhGfFKxya/PSw8veWvyj8u6bc28ceuu8HpcEAlLRxE3&#xA;LFhTYFwDWvUbeFMJ0XY8Hpev/k75lm8x+QNC1ecq088BimKfzwO0JJr3Pp1OVzbcfNnmVOQ7FXgH&#xA;5heY9FuPzet7S5tfS1LS4YZLW8FwyGY+skiW7IABtViBvyr4bGcsX0nfm1xzkCUduR5/j8FBPptk&#xA;1tJC9pGbW4YvLGY19N3LBiSKUJ5CuZokL57h1Bvn3o3UPM+r6XczWFvKkMMiKkEDA1sQrFRGKDYq&#xA;o8OlNq5iZNJjySEpCzFyY6nJAEA0CpfmzothP5JsJ1S3v9au5kiXUY0X1pwiO5Cso5tUqq098jkH&#xA;c5mnIo3vtt77H6Lek/kxKl/+XOgX5Yllt2gAqCtIJXhB28QmRvZmI72zvAzdirsVfOv/ADlU+tTX&#xA;2iWctty0ERySwyoOZe65ASK6g7cI+HGo/abc9s3SRBtwtXIimB/lYJ7bT9XVlA0K/aO3ubdkorPD&#xA;WXmQf5SFXYb1y7IBbg5MkqodUx1q20/U2LQosYiQRW7JQcQmwG3YeGVHdjCw9u/JfXr3WfJdnJeu&#xA;0lzZytaPMxqziMgqSe54sBX2zHmHY4TdPR8pcxa7hFLHoMQEE0+Y9B89eevMP5ra5qugeX7DWmsn&#xA;kjilcJA8VsrmGLjdFlHN0H7XKo5cQBXLzghH1dfx0cc6ichw9Px1SyOS71PV9VvdQt2t9cuNSuI7&#xA;m2LrIIlUjjGJBSvEkr9GThfF/Rpw8xjw3/FZtlnk/wA53WieYNPOpq9k08YUwyLtPFNx4uGWoPGn&#xA;Y/a2O4ycvUKasROOXEOT6AtjG0fNP2tyff2zDLt4VSrgZoa5nYEou3ickA1Tl0fJf/OQVlq0v5my&#xA;DUYUlt5bWFtLI+IC3HIMPiZaN6iuSM2GAAx5ODmNHmzLV/OV3Y/lZFo+o6HeX81rEIINWltJBpzw&#xA;GsUM3OTdi0DgUpuT1zXZ4ifMEOfgkcZsEF6d+Vfm2XzJ5Lsr+Xgl3HytrxIwFVZIttgNl5IVag8c&#xA;kOTWTRZ3F/druTtXf3yJb48mBfm3ajW9MtPLjzehpV3dxN5hmBowsogZvRQD4y00iItVGwrXtVCJ&#xA;HZ5z56uW020886hosjJdeYf0XaaasIYUgs4wsrsqjkqUd46Ur/sd8vw/U42X6XjOgeXdZu9WWa/c&#xA;wJDSQSoHR+SkFQvq+kOvgczZTPeHCkKGwL0rRNTvtC1mHVEiS+pVZFnHqEq32qUkkoadGzHkLRjJ&#xA;B5PYr7X/ACZrDIJpYbu2RWF3BcQu0bROKfEsiUb4qbe+a/JD1xkOjuMU/wB3KJ6/oRnlK58uaYXs&#xA;dMeOHS0Ja2gjjMSwlzugXiuxJqKD54IQlGRF3E7+5nKcZgGqkNvf5/rZnljFpuXE8ftU+GvSuKvj&#xA;b/nInXbe0/Ni2ltR6N1Y2lq91MgAZpxI8qvtTkRG0Y38KZlRlQcKUbfU3+HNE+p/Uvqq/VRJ6vp1&#xA;anOlK1rXplfEbtfDFUgr7yN5WvJ5rqewR7mYl5JC0gqx3J2amIkVOOJ6PLvO/lCO4/MPQbc6f9a0&#xA;pbKW2sUeV+FrdzK7RzqN6NxtG4g7FgD9qmJAO5bIGhQZ1+QDzyflnpDkBY2Wd+FP2muJDt7UyEhT&#xA;bAkl6RkGx2Koe4mkRwFNBSuSAa5yILyL/nIq/iPlrTLSShuZLz1YjQfYjiZX369ZEzN0UfUT5ODr&#xA;J3EDzee/l15e0/X724guryS38s6DbLJdRxEpJcu7EADf4TK/LfrT4R4iOSRJ2asUBuZdEfrtpYW6&#xA;qbO3S1ieR2SGOgCq2/H347CuSqg48ZcRJepfkVpP1byBbXLgqb24nukXwUvwX7xHXMTJLd22nh6Q&#xA;Xo2VuSxH82dWk0r8uvMN7FJJFcR2FwLaWGvNZpIzHEVK7g+o67jpkommvJvs8C/5xQ1bVLfUtUs7&#xA;nTLgafqyRvbaoI3EAltedYy5+E8lk7HqPfJ5cosA8y1QwmiQNgyLzfo9xofnjUrpoHXTrqdbyO54&#xA;n0ybhf3i8vs8hIrbZfjLgaiBsptHo1r5z0ddBe4EU0Dm60q/VfUMTj+8jNCPgfr16/RhyCt2GnN+&#xA;gvXPLFlc6fpFpp9xObqW2hSOW4IpyZVoSB2B7Ziz33dphFCk3yDel8hq7GlKk7ZYHGPN8wfn1r1n&#xA;f/mXDawOGGmWqWszjcesxeRlr7CRR865sNKKDhajd6ldazo+pfkNd3UstLe30d4Z6AFkuLaHgBxB&#xA;6+qqla0qCDtXMPPGpFycErAYf/zjRc61a6nr2i6nC1ov1ax1C2tXNW4XKMwk38UZOXh0O+Uxb5vo&#xA;e0LGPfoPs4yZY+StkWx2KuxV2KuxV2KuxVZNNDBE80ziOJBV3Y0AHvirzzWZ/I+o6ta31ylrctp7&#xA;u0kzwrIyKTRCCVYj46DbK8sCZwIO3VOKYEJgjc8vmmp89+VQpY3w27BJCfwXMhxaQkvn3y3KeIve&#xA;Knt6co+/4MNhFFjOq6vp8nm2zuUttPuIWQRmeW5uEkIHCZGZVtXUFAr0HLeu5GTEhXNiYm06/Jy7&#xA;0/TPL8Plx7iE3Nk7RR+nIzpIGPqqVLpEd/Vp07ZDJ3t2J6RlTc7FUJef3o/1f4nJxacnN8hfmx+a&#xA;cPmbXpGiJhtrLlb2dtIeLJQ/G8gPR2I3A6UA7VzZ4eGEee7rsglOXLZKvy01ea0vrxoIfrKTRhWk&#xA;EhVFKmoDEBga/LIzIYZYkinpflnTR5s1s6fq95Hpdu8L+jIj8mMlQBGvNUXka1+jMeciAywYok1b&#xA;6H0nTLXStLtNNtRxtrKFIIh34xqFBPuab5iEu3iKFImSSONGkkYIiirMxoAB3JOBLFPMWt6FdPbw&#xA;XF/Elh/eSfFX1SDTgKdAP2soyYjkkAfoH2t2POMcSR9Z2Hl5oeXzJ5eW9hvHvEFokZjgcKxUyV+I&#xA;Ci9lI+/JHHeW+kR9pahkrCY9ZS39w/a89/NHzo+qyrommGOfTGVHncws5eUMSFqxQALQdvpzOxjq&#xA;6vPI8kh8m6ne+W9VW6tlAil4x3cZtlXlFyBIDiUsvsafQcslG2iGUxL3nSPMeh3coS2vY5GkPFFB&#xA;oSetKGm+YsnaY08yDcwjzd5y06x0nU2tGml1BLeY2sMcM3JpQpCgEqB9r3y2HMOPMc3xn+hvMc8j&#xA;y3CSCZ2LOzwzMzMdyxPE7k5sBLzDhkeRejflsNQk8v8Am3yzqjSmPWtPMdjIUkjjS7QMIgxk4D4m&#xA;YVPgu5GUak2OYLZpxR5U9Sjnsh5p8t+ZNNnP6StLMaZ5mhIostmY+XPn9lngnUMAtS42WuwOI5Nd&#xA;HrGiazYahGwtXd+I5EtHIgofDmq4JNmPkmeRZuxV2KuxV2KuxV2KuxVa8cbijqGA6AgH9eKrGs7R&#xA;gVaCMg9QVBH6sVWLpunKQy2sII6ERqD+rFVT6rbf76T/AIEYqqYq7FXYqxTzND5/m+sJo62MaOjJ&#xA;bzsXeVCQeLlX4JUeG4yUTTXOBL50l/5xn/MINUafYyVqSRdsP1kZm/mcfd+Pm4n5fJ3ss0X8k/OO&#xA;nabDaixjUoCXANtIOTGrUeSTkRXxys5421y0kyeitN+TPnOSQMtlCGP2mf6so26fYc5HxYqNJPye&#xA;q6M35mRwww3kGn8Y1VWd3k5niKdUL77eGY5p2EeKt2XitBXr3wM3Yqsa3gYlmjQk9SVBOKtfVbb/&#xA;AH0n/AjFVyRRR14Iq168QB+rFV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:d23c3c88-5afe-4ac4-ae6f-0ce964142394</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:d23c3c88-5afe-4ac4-ae6f-0ce964142394</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3475da6f-f821-6b47-9d03-3157c8745d3c</stRef:instanceID>
            <stRef:documentID>xmp.did:3eb636b9-3c86-4540-8758-407a64fdb135</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d23c3c88-5afe-4ac4-ae6f-0ce964142394</stEvt:instanceID>
                  <stEvt:when>2020-08-28T19:24:29+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1350.000000</stDim:w>
            <stDim:h>900.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -900 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 900 li
1350 900 li
1350 0 li
cp
clp
1350 900 mo
0 900 li
0 0 li
1350 0 li
1350 900 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1014.78 566.109 mo
1011.1 572.106 1005.01 576.596 997.999 578.438 cv
997.513 578.564 997.03 578.68 996.555 578.783 cv
998.366 585.35 997.627 592.438 993.724 598.8 cv
991.359 602.623 988.206 605.694 984.292 608.039 cv
987.757 611.691 991.194 615.382 994.601 619.095 cv
1002.98 628.237 1005.69 640.675 998.985 651.61 cv
993.609 660.383 981.746 666.616 970.891 664.835 cv
970.315 667.985 969.188 671.051 967.584 673.826 cv
970.458 676.527 973.326 679.229 976.179 681.956 cv
985.096 690.469 986.946 704.069 980.569 714.471 cv
976.151 721.675 967.94 726.733 959.253 727.702 cv
965.171 732.938 971.082 738.171 977 743.405 cv
978.478 744.714 979.962 746.028 981.439 747.337 cv
989.93 754.855 991.765 767.572 987.133 777.429 cv
986.744 778.259 986.312 779.064 985.83 779.847 cv
984.308 782.324 982.37 784.548 980.132 786.432 cv
143.174 786.432 li
143.388 783.639 143.886 780.537 144.723 777.096 cv
144.992 775.994 145.298 774.849 145.643 773.674 cv
147.466 767.402 151.265 762.805 155.935 760.521 cv
156.63 760.182 157.342 759.884 158.053 759.605 cv
156.411 758.442 154.845 757.128 153.4 755.644 cv
149.546 751.669 146.12 745.763 146.978 739.183 cv
147.838 732.604 152.601 728.32 157.27 726.036 cv
163.873 722.807 171.317 722.559 178.253 723.898 cv
181.773 724.576 185.298 725.249 188.825 725.922 cv
186.038 722.547 183.93 718.597 182.742 713.865 cv
180.75 705.923 181.773 697.266 185.572 690.159 cv
185.688 689.94 185.814 689.729 185.934 689.518 cv
183.914 688.366 181.889 687.227 179.857 686.112 cv
173.556 682.653 168.777 674.995 166.954 667.725 cv
164.962 659.783 165.985 651.125 169.784 644.019 cv
172.949 638.094 177.908 633.459 183.705 630.938 cv
184.166 629.648 184.713 628.4 185.337 627.188 cv
183.399 619.295 184.428 610.704 188.2 603.652 cv
188.299 603.471 188.397 603.301 188.496 603.132 cv
186.498 601.949 184.495 600.774 182.485 599.605 cv
168.991 591.741 164.918 571.537 172.413 557.512 cv
173.293 555.864 174.318 554.319 175.457 552.89 cv
168.175 548.23 160.872 543.614 153.542 539.047 cv
140.256 530.776 135.812 511.287 143.469 496.96 cv
147.148 490.083 153.23 484.934 160.248 482.819 cv
167.956 480.492 174.886 482.201 181.877 485.921 cv
186.914 488.599 191.929 491.313 196.931 494.051 cv
194.604 492.076 192.278 490.096 189.963 488.102 cv
186.481 484.261 184.079 479.735 182.742 474.525 cv
180.75 466.583 181.773 457.926 185.572 450.819 cv
188.95 444.494 194.276 439.926 200.293 437.533 cv
199.756 431.16 201.021 424.659 203.988 419.098 cv
208.938 409.841 218.555 404.006 228.223 403.776 cv
228.371 403.322 228.535 402.88 228.705 402.432 cv
226.301 400.25 223.909 398.051 221.539 395.827 cv
212.353 387.219 211.208 370.844 216.602 359.623 cv
215.654 357.721 214.882 355.673 214.317 353.413 cv
212.326 345.477 213.349 336.813 217.149 329.707 cv
220.822 322.831 226.909 317.688 233.921 315.573 cv
241.559 313.271 248.642 314.877 255.556 318.675 cv
256.684 319.293 257.806 319.923 258.928 320.547 cv
259.542 317.706 260.516 314.955 261.879 312.411 cv
263.292 309.763 264.988 307.474 266.894 305.522 cv
265.754 303.244 264.879 300.882 264.309 298.628 cv
262.317 290.686 263.34 282.028 267.139 274.922 cv
270.818 268.046 276.9 262.896 283.918 260.782 cv
291.807 258.406 298.365 260.357 305.553 263.884 cv
313.463 267.767 321.324 271.747 329.153 275.824 cv
329.241 270.384 330.527 264.986 332.924 260.503 cv
337.977 251.052 347.497 245.43 357.143 245.278 cv
357.707 243.546 358.402 241.88 359.234 240.316 cv
362.448 234.313 367.424 229.817 373.128 227.321 cv
373.653 225.837 374.283 224.401 375.022 223.021 cv
378.701 216.138 384.783 210.994 391.801 208.88 cv
399.739 206.487 406.199 208.505 413.43 211.981 cv
422.654 216.41 431.796 221.021 440.873 225.783 cv
444.557 218.967 450.606 213.866 457.585 211.764 cv
460.072 211.395 462.556 211.031 465.048 210.667 cv
470.117 210.68 474.835 212.079 479.214 214.866 cv
485.718 217.889 492.178 221.027 498.594 224.244 cv
500.575 216.708 505.217 210.177 511.398 206.214 cv
517.393 202.361 526.289 200.332 533.027 203.112 cv
534.696 203.797 536.356 204.5 538.014 205.209 cv
536.016 203.392 534.018 201.574 532.026 199.744 cv
528.55 195.903 526.141 191.378 524.811 186.167 cv
522.813 178.225 523.841 169.567 527.641 162.461 cv
531.313 155.585 537.402 150.441 544.414 148.321 cv
551.377 146.225 559.884 147.03 566.049 151.423 cv
586.785 166.224 607.577 180.927 628.313 195.728 cv
629.726 191.729 631.839 188.173 634.646 185.071 cv
639.586 179.661 647.348 175.511 654.496 176.063 cv
664.516 176.831 674.353 178.807 683.725 182.763 cv
685.8 183.635 696.222 191.607 711.452 203.706 cv
711.528 200.489 712.257 197.229 713.74 194.164 cv
718.256 184.847 729.188 180.715 736.968 186.804 cv
743.882 192.214 750.784 197.654 757.682 203.106 cv
762.445 194.443 772.923 190.766 780.434 196.654 cv
804.443 215.478 827.267 237.251 853.784 250.853 cv
857.589 252.803 860.544 258.54 861.585 263.12 cv
862.072 265.259 862.259 267.477 862.16 269.675 cv
864.591 269.869 866.978 270.657 869.128 272.123 cv
893.14 288.541 915.962 307.527 942.479 319.384 cv
946.284 321.086 949.239 326.091 950.279 330.083 cv
951.49 334.699 950.865 339.739 948.572 343.878 cv
948.041 344.829 947.428 345.726 946.749 346.55 cv
952.552 350.414 958.371 354.249 964.213 358.055 cv
965.706 359.029 967.025 360.205 968.143 361.538 cv
972.933 367.202 974.164 375.599 970.305 382.548 cv
967.64 387.34 962.894 390.454 957.84 391.224 cv
974.115 403.158 985.129 411.397 986.7 412.894 cv
995.951 421.727 997.288 435.637 990.729 445.936 cv
989.618 447.693 988.271 449.341 986.7 450.837 cv
985.403 452.079 983.99 453.176 982.508 454.114 cv
981.971 455.453 981.325 456.738 980.569 457.98 cv
980 458.907 979.365 459.798 978.687 460.646 cv
979.605 461.494 980.525 462.342 981.439 463.19 cv
982.244 463.936 982.988 464.729 983.668 465.553 cv
990.696 474.004 991.577 486.32 985.83 495.699 cv
984.006 498.68 981.626 501.193 978.894 503.211 cv
978.878 503.351 978.861 503.49 978.839 503.63 cv
989.793 513.147 1000.36 523.089 1010.38 533.6 cv
1014.79 538.211 1017.57 543.845 1018.33 549.685 cv
1019.05 555.191 1017.97 560.887 1014.78 566.109 cv
cp
.882353 .968627 .976471 rgb
f
170.264 156.833 mo
172.344 152.904 175.624 149.85 179.456 148.241 cv
178.296 146.301 177.425 144.168 176.927 142.17 cv
175.649 137.022 176.306 131.409 178.744 126.804 cv
181.104 122.346 185.009 119.011 189.513 117.64 cv
192.432 116.751 195.105 116.791 197.729 117.435 cv
196.801 115.863 196.074 114.115 195.583 112.141 cv
194.303 106.993 194.961 101.38 197.398 96.7744 cv
202.104 87.8848 213.922 83.4922 222.052 89.6201 cv
228.148 94.2148 234.154 98.9355 240.096 103.752 cv
244.956 95.2793 256.535 91.042 264.45 97.1279 cv
264.479 97.1494 li
264.551 91.9902 266.45 87.0049 269.75 83.3545 cv
273.113 79.6318 277.731 77.5137 282.491 77.5137 cv
287.731 77.5137 291.276 79.9336 295.231 83.3545 cv
309.065 95.3184 320.903 109.85 334.587 121.996 cv
336.034 123.168 337.517 124.284 339.071 125.28 cv
347.555 130.722 350.485 143.214 345.535 152.563 cv
345.172 153.25 344.773 153.898 344.347 154.517 cv
346.192 155.41 347.909 156.664 349.501 158.427 cv
352.865 162.15 354.779 167.261 354.779 172.528 cv
354.779 177.796 352.865 182.906 349.501 186.629 cv
347.064 189.326 343.459 191.616 339.831 192.299 cv
341.919 194.153 344.012 196.002 346.109 197.841 cv
349.637 200.934 351.387 207.188 351.387 211.941 cv
351.387 217.21 349.473 222.319 346.109 226.043 cv
342.746 229.766 338.128 231.884 333.368 231.884 cv
328.46 231.884 324.982 229.758 321.32 226.642 cv
320.984 227.637 320.581 228.601 320.097 229.514 cv
317.737 233.972 313.833 237.308 309.328 238.679 cv
304.432 240.169 299.874 239.135 295.443 236.668 cv
290.164 233.729 285.053 230.471 280.07 226.981 cv
279.973 228.126 279.792 229.265 279.514 230.382 cv
278.276 235.366 275.262 239.688 271.234 242.299 cv
267.395 244.788 261.663 246.125 257.35 244.309 cv
250.983 241.629 244.851 238.49 239.035 234.57 cv
233.061 230.545 227.522 225.817 221.997 221.086 cv
213.217 213.567 204.875 205.447 196.151 197.853 cv
190.003 192.728 183.611 187.961 176.729 184.116 cv
167.965 179.223 165.533 165.771 170.264 156.833 cv
cp
f
123.905 275.624 mo
124.81 273.913 126.239 272.583 127.907 271.882 cv
127.401 271.037 127.022 270.109 126.806 269.239 cv
126.249 266.997 126.535 264.553 127.597 262.548 cv
128.624 260.606 130.324 259.154 132.286 258.558 cv
133.556 258.17 134.721 258.188 135.864 258.468 cv
135.459 257.784 135.143 257.022 134.929 256.163 cv
134.371 253.922 134.658 251.478 135.719 249.472 cv
137.768 245.601 142.914 243.688 146.454 246.357 cv
149.109 248.357 151.724 250.413 154.312 252.51 cv
156.428 248.821 161.469 246.976 164.916 249.626 cv
164.928 249.636 li
164.96 247.389 165.787 245.219 167.224 243.629 cv
168.688 242.008 170.698 241.085 172.771 241.085 cv
175.053 241.085 176.597 242.14 178.319 243.629 cv
184.342 248.838 189.497 255.165 195.456 260.455 cv
196.086 260.965 196.731 261.451 197.408 261.885 cv
201.102 264.254 202.378 269.693 200.223 273.765 cv
200.065 274.063 199.891 274.346 199.706 274.615 cv
200.509 275.004 201.256 275.551 201.95 276.317 cv
203.415 277.939 204.248 280.164 204.248 282.458 cv
204.248 284.752 203.415 286.977 201.95 288.598 cv
200.888 289.772 199.319 290.77 197.74 291.066 cv
198.648 291.874 199.56 292.679 200.474 293.479 cv
202.009 294.826 202.771 297.55 202.771 299.619 cv
202.771 301.913 201.938 304.139 200.474 305.76 cv
199.008 307.381 196.998 308.303 194.924 308.303 cv
192.788 308.303 191.273 307.377 189.679 306.021 cv
189.533 306.454 189.357 306.873 189.145 307.271 cv
188.119 309.212 186.419 310.665 184.457 311.262 cv
182.326 311.911 180.341 311.46 178.411 310.387 cv
176.112 309.106 173.887 307.688 171.717 306.168 cv
171.676 306.667 171.597 307.163 171.476 307.648 cv
170.936 309.819 169.624 311.701 167.871 312.838 cv
166.198 313.922 163.703 314.504 161.824 313.713 cv
159.052 312.547 156.382 311.18 153.849 309.473 cv
151.247 307.72 148.836 305.661 146.431 303.602 cv
142.607 300.327 138.975 296.792 135.176 293.484 cv
132.499 291.253 129.716 289.178 126.719 287.504 cv
122.904 285.373 121.844 279.516 123.905 275.624 cv
cp
f
1232.17 566.109 mo
1228.49 572.106 1222.41 576.596 1215.39 578.438 cv
1214.91 578.564 1214.42 578.68 1213.95 578.783 cv
1215.76 585.35 1215.02 592.438 1211.12 598.8 cv
1208.75 602.623 1205.6 605.694 1201.69 608.039 cv
1205.15 611.691 1208.59 615.382 1211.99 619.095 cv
1220.38 628.237 1223.08 640.675 1216.38 651.61 cv
1211 660.383 1199.14 666.616 1188.29 664.835 cv
1187.71 667.985 1186.58 671.051 1184.98 673.826 cv
1187.85 676.527 1190.72 679.229 1193.57 681.956 cv
1202.49 690.469 1204.34 704.069 1197.96 714.471 cv
1193.55 721.675 1185.33 726.733 1176.65 727.702 cv
1182.56 732.938 1188.48 738.171 1194.39 743.405 cv
1195.87 744.714 1197.36 746.028 1198.83 747.337 cv
1207.32 754.855 1209.16 767.572 1204.53 777.429 cv
1204.14 778.259 1203.71 779.064 1203.22 779.847 cv
1201.7 782.324 1199.77 784.548 1197.53 786.432 cv
360.568 786.432 li
360.782 783.639 361.281 780.537 362.118 777.096 cv
362.386 775.994 362.693 774.849 363.037 773.674 cv
364.86 767.402 368.659 762.805 373.33 760.521 cv
374.024 760.182 374.736 759.884 375.447 759.605 cv
373.805 758.442 372.24 757.128 370.794 755.644 cv
366.941 751.669 363.514 745.763 364.373 739.183 cv
365.232 732.604 369.996 728.32 374.665 726.036 cv
381.267 722.807 388.712 722.559 395.648 723.898 cv
399.168 724.576 402.693 725.249 406.219 725.922 cv
403.433 722.547 401.324 718.597 400.136 713.865 cv
398.144 705.923 399.168 697.266 402.967 690.159 cv
403.082 689.94 403.208 689.729 403.328 689.518 cv
401.309 688.366 399.283 687.227 397.251 686.112 cv
390.951 682.653 386.171 674.995 384.349 667.725 cv
382.356 659.783 383.38 651.125 387.179 644.019 cv
390.344 638.094 395.302 633.459 401.1 630.938 cv
401.561 629.648 402.108 628.4 402.731 627.188 cv
400.794 619.295 401.822 610.704 405.595 603.652 cv
405.693 603.471 405.792 603.301 405.89 603.132 cv
403.893 601.949 401.889 600.774 399.88 599.605 cv
386.385 591.741 382.313 571.537 389.807 557.512 cv
390.688 555.864 391.712 554.319 392.851 552.89 cv
385.569 548.23 378.267 543.614 370.937 539.047 cv
357.65 530.776 353.206 511.287 360.863 496.96 cv
364.542 490.083 370.624 484.934 377.643 482.819 cv
385.35 480.492 392.281 482.201 399.271 485.921 cv
404.309 488.599 409.323 491.313 414.326 494.051 cv
411.999 492.076 409.672 490.096 407.358 488.102 cv
403.875 484.261 401.473 479.735 400.136 474.525 cv
398.144 466.583 399.168 457.926 402.967 450.819 cv
406.344 444.494 411.671 439.926 417.688 437.533 cv
417.15 431.16 418.416 424.659 421.382 419.098 cv
426.332 409.841 435.949 404.006 445.617 403.776 cv
445.766 403.322 445.929 402.88 446.099 402.432 cv
443.696 400.25 441.304 398.051 438.934 395.827 cv
429.747 387.219 428.603 370.844 433.996 359.623 cv
433.048 357.721 432.276 355.673 431.712 353.413 cv
429.72 345.477 430.743 336.813 434.543 329.707 cv
438.216 322.831 444.303 317.688 451.316 315.573 cv
458.953 313.271 466.037 314.877 472.95 318.675 cv
474.078 319.293 475.201 319.923 476.322 320.547 cv
476.936 317.706 477.91 314.955 479.273 312.411 cv
480.686 309.763 482.383 307.474 484.288 305.522 cv
483.149 303.244 482.273 300.882 481.704 298.628 cv
479.712 290.686 480.735 282.028 484.534 274.922 cv
488.213 268.046 494.294 262.896 501.313 260.782 cv
509.202 258.406 515.76 260.357 522.947 263.884 cv
530.858 267.767 538.719 271.747 546.548 275.824 cv
546.635 270.384 547.921 264.986 550.319 260.503 cv
555.372 251.052 564.892 245.43 574.537 245.278 cv
575.102 243.546 575.796 241.88 576.628 240.316 cv
579.842 234.313 584.819 229.817 590.523 227.321 cv
591.048 225.837 591.677 224.401 592.417 223.021 cv
596.096 216.138 602.178 210.994 609.195 208.88 cv
617.134 206.487 623.594 208.505 630.824 211.981 cv
640.049 216.41 649.191 221.021 658.268 225.783 cv
661.951 218.967 668 213.866 674.98 211.764 cv
677.466 211.395 679.951 211.031 682.442 210.667 cv
687.512 210.68 692.229 212.079 696.609 214.866 cv
703.113 217.889 709.572 221.027 715.988 224.244 cv
717.97 216.708 722.612 210.177 728.793 206.214 cv
734.787 202.361 743.684 200.332 750.422 203.112 cv
752.091 203.797 753.751 204.5 755.409 205.209 cv
753.411 203.392 751.412 201.574 749.42 199.744 cv
745.944 195.903 743.535 191.378 742.205 186.167 cv
740.207 178.225 741.235 169.567 745.036 162.461 cv
748.708 155.585 754.797 150.441 761.808 148.321 cv
768.772 146.225 777.278 147.03 783.443 151.423 cv
804.18 166.224 824.972 180.927 845.707 195.728 cv
847.12 191.729 849.233 188.173 852.041 185.071 cv
856.979 179.661 864.742 175.511 871.892 176.063 cv
881.909 176.831 891.747 178.807 901.118 182.763 cv
903.194 183.635 913.617 191.607 928.847 203.706 cv
928.924 200.489 929.652 197.229 931.135 194.164 cv
935.651 184.847 946.583 180.715 954.362 186.804 cv
961.276 192.214 968.179 197.654 975.077 203.106 cv
979.84 194.443 990.316 190.766 997.828 196.654 cv
1021.84 215.478 1044.66 237.251 1071.18 250.853 cv
1074.98 252.803 1077.94 258.54 1078.98 263.12 cv
1079.47 265.259 1079.65 267.477 1079.55 269.675 cv
1081.99 269.869 1084.37 270.657 1086.52 272.123 cv
1110.53 288.541 1133.36 307.527 1159.87 319.384 cv
1163.68 321.086 1166.63 326.091 1167.67 330.083 cv
1168.88 334.699 1168.26 339.739 1165.97 343.878 cv
1165.44 344.829 1164.82 345.726 1164.14 346.55 cv
1169.95 350.414 1175.77 354.249 1181.61 358.055 cv
1183.1 359.029 1184.42 360.205 1185.54 361.538 cv
1190.33 367.202 1191.56 375.599 1187.7 382.548 cv
1185.03 387.34 1180.29 390.454 1175.23 391.224 cv
1191.51 403.158 1202.52 411.397 1204.1 412.894 cv
1213.35 421.727 1214.68 435.637 1208.12 445.936 cv
1207.01 447.693 1205.67 449.341 1204.1 450.837 cv
1202.8 452.079 1201.39 453.176 1199.9 454.114 cv
1199.37 455.453 1198.72 456.738 1197.96 457.98 cv
1197.39 458.907 1196.76 459.798 1196.08 460.646 cv
1197 461.494 1197.92 462.342 1198.83 463.19 cv
1199.64 463.936 1200.38 464.729 1201.06 465.553 cv
1208.09 474.004 1208.97 486.32 1203.22 495.699 cv
1201.4 498.68 1199.02 501.193 1196.29 503.211 cv
1196.27 503.351 1196.26 503.49 1196.23 503.63 cv
1207.19 513.147 1217.75 523.089 1227.78 533.6 cv
1232.18 538.211 1234.96 543.845 1235.73 549.685 cv
1236.44 555.191 1235.37 560.887 1232.17 566.109 cv
cp
f
1265 788.111 mo
1265 801.394 994.082 812.161 659.887 812.161 cv
325.69 812.161 54.772 801.394 54.772 788.111 cv
54.772 774.829 325.69 764.062 659.887 764.062 cv
994.082 764.062 1265 774.829 1265 788.111 cv
cp
.52549 .572549 .576471 rgb
f
465.668 328.23 mo
463.741 328.87 463.647 331.247 462.991 333.184 cv
463.712 329.99 466.112 324.247 463.362 321.691 cv
462.232 322.445 461.65 323.566 461.271 324.796 cv
461.475 323.585 461.577 322.313 461.42 321.144 cv
457.75 318.942 452.841 338.549 451.506 344.848 cv
449.664 353.537 448.447 365.339 438.626 366.789 cv
438.763 378.891 li
440.89 377.104 449.945 375.016 454.123 372.375 cv
460.101 368.596 461.367 367.053 461.981 360.134 cv
462.442 354.939 463.106 349.194 463.938 343.998 cv
464.631 339.661 467.103 328.825 465.668 328.23 cv
cp
.898039 .501961 .305882 rgb
f
449.464 359.982 mo
453.534 348.364 li
453.909 345.776 455.293 336.839 451.718 335.608 cv
450.121 337.323 449.361 341.147 448.517 343.359 cv
447.534 345.937 446.635 347.993 446.947 350.757 cv
447.288 353.766 448.104 357.034 448.254 360.228 cv
448.656 360.14 449.06 360.059 449.464 359.982 cv
cp
f
446.14 382.012 mo
434.563 383.208 li
432.735 365.501 li
444.312 364.306 li
446.14 382.012 li
cp
1 1 1 rgb
f
440.169 364.178 mo
399.397 365.428 386.373 366.772 360.854 367.086 cv
338.863 367.354 314.51 342.778 295.503 323.959 cv
286.409 335.652 277.401 347.415 268.781 359.438 cv
267.293 361.513 265.839 363.61 264.404 365.722 cv
266.136 367.806 268.003 369.564 269.965 370.856 cv
296.548 388.372 326.377 400.967 360.267 398.892 cv
388.721 397.149 415.77 393.258 442.72 385.548 cv
440.169 364.178 li
cp
.160784 .176471 .168627 rgb
f
315.792 352.352 mo
313.205 343.285 308.234 333.609 304.697 324.865 cv
298.884 310.494 275.248 294.039 275.248 294.039 cv
272.862 301.93 261.362 311.903 257.607 315.602 cv
250.224 322.877 246.505 329.182 243.503 339.236 cv
238.117 357.28 239.38 380.395 234.153 398.563 cv
228.745 417.357 222.882 431.305 211.047 447.083 cv
197.185 465.567 193.398 498.32 197.895 501.502 cv
200.856 503.598 297.282 518.538 299.627 515.873 cv
301.744 513.466 313.153 439.275 317.332 418.587 cv
321.377 398.561 321.584 372.654 315.792 352.352 cv
cp
f
704.595 757.634 mo
704.595 775.603 690.039 790.175 672.055 790.175 cv
381.56 790.175 li
363.592 790.175 349.019 775.603 349.019 757.634 cv
349.019 742.325 359.605 729.481 373.865 726.03 cv
373.865 711.594 li
375.354 711.594 li
372.352 711.594 369.949 709.472 369.949 706.814 cv
369.949 704.268 li
369.949 702.329 371.247 700.648 373.144 699.895 cv
373.809 699.632 374.554 699.472 375.354 699.472 cv
385.099 699.472 li
385.099 687.365 li
384.234 687.365 383.201 687.133 382.096 686.645 cv
377.66 684.69 372.136 678.564 372.136 666.595 cv
372.136 659.124 375.378 653.943 378.622 650.62 cv
378.741 650.476 378.885 650.348 379.013 650.221 cv
382.112 647.152 385.067 645.825 385.099 645.793 cv
445.479 602.955 467.026 509.513 467.026 447.146 cv
467.026 444.344 467.002 441.629 466.931 438.971 cv
466.434 417.119 463.904 400.064 460.565 386.845 cv
458.259 377.638 455.528 370.278 452.807 364.45 cv
452.07 362.881 451.349 361.423 450.62 360.078 cv
448.154 355.481 445.792 352.127 443.814 349.709 cv
443.798 349.692 li
440.035 349.692 li
437.104 349.692 434.35 349.028 431.868 347.858 cv
431.86 347.843 li
425.535 344.784 421.178 338.322 421.178 330.836 cv
421.178 322.477 426.639 315.391 434.174 312.924 cv
435.07 312.628 435.992 312.404 436.92 312.243 cv
436.328 311.146 435.688 309.753 435.255 308.2 cv
433.894 303.46 434.262 297.151 442.653 292.522 cv
442.653 292.522 443.871 291.729 445.52 290.288 cv
449.019 287.205 454.448 281.137 454.448 273.17 cv
454.448 269.566 453.351 265.57 450.404 261.287 cv
450.404 250.125 li
470.07 250.125 li
470.07 238.932 li
470.07 238.932 458.683 231.405 456.417 220.932 cv
452.229 201.723 li
448.699 185.501 li
446.601 175.892 li
607.013 175.892 li
604.923 185.501 li
597.221 220.932 li
596.564 223.895 595.195 226.608 593.569 229.003 cv
589.39 235.056 583.521 238.932 583.521 238.932 cv
583.521 250.125 li
603.202 250.125 li
603.202 261.287 li
590.767 279.479 610.953 292.522 610.953 292.522 cv
619.36 297.151 619.728 303.46 618.367 308.2 cv
617.919 309.753 617.278 311.146 616.686 312.243 cv
617.63 312.404 618.552 312.628 619.44 312.924 cv
626.983 315.374 632.443 322.46 632.443 330.836 cv
632.443 341.253 623.996 349.692 613.587 349.692 cv
609.808 349.692 li
609.791 349.709 li
609.455 350.117 609.127 350.533 608.775 350.998 cv
607.021 353.272 605.028 356.258 602.978 360.078 cv
599.591 366.379 596.044 374.963 593.097 386.492 cv
589.758 399.624 587.229 416.575 586.691 438.307 cv
586.62 441.157 586.58 444.119 586.58 447.146 cv
586.58 478.325 591.953 517.264 604.916 553.791 cv
617.814 590.296 638.313 624.39 668.507 645.793 cv
668.523 645.793 681.471 651.638 681.471 666.595 cv
681.471 674.081 679.333 679.254 676.642 682.577 cv
673.929 685.892 670.718 687.365 668.507 687.365 cv
668.507 699.472 li
678.252 699.472 li
679.037 699.472 679.781 699.632 680.463 699.895 cv
682.359 700.648 683.673 702.329 683.673 704.268 cv
683.673 706.814 li
683.673 709.472 681.239 711.594 678.252 711.594 cv
679.741 711.594 li
679.741 726.015 li
694.002 729.466 704.595 742.31 704.595 757.634 cv
cp
.0392157 .235294 .372549 rgb
f
583.522 250.081 mo
583.522 239.327 li
470.071 239.327 li
470.071 250.081 li
583.522 250.081 li
cp
.0117647 .0941176 .129412 rgb
f
680.464 699.897 mo
373.144 699.897 li
373.81 699.628 374.559 699.472 375.352 699.472 cv
385.1 699.472 li
385.1 688.04 li
668.509 688.04 li
668.509 699.472 li
678.256 699.472 li
679.034 699.472 679.784 699.628 680.464 699.897 cv
cp
f
679.741 713.506 mo
679.741 725.363 li
373.867 725.363 li
373.867 713.506 li
679.741 713.506 li
cp
f
434.179 312.925 mo
435.07 312.628 435.99 312.401 436.923 312.247 cv
436.328 311.143 435.691 309.758 435.253 308.199 cv
618.368 308.199 li
617.916 309.758 617.279 311.143 616.686 312.247 cv
617.634 312.401 618.553 312.628 619.444 312.925 cv
434.179 312.925 li
cp
f
568.655 297.358 mo
568.655 299.701 566.755 301.603 564.41 301.603 cv
458.772 301.603 li
456.43 301.603 454.528 299.701 454.528 297.358 cv
454.528 295.014 456.43 293.113 458.772 293.113 cv
564.41 293.113 li
566.755 293.113 568.655 295.014 568.655 297.358 cv
cp
.0627451 .376471 .54902 rgb
f
565.825 335.085 mo
565.825 339.188 563.926 342.513 561.582 342.513 cv
455.943 342.513 li
453.6 342.513 451.699 339.188 451.699 335.085 cv
451.699 330.984 453.6 327.657 455.943 327.657 cv
561.582 327.657 li
563.926 327.657 565.825 330.984 565.825 335.085 cv
cp
f
528.232 377.907 mo
530.286 370.809 536.172 360.114 540.502 350.647 cv
444.563 350.647 li
446.378 352.976 448.46 356.049 450.619 360.08 cv
451.354 361.424 452.075 362.881 452.811 364.451 cv
455.527 370.28 458.258 377.638 460.563 386.848 cv
463.902 400.062 466.435 417.122 466.929 438.969 cv
467.001 441.627 467.03 444.344 467.03 447.146 cv
467.03 509.51 445.482 602.956 385.1 645.796 cv
385.072 645.823 382.115 647.153 379.016 650.224 cv
385.552 652.912 392.229 654.85 398.908 655.882 cv
464.709 666.041 518.075 590.152 526.28 534.976 cv
531.459 500.214 525.842 465.637 524.116 430.946 cv
523.24 413.39 523.508 394.246 528.232 377.907 cv
cp
f
609.796 349.709 mo
609.455 350.12 609.131 350.53 608.776 350.997 cv
607.022 353.275 605.027 356.26 602.976 360.08 cv
450.619 360.08 li
448.157 355.481 445.794 352.129 443.813 349.709 cv
609.796 349.709 li
cp
.0117647 .0941176 .129412 rgb
f
589.875 749.145 mo
589.875 755.396 584.807 760.463 578.557 760.463 cv
381.902 760.463 li
375.652 760.463 370.584 755.396 370.584 749.145 cv
370.584 742.896 375.652 737.827 381.902 737.827 cv
578.557 737.827 li
584.807 737.827 589.875 742.896 589.875 749.145 cv
cp
.0627451 .376471 .54902 rgb
f
473.841 103.061 mo
473.841 155.898 li
419.769 163.77 li
413.508 164.682 li
413.724 162.969 li
414.172 159.357 li
421.219 103.061 li
473.841 103.061 li
cp
.298039 .537255 .576471 rgb
f
640.107 164.682 mo
579.775 155.902 li
579.775 103.058 li
632.401 103.058 li
640.107 164.682 li
cp
.0392157 .235294 .372549 rgb
f
554.479 103.061 mo
554.479 155.898 li
501.849 155.898 li
501.849 103.061 li
554.479 103.061 li
cp
f
640.106 164.682 mo
640.106 171.313 637.239 176.692 633.701 176.692 cv
419.914 176.692 li
416.374 176.692 413.508 171.313 413.508 164.682 cv
413.508 164.097 413.532 163.514 413.572 162.952 cv
413.676 161.68 413.876 160.471 414.172 159.357 cv
414.484 158.181 414.893 157.115 415.381 156.195 cv
416.542 154.017 418.144 152.672 419.914 152.672 cv
633.701 152.672 li
636.215 152.672 638.393 155.395 639.441 159.357 cv
639.866 160.959 640.106 162.769 640.106 164.682 cv
cp
f
607.013 175.892 mo
604.923 185.501 li
448.699 185.501 li
446.601 175.892 li
607.013 175.892 li
cp
.0117647 .0941176 .129412 rgb
f
554.479 103.061 mo
554.479 128.362 li
541.996 138.259 527.456 146.514 511.425 152.672 cv
508.431 153.816 505.381 154.897 502.29 155.898 cv
483.93 161.84 463.864 165.106 442.846 165.106 cv
435.006 165.106 427.304 164.65 419.769 163.77 cv
417.736 163.537 415.726 163.273 413.724 162.969 cv
413.572 162.952 li
413.676 161.68 413.876 160.471 414.172 159.357 cv
421.219 103.061 li
473.841 103.061 li
473.841 152.672 li
501.849 152.672 li
501.849 103.061 li
554.479 103.061 li
cp
.0627451 .376471 .54902 rgb
f
288.318 523.438 mo
285.318 515.313 277.977 487.163 272.609 474.672 cv
256.139 475.239 li
214.769 496.905 li
220.111 514.892 229.054 530.388 237.036 546.005 cv
245.832 563.216 276.755 611.724 277.666 620.057 cv
278.779 630.25 273.549 658.796 272.999 669.12 cv
271.974 688.382 274.062 743.409 272.778 775.469 cv
284.531 774.717 li
293.224 738.257 313.308 655.765 315.732 634.651 cv
317.134 622.445 317.9 616.54 315.519 605.327 cv
313.506 595.848 295.01 541.563 288.318 523.438 cv
cp
.0901961 .0980392 .0941176 rgb
f
285.367 772.256 mo
272.49 769.956 li
272.023 776.444 269.105 781.839 269.185 788.47 cv
281.347 790.896 295.887 792.18 308.038 791.05 cv
300.369 788.178 288.388 777.965 285.367 772.256 cv
cp
1 1 1 rgb
f
185.586 478.917 mo
180.034 515.705 180.428 556.54 176.63 592.294 cv
174.575 611.646 172.778 628.72 163.223 644.548 cv
153.483 660.686 151.67 665.862 143.016 683.695 cv
130.798 708.873 122.501 743.384 115.139 768.866 cv
126.401 772.4 li
144.374 744.655 197.454 660.211 208.262 636.376 cv
218.929 612.85 239.313 521.277 264.225 494.652 cv
264.987 493.838 260.004 477.896 259.349 476.774 cv
185.586 478.917 li
cp
.0901961 .0980392 .0941176 rgb
f
128.564 769.27 mo
116.689 763.786 li
114.596 769.945 110.408 774.427 108.808 780.862 cv
115.916 784.318 124.075 787.57 132.176 789.987 cv
136.786 791.362 142.053 792.494 147.458 789.939 cv
144.777 788.051 140.013 788.092 137.221 784.526 cv
133.043 779.188 129.451 773.039 128.564 769.27 cv
cp
1 1 1 rgb
f
309.3 303.932 mo
306.668 312.252 307.229 326.12 307.09 334.996 cv
299.683 323.604 292.734 301.062 277.946 296.954 cv
280.054 288.987 284.207 279 286.129 269.244 cv
287.289 263.36 287.64 257.559 286.245 252.336 cv
318.019 282.938 li
316.377 289.641 313.124 294.015 310.531 300.489 cv
310.099 301.57 309.687 302.714 309.3 303.932 cv
cp
1 .698039 .470588 rgb
f
318.019 282.938 mo
316.377 289.641 313.124 294.015 310.531 300.489 cv
304.227 299.025 298.03 293.504 294.675 288.979 cv
290.8 283.743 287.517 276.212 286.129 269.244 cv
287.289 263.36 287.64 257.559 286.245 252.336 cv
318.019 282.938 li
cp
.898039 .501961 .305882 rgb
f
312.281 318.39 mo
309.882 306.498 306.448 300.638 297.93 290.243 cv
294.501 286.059 285.007 273.097 285.007 273.097 cv
285.007 273.097 282.142 277.688 280.928 280.765 cv
279.93 283.295 279.054 285.948 277.98 288.464 cv
284.758 294.443 li
285.85 294.378 290.18 298.514 291.902 300.105 cv
295.365 303.306 298.555 306.947 301.372 310.759 cv
305.883 316.866 309.638 323.983 313.055 330.68 cv
313.276 326.413 313.106 322.479 312.281 318.39 cv
cp
1 1 1 rgb
f
313.962 408.011 mo
312.809 412.17 310.522 419.394 307.597 428.274 cv
296.219 462.827 275.179 522.466 273.361 524.256 cv
270.83 526.746 188.955 504.906 178.813 484.867 cv
176.326 479.95 186.554 457.547 203.667 442.022 cv
221.016 426.283 233.94 346.173 240.608 328.563 cv
244.327 318.75 254.531 302.575 262.418 295.848 cv
266.428 292.43 277.98 288.463 280.929 280.767 cv
280.929 280.767 303.322 298.873 308.088 313.626 cv
310.988 322.603 315.251 332.608 317.181 341.839 cv
319.372 352.313 319.922 364.121 319.217 375.776 cv
318.53 387.109 316.664 398.306 313.962 408.011 cv
cp
.25098 .286275 .27451 rgb
f
252.331 445.225 mo
250.66 448.607 248.855 451.917 246.98 455.189 cv
259.979 462.98 272.013 467.998 288.173 469.213 cv
289.02 457.948 li
274.766 456.877 264.323 452.471 252.331 445.225 cv
cp
.160784 .176471 .168627 rgb
f
313.962 408.011 mo
312.809 412.17 252.277 368.111 261.669 322.018 cv
319.217 375.776 li
318.53 387.109 316.664 398.306 313.962 408.011 cv
cp
f
477.763 334.44 mo
475.753 334.729 475.241 337.052 474.253 338.842 cv
475.526 335.826 478.903 330.597 476.648 327.596 cv
475.401 328.138 474.632 329.139 474.04 330.282 cv
474.456 329.127 474.781 327.893 474.833 326.714 cv
471.609 323.899 463.314 342.33 460.888 348.294 cv
457.541 356.521 454.258 367.923 444.335 367.615 cv
442.332 379.552 li
444.742 378.169 454.023 377.713 458.602 375.851 cv
465.154 373.187 466.671 371.892 468.499 365.189 cv
469.87 360.158 471.538 354.621 473.274 349.653 cv
474.723 345.509 479.07 335.278 477.763 334.44 cv
cp
1 .698039 .470588 rgb
f
456.205 362.831 mo
462.263 352.113 li
463.089 349.634 466.03 341.08 462.729 339.237 cv
460.853 340.644 459.43 344.273 458.208 346.302 cv
456.786 348.666 455.538 350.529 455.357 353.305 cv
455.161 356.327 455.388 359.688 454.971 362.858 cv
455.382 362.843 455.793 362.834 456.205 362.831 cv
cp
f
451.847 382.151 mo
440.212 382.428 li
439.79 364.632 li
451.425 364.355 li
451.847 382.151 li
cp
1 1 1 rgb
f
447.305 363.9 mo
406.562 361.923 393.472 362.233 368.009 360.527 cv
339.18 358.596 312.296 311.492 294.058 293.979 cv
294.058 293.979 268.839 296.096 264.12 313.671 cv
260.491 327.186 255.036 339.169 265.325 347.185 cv
290.439 366.747 317.073 393.196 351.02 393.808 cv
379.522 394.32 420.683 390.961 448.158 385.406 cv
447.305 363.9 li
cp
.25098 .286275 .27451 rgb
f
345.634 215.269 mo
336.233 220.857 li
335.597 227.396 337.634 232.137 339.655 238.106 cv
341.577 243.783 340.639 249.843 341.788 255.369 cv
346.25 251.184 348.594 242.104 349.726 236.063 cv
351.092 228.772 348.459 221.613 345.634 215.269 cv
cp
.176471 .113725 .0862745 rgb
f
336.659 261.812 mo
335.626 253.896 348.393 243.88 350.669 254.164 cv
351.515 257.98 348.464 265.679 344.619 267.95 cv
340.533 270.363 337.354 266.965 335.249 266.746 cv
336.659 261.812 li
cp
1 .698039 .470588 rgb
f
347.235 254.841 mo
347.068 255.037 li
346.401 254.12 344.124 254.393 343.076 255.443 cv
341.769 256.754 342.24 257.538 342.696 258.788 cv
343.184 260.115 344.615 265.596 340.938 263.126 cv
335.783 259.663 344.967 248.708 347.235 254.841 cv
cp
.898039 .501961 .305882 rgb
f
337.352 277.325 mo
341.421 265.436 342.849 258.127 342.941 242.294 cv
343.003 231.807 339.733 216.357 333.359 211.547 cv
320.118 201.555 308.229 206.484 295.614 217.063 cv
288.438 262.485 288.631 255.335 288.207 262.533 cv
286.907 284.642 307.815 294.552 313.199 295.449 cv
335.886 299.227 335.12 283.847 337.352 277.325 cv
cp
1 .698039 .470588 rgb
f
313.743 254.793 mo
310.706 254.532 li
310.659 254.528 li
304.687 254.023 li
304.62 254.015 li
301.751 253.772 li
301.313 252.096 302.545 249.752 304.262 248.215 cv
304.86 247.671 305.529 247.226 306.202 246.956 cv
306.78 246.71 307.364 246.598 307.915 246.651 cv
309.734 246.82 310.94 247.758 311.775 249.03 cv
311.916 249.25 312.056 249.477 312.178 249.715 cv
312.177 249.722 li
312.992 251.287 313.392 253.191 313.743 254.793 cv
cp
1 1 1 rgb
f
312.178 249.715 mo
312.177 249.722 li
311.809 251.319 311.34 253.094 310.706 254.532 cv
310.659 254.528 li
304.687 254.023 li
304.62 254.015 li
304.188 252.298 304.19 250.175 304.262 248.215 cv
304.86 247.671 305.529 247.226 306.202 246.956 cv
306.78 246.71 307.364 246.598 307.915 246.651 cv
309.734 246.82 310.94 247.758 311.775 249.03 cv
311.916 249.25 312.056 249.477 312.178 249.715 cv
cp
.188235 .141176 .105882 rgb
f
306.239 251.066 mo
306.44 252.052 306.356 252.894 306.052 252.949 cv
305.747 253.004 305.338 252.251 305.138 251.268 cv
304.935 250.283 305.02 249.441 305.324 249.387 cv
305.626 249.33 306.038 250.083 306.239 251.066 cv
cp
1 1 1 rgb
f
332.25 255.689 mo
332.75 255.732 li
334.38 255.881 li
334.431 255.886 li
338.869 256.287 li
338.904 256.29 li
341.16 256.5 li
340.785 254.909 340.347 253.019 339.632 251.473 cv
339.633 251.468 li
339.522 251.232 339.402 251.012 339.28 250.791 cv
338.573 249.541 337.611 248.628 336.261 248.491 cv
335.847 248.445 335.423 248.567 335.017 248.818 cv
334.54 249.104 334.084 249.559 333.679 250.11 cv
332.998 251.036 332.464 252.237 332.232 253.406 cv
332.079 254.216 332.067 255.009 332.25 255.689 cv
cp
f
332.232 253.406 mo
332.387 254.231 332.565 255.022 332.75 255.732 cv
332.765 255.79 li
334.38 255.881 li
334.431 255.886 li
338.869 256.287 li
338.904 256.29 li
339.264 254.849 339.478 253.071 339.632 251.473 cv
339.633 251.468 li
339.522 251.232 339.402 251.012 339.28 250.791 cv
338.573 249.541 337.611 248.628 336.261 248.491 cv
335.847 248.445 335.423 248.567 335.017 248.818 cv
334.54 249.104 334.084 249.559 333.679 250.11 cv
332.998 251.036 332.464 252.237 332.232 253.406 cv
cp
.188235 .141176 .105882 rgb
f
334.945 253.2 mo
334.899 254.201 334.678 255.013 334.449 255.012 cv
334.22 255.011 334.073 254.199 334.12 253.199 cv
334.166 252.2 334.389 251.389 334.617 251.389 cv
334.846 251.388 334.992 252.2 334.945 253.2 cv
cp
1 1 1 rgb
f
299.613 239.634 mo
299.633 239.457 299.637 239.278 299.646 239.102 cv
303.88 235.858 310.763 236.527 316.547 239.565 cv
317.892 241.158 317.061 244.538 316.156 246.235 cv
313.438 245.901 302.97 245.057 298.656 244.322 cv
299.078 242.779 299.432 241.223 299.613 239.634 cv
cp
.266667 .176471 .133333 rgb
f
333.226 241.018 mo
337.854 238.471 343.604 240.461 346.531 241.258 cv
346.696 242.85 346.822 244.442 346.918 246.036 cv
344.353 246.646 334.554 247.093 332.171 247.322 cv
331.82 245.688 331.518 242.507 333.226 241.018 cv
cp
f
327.303 266.618 mo
326.788 264.933 li
326.35 263.23 li
326.231 262.654 326.138 262.075 326.007 261.499 cv
325.749 259.75 li
325.561 257.981 li
325.534 257.388 325.469 256.792 325.436 256.194 cv
325.421 255.6 325.372 254.998 325.351 254.396 cv
325.331 253.788 325.306 253.182 325.267 252.574 cv
325.137 253.168 325.025 253.764 324.918 254.358 cv
324.839 254.96 324.752 255.567 324.689 256.175 cv
324.645 256.782 324.603 257.395 324.58 258.006 cv
324.576 258.618 324.583 259.234 324.591 259.847 cv
324.749 261.693 li
324.834 262.307 324.944 262.912 325.051 263.523 cv
325.197 264.122 325.325 264.729 325.487 265.325 cv
325.487 265.325 325.647 266.76 325.34 266.997 cv
325.192 267.129 325.016 267.2 324.849 267.296 cv
324.343 267.57 li
324.177 267.673 323.996 267.738 323.814 267.801 cv
323.272 268.012 li
322.914 268.161 322.519 268.222 322.139 268.335 cv
321.367 268.521 320.559 268.646 319.75 268.803 cv
319.342 268.888 318.936 268.971 318.534 269.068 cv
318.13 269.181 317.735 269.313 317.343 269.439 cv
317.759 269.429 318.169 269.419 318.574 269.397 cv
318.987 269.402 319.396 269.397 319.804 269.393 cv
320.217 269.399 320.625 269.399 321.041 269.385 cv
321.667 269.357 li
321.877 269.345 322.085 269.351 322.297 269.311 cv
322.717 269.237 323.146 269.217 323.562 269.099 cv
323.979 268.975 324.417 268.908 324.81 268.708 cv
325.411 268.435 li
325.609 268.339 325.82 268.262 325.998 268.132 cv
326.368 267.893 326.732 267.643 327.095 267.389 cv
327.461 267.133 li
327.303 266.618 li
cp
.898039 .501961 .305882 rgb
f
332.881 275.271 mo
332.881 275.271 330.523 278.459 327.237 280.661 cv
325.421 281.877 323.317 282.803 321.17 282.719 cv
315.153 282.483 311.081 274.421 311.081 274.421 cv
311.081 274.421 315.755 276.625 321.774 276.86 cv
324.15 276.952 326.384 276.724 328.214 276.413 cv
331.019 275.941 332.881 275.271 332.881 275.271 cv
cp
f
328.214 276.413 mo
327.81 277.771 327.468 279.199 327.237 280.661 cv
325.421 281.877 323.317 282.803 321.17 282.719 cv
315.153 282.483 311.081 274.421 311.081 274.421 cv
311.081 274.421 315.755 276.625 321.774 276.86 cv
324.15 276.952 326.384 276.724 328.214 276.413 cv
cp
1 1 1 rgb
f
348.319 215.261 mo
346.542 220.225 341.548 225.269 336.673 227.371 cv
326.095 231.921 316.745 229.149 306.882 225.51 cv
305.563 240.897 295.595 232.058 293.753 238.139 cv
292.702 241.606 294.041 256.376 292.988 259.806 cv
292.265 262.162 289.195 259.561 289.775 260.659 cv
284.296 254.397 li
284.042 250.169 282.06 249.622 280.693 245.458 cv
279.117 240.64 277.854 232.528 276.629 227.524 cv
275.727 223.834 276.138 220.701 277.753 218.502 cv
279.239 216.472 281.754 215.235 285.206 215.066 cv
289.417 202.999 303.41 194.423 316.109 195.937 cv
327.747 197.321 339.098 201.716 350.849 198.633 cv
350.922 199.751 350.935 200.901 350.891 202.067 cv
350.721 206.566 349.736 211.291 348.319 215.261 cv
cp
.266667 .176471 .133333 rgb
f
348.319 215.261 mo
346.542 220.225 341.548 225.269 336.673 227.371 cv
326.095 231.921 316.745 229.149 306.882 225.51 cv
305.563 240.897 295.595 232.058 293.753 238.139 cv
292.702 241.606 294.041 256.376 292.988 259.806 cv
292.265 262.162 289.195 259.561 289.775 260.659 cv
284.296 254.397 li
284.042 250.169 282.06 249.622 280.693 245.458 cv
279.117 240.64 277.854 232.528 276.629 227.524 cv
275.727 223.834 276.138 220.701 277.753 218.502 cv
277.761 218.867 277.789 219.235 277.829 219.599 cv
278.414 224.788 280.313 228.939 285.677 230.096 cv
296.367 232.396 299.917 218.971 301.206 210.904 cv
310.363 216.541 325.038 216.293 334.919 212.009 cv
339.975 209.815 346.083 206.448 350.891 202.067 cv
350.721 206.566 349.736 211.291 348.319 215.261 cv
cp
.176471 .113725 .0862745 rgb
f
290.491 256.606 mo
291.213 247.557 277.121 241.466 275.146 253.463 cv
274.413 257.912 278.2 265.668 282.58 267.194 cv
287.231 268.815 287.547 263.781 289.87 262.996 cv
290.491 256.606 li
cp
1 .698039 .470588 rgb
f
278.982 253.325 mo
279.181 253.498 li
279.869 252.313 282.406 252.026 283.621 252.922 cv
285.138 254.037 284.659 255.029 284.218 256.533 cv
283.751 258.132 282.457 264.582 286.399 260.892 cv
291.922 255.721 281.169 245.936 278.982 253.325 cv
cp
.898039 .501961 .305882 rgb
f
650.06 271.505 mo
641.424 237.297 li
641.424 237.297 786.585 172.295 854.237 276.288 cv
926.629 387.525 830.107 608.576 830.107 608.576 cv
778.511 601.327 li
778.511 601.327 898.196 268.645 650.06 271.505 cv
cp
.129412 .352941 .376471 rgb
f
523.304 505.368 mo
523.951 509.882 525.336 514.76 527.278 519.515 cv
532.197 531.645 540.716 542.992 549.776 545.551 cv
564.149 549.645 597.904 531.238 602.194 516.91 cv
603.835 511.448 598.386 503.547 598.386 494.457 cv
598.386 485.397 631.737 451.986 645.086 441.467 cv
652.476 435.643 672.491 428.615 690.686 408.495 cv
690.686 408.495 697.052 404.867 702.832 405.364 cv
708.068 405.814 712.839 409.667 711.936 422.7 cv
711.59 427.742 707.511 436.622 701.161 447.88 cv
684.922 476.684 653.708 520.945 631.722 555.529 cv
615.619 580.856 604.452 600.979 607.747 606.036 cv
615.604 618.09 625.16 623.658 628.29 625.254 cv
628.411 625.314 628.516 625.373 628.621 625.42 cv
629.089 625.644 629.344 625.75 629.344 625.75 cv
629.344 666.368 li
605.987 688.809 587.295 687.919 578.521 700.004 cv
578.341 700.245 578.175 700.487 578.01 700.728 cv
576.881 702.413 578.01 708.84 578.01 708.84 cv
577.769 708.899 577.543 708.974 577.317 709.034 cv
565.564 712.405 561.695 718.395 561.695 718.395 cv
561.695 764.205 li
561.695 764.205 561.756 764.389 561.952 764.719 cv
555.435 764.719 li
547.399 764.719 540.883 771.234 540.883 779.257 cv
540.883 787.292 547.399 793.81 555.435 793.81 cv
843.379 793.81 li
851.415 793.81 857.933 787.292 857.933 779.257 cv
857.933 771.234 851.415 764.719 843.379 764.719 cv
837.781 764.719 li
837.978 764.389 838.037 764.205 838.037 764.205 cv
838.066 764.205 li
838.066 718.395 li
838.066 718.395 837.044 716.83 834.484 714.858 cv
832.063 712.947 828.18 710.675 822.399 709.034 cv
822.175 708.959 821.948 708.899 821.707 708.84 cv
821.707 708.84 822.836 702.413 821.707 700.728 cv
821.543 700.487 821.377 700.245 821.195 700.004 cv
812.422 687.919 793.746 688.809 770.389 666.368 cv
770.389 625.75 li
770.389 625.75 770.719 625.601 771.337 625.254 cv
780.487 620.167 852.409 573.437 830.09 369.861 cv
823.364 308.624 785.634 267.236 723.66 262.12 cv
722.636 262.031 721.612 261.955 720.59 261.896 cv
721.538 261.097 722.457 260.285 723.345 259.473 cv
726.188 256.854 728.642 254.22 730.191 251.752 cv
736.844 241.187 729.213 202.795 729.213 202.795 cv
729.213 202.795 721.222 212.698 712.869 223.443 cv
705.569 232.835 698.001 242.873 695.216 247.522 cv
692.764 251.586 693.199 257.141 694.538 262.272 cv
687.18 262.949 679.655 264.076 671.949 265.717 cv
664.771 267.178 657.442 269.118 650.053 271.496 cv
650.053 271.496 629.344 284.891 623.144 293.47 cv
616.838 302.228 601.728 326.879 601.728 335.021 cv
601.728 343.133 543.306 456.833 543.306 456.833 cv
543.306 456.833 525.049 485.202 523.246 495.421 cv
522.731 498.34 522.777 501.74 523.304 505.368 cv
cp
.298039 .537255 .576471 rgb
f
523.304 505.368 mo
586.121 373.91 724.487 336.526 724.487 276.599 cv
724.487 271.693 724.218 266.86 723.66 262.12 cv
723.568 261.233 723.465 260.345 723.345 259.473 cv
721.627 246.727 718.047 234.625 712.869 223.443 cv
705.569 232.835 698.001 242.873 695.216 247.522 cv
692.764 251.586 693.199 257.141 694.538 262.272 cv
687.18 262.949 679.655 264.076 671.949 265.717 cv
664.771 267.178 657.442 269.118 650.053 271.496 cv
650.053 271.496 629.344 284.891 623.144 293.47 cv
616.838 302.228 601.728 326.879 601.728 335.021 cv
601.728 343.133 543.306 456.833 543.306 456.833 cv
543.306 456.833 525.049 485.202 523.246 495.421 cv
522.731 498.34 522.777 501.74 523.304 505.368 cv
cp
.360784 .713726 .74902 rgb
f
636.475 324.493 mo
636.015 334.925 628.126 357.69 624.663 360.38 cv
621.654 364.896 li
621.297 353.486 611.803 325.302 636.475 324.493 cv
cp
.129412 .352941 .376471 rgb
f
822.399 709.034 mo
822.175 708.959 821.948 708.899 821.707 708.84 cv
821.707 708.84 822.836 702.413 821.707 700.728 cv
821.543 700.487 821.377 700.245 821.195 700.004 cv
578.521 700.004 li
578.341 700.245 578.175 700.487 578.01 700.728 cv
576.881 702.413 578.01 708.84 578.01 708.84 cv
577.769 708.899 577.543 708.974 577.317 709.034 cv
822.399 709.034 li
cp
f
561.695 755.177 mo
561.695 764.205 li
838.066 764.205 li
838.066 755.177 li
561.695 755.177 li
cp
f
628.29 625.254 mo
628.969 625.601 629.344 625.75 629.344 625.75 cv
629.344 638.301 li
770.389 638.301 li
770.389 625.75 li
770.389 625.75 770.719 625.601 771.337 625.254 cv
628.29 625.254 li
cp
f
552.927 778.76 mo
552.927 782.084 555.622 784.779 558.946 784.779 cv
750.076 784.779 li
753.401 784.779 756.097 782.084 756.097 778.76 cv
756.097 775.434 753.401 772.74 750.076 772.74 cv
558.946 772.74 li
555.622 772.74 552.927 775.434 552.927 778.76 cv
cp
.360784 .713726 .74902 rgb
f
573.495 723.829 mo
573.495 727.568 576.526 730.6 580.267 730.6 cv
711.198 730.6 li
714.938 730.6 717.971 727.568 717.971 723.829 cv
717.971 720.089 714.938 717.056 711.198 717.056 cv
580.267 717.056 li
576.526 717.056 573.495 720.089 573.495 723.829 cv
cp
f
607.747 606.036 mo
615.604 618.09 625.16 623.658 628.29 625.254 cv
628.411 625.314 628.516 625.373 628.621 625.42 cv
667.856 626.202 712.99 598.978 734.195 572.609 cv
757.807 543.246 763.843 498.385 760.08 462.341 cv
758.364 446.071 755.234 430.496 746.941 416.02 cv
741.93 407.289 730.011 391.983 722.486 381.45 cv
702.832 405.364 li
708.068 405.814 712.839 409.667 711.936 422.7 cv
711.59 427.742 707.511 436.622 701.161 447.88 cv
684.922 476.684 653.708 520.945 631.722 555.529 cv
615.619 580.856 604.452 600.979 607.747 606.036 cv
cp
f
527.278 519.515 mo
532.197 531.645 540.716 542.992 549.776 545.551 cv
564.149 549.645 597.904 531.238 602.194 516.91 cv
603.835 511.448 598.386 503.547 598.386 494.457 cv
598.386 485.397 631.737 451.986 645.086 441.467 cv
652.476 435.643 672.491 428.615 690.686 408.495 cv
690.686 408.495 713.848 395.311 711.936 422.7 cv
711.59 427.742 707.511 436.622 701.161 447.88 cv
701.417 447.667 li
706.337 437.601 723.586 416.29 725.467 398.004 cv
728.023 373.022 705.661 375.158 689.331 387.093 cv
661.596 407.381 629.54 435.81 594.564 412.903 cv
583.082 425.937 557.708 479.106 556.94 492.817 cv
556.397 502.644 554.608 512.847 543.697 515.241 cv
543.246 508.424 543.545 501.304 543.095 494.471 cv
535.509 498.489 530.228 508.498 527.278 519.515 cv
cp
.129412 .352941 .376471 rgb
f
1046.45 599.155 mo
1059.18 619.881 1110.46 682.708 1147.44 726.286 cv
1166.71 748.981 1182.09 766.46 1186.13 770.044 cv
1189.4 768.211 1190.28 767.13 1192.37 764.562 cv
1175.95 734.931 1152.63 683.221 1143.31 667.118 cv
1133.7 650.509 1117.77 632.371 1107.43 616.003 cv
1096.72 599.041 1080.22 586.665 1069.19 570.213 cv
1057.6 584.961 li
1046.45 599.155 li
cp
1 .698039 .470588 rgb
f
1182.91 783.876 mo
1183.92 779.001 1183.72 772.104 1182.9 767.272 cv
1191.29 761.968 li
1192.87 763.827 1197.91 765.49 1199.03 768.477 cv
1199.97 770.985 1192.68 790.935 1191.83 791.889 cv
1190.02 793.922 1183.61 793.791 1181.16 793.809 cv
1178.69 793.828 1173.1 793.319 1171.13 791.774 cv
1174.53 790.62 1182.02 788.093 1182.91 783.876 cv
cp
.996078 .996078 .996078 rgb
f
1046.45 599.155 mo
1059.18 619.881 1110.46 682.708 1147.44 726.286 cv
1140.97 716.473 1130.19 702.267 1128.45 699.573 cv
1120.06 686.643 1110.48 674.533 1101.89 661.598 cv
1092.97 648.154 1085.26 633.961 1076.68 620.252 cv
1071.74 612.348 1056.45 593.026 1057.96 584.91 cv
1057.6 584.961 li
1046.45 599.155 li
cp
.898039 .501961 .305882 rgb
f
937.481 613.539 mo
945.979 639.339 988.198 742.929 1000.83 777.336 cv
1001.36 778.778 1001.83 780.103 1002.25 781.295 cv
1007.47 780.426 1006.8 782.728 1011.17 779.182 cv
1011.06 778.279 1010.95 777.297 1010.82 776.229 cv
1009.18 761.642 1006.82 732.11 1002.82 702.646 cv
998.22 668.767 991.465 634.981 981.188 624.106 cv
985.024 619.486 988.878 614.493 992.623 609.28 cv
1000.07 598.937 1007.11 587.753 1012.82 577.063 cv
1012.9 576.901 li
1013.5 575.776 1014.08 574.661 1014.65 573.55 cv
968.955 562.124 li
964.796 567.133 960.111 574.338 955.573 581.891 cv
955.464 582.076 li
948.124 594.294 941.18 607.383 937.481 613.539 cv
cp
1 .698039 .470588 rgb
f
955.464 582.076 mo
968.166 582.825 982.019 596.112 992.623 609.28 cv
1000.07 598.937 1007.11 587.753 1012.82 577.063 cv
955.573 581.891 li
955.464 582.076 li
cp
.898039 .501961 .305882 rgb
f
1000.26 777.398 mo
1010.96 776.215 li
1012.45 780.738 1015.45 786.354 1014.39 792.955 cv
1003.06 793.188 990.576 793.168 979.147 793.81 cv
985.958 789.146 997.605 784.828 1000.26 777.398 cv
cp
.996078 .996078 .996078 rgb
f
983.854 539.824 mo
995.891 523.497 1014.15 501.446 1014.49 480.015 cv
1080 474.319 li
1084.12 485.763 1090.5 495.932 1093.57 508.496 cv
1096.2 519.306 1097.36 532.202 1095.68 543.401 cv
1091.91 568.489 1106.75 588.572 1112.77 612.467 cv
1114.41 618.995 1069.22 626.786 1058.63 624.399 cv
1030.87 618.145 1014.64 608.036 992.578 599.457 cv
980.002 594.566 964.132 588.542 950.483 589.521 cv
960.738 572.548 972.05 555.84 983.854 539.824 cv
cp
.0117647 .0941176 .129412 rgb
f
1030.33 336.203 mo
1028.09 340.408 1009.84 355.894 999.167 361.784 cv
997.107 360.432 995.006 359.546 993.329 359.812 cv
992.127 360.194 990.938 360.745 989.791 361.437 cv
987.905 357.007 991.487 349.188 991.571 345.306 cv
991.594 344.376 991.479 343.407 991.272 342.405 cv
990.755 339.91 989.633 337.242 988.398 334.633 cv
987.055 331.78 985.567 329.023 984.579 326.668 cv
983.741 324.676 982.708 322.708 982.103 320.603 cv
1014.57 288.233 li
1012.58 290.441 1012.48 298.022 1012.89 304.913 cv
1013.16 309.354 1013.65 313.528 1013.96 315.759 cv
1014.75 321.391 1018.55 326.383 1022.71 330.272 cv
1025.33 332.721 1028.08 334.732 1030.33 336.203 cv
cp
1 .698039 .470588 rgb
f
1014.56 288.232 mo
1012.58 290.441 1012.49 298.021 1012.89 304.911 cv
1011 309.099 1008.8 313.046 1006.37 317.192 cv
1002.99 322.959 995.049 331.118 988.396 334.632 cv
987.052 331.782 985.565 329.024 984.58 326.672 cv
983.741 324.674 982.708 322.708 982.1 320.604 cv
1014.56 288.232 li
cp
.898039 .501961 .305882 rgb
f
1031.3 222.76 mo
1023.86 216.954 1015.47 219.165 1009.24 225.074 cv
1005.9 228.246 1002.29 231.115 998.576 233.738 cv
996.188 235.422 990.562 240.453 987.513 239.157 cv
1010.51 256.007 li
1011.5 256.744 1012.47 257.234 1013.63 257.706 cv
1023.02 261.519 1033.69 254.299 1036.97 245.537 cv
1040.07 237.274 1038.43 228.323 1031.3 222.76 cv
cp
.309804 .176471 .203922 rgb
f
1007.07 242.24 mo
1000.21 256.231 li
999.558 257.563 li
998.034 257.839 996.447 258.354 994.834 259.054 cv
988.025 262 980.755 268.144 975.969 272.658 cv
973.782 274.722 971.326 277.746 968.994 280.63 cv
964.603 286.03 960.621 290.93 959.54 288.009 cv
951.472 266.271 956.448 251.411 967.441 242.104 cv
987.844 224.831 1003.43 241.675 1007.07 242.24 cv
cp
.4 .239216 .262745 rgb
f
1011.38 265.73 mo
1007.98 263.823 1004.94 260.991 1002.01 258.15 cv
1001.39 257.551 1000.8 256.906 1000.21 256.231 cv
997.705 253.337 995.463 249.917 992.922 247.125 cv
986.764 246.051 980.085 246.68 974.96 248.765 cv
968.981 251.199 965.249 259.265 962.82 269.844 cv
960.715 278.995 959.985 285.212 959.218 296.103 cv
958.595 305.002 968.369 320.262 974.126 327.582 cv
980.058 335.128 999.343 321.121 1005.36 315.428 cv
1011.37 309.751 1014.11 304.581 1014.88 297.267 cv
1014.95 296.547 1015.01 295.807 1015.05 295.045 cv
1015.72 281.853 1013.58 273.021 1011.38 265.73 cv
cp
1 .698039 .470588 rgb
f
969.127 279.59 mo
968.851 280.254 968.972 281.261 969.422 281.823 cv
968.201 281.623 967.028 280.259 967.302 278.906 cv
967.132 279.649 966.969 280.487 967.41 281.134 cv
966.478 281.276 965.388 280.304 965.114 279.591 cv
965.513 281.806 966.747 281.858 967.909 283.079 cv
969.089 283.872 970.268 284.609 971.4 285.204 cv
971.178 283.31 968.688 281.772 969.127 279.59 cv
cp
.0705882 .0862745 .0980392 rgb
f
965.067 284.126 mo
963.71 286.993 963.662 291.131 963.665 291.124 cv
963.552 291.665 963.427 291.543 963.514 292.166 cv
967.404 292.863 971.159 292.827 974.432 291.695 cv
974.09 288.517 968.246 277.657 965.067 284.126 cv
cp
.898039 .501961 .305882 rgb
f
963.686 291.283 mo
963.802 291.245 964.065 291.255 964.444 291.267 cv
964.939 291.311 965.646 291.319 966.443 291.297 cv
967.933 291.244 969.748 291.079 971.157 290.79 cv
971.983 290.658 972.677 290.548 973.14 290.617 cv
972.403 289.087 971.553 287.487 970.618 286.123 cv
969.337 284.255 967.909 282.813 966.411 282.664 cv
966.069 282.645 965.757 282.886 965.478 283.307 cv
964.518 284.735 963.919 288.19 963.725 289.982 cv
963.726 289.987 li
963.666 290.571 963.65 291.028 963.686 291.283 cv
cp
1 1 1 rgb
f
965.738 288.548 mo
965.914 289.511 966.153 290.429 966.443 291.297 cv
967.933 291.244 969.748 291.079 971.157 290.79 cv
971.983 290.658 972.677 290.548 973.14 290.617 cv
972.403 289.087 971.553 287.487 970.618 286.123 cv
969.337 284.255 967.909 282.813 966.411 282.664 cv
966.069 282.645 965.757 282.886 965.478 283.307 cv
965.325 284.922 965.398 286.706 965.738 288.548 cv
cp
.0705882 .0862745 .0980392 rgb
f
969.808 288.688 mo
969.924 289.324 970.278 289.795 970.598 289.736 cv
970.916 289.677 971.08 289.112 970.962 288.475 cv
970.845 287.836 970.491 287.366 970.172 287.425 cv
969.854 287.483 969.689 288.048 969.808 288.688 cv
cp
1 1 1 rgb
f
996.29 279.918 mo
995.99 280.586 996.106 281.594 996.577 282.153 cv
995.287 281.965 994.059 280.61 994.363 279.252 cv
994.176 279.999 993.994 280.839 994.453 281.482 cv
993.464 281.636 992.318 280.674 992.037 279.963 cv
992.436 282.176 993.743 282.217 994.96 283.426 cv
996.203 284.208 997.443 284.935 998.638 285.519 cv
998.422 283.621 995.801 282.109 996.29 279.918 cv
cp
.0705882 .0862745 .0980392 rgb
f
991.938 284.507 mo
990.468 287.396 990.371 291.542 990.373 291.535 cv
990.249 292.079 990.117 291.957 990.202 292.581 cv
994.317 293.236 998.299 293.158 1001.78 291.989 cv
1001.45 288.808 995.379 277.989 991.938 284.507 cv
cp
.898039 .501961 .305882 rgb
f
990.394 291.694 mo
990.518 291.655 990.797 291.662 991.199 291.67 cv
991.723 291.707 992.472 291.71 993.317 291.678 cv
994.896 291.608 996.821 291.422 998.319 291.117 cv
999.196 290.977 999.932 290.857 1000.42 290.924 cv
999.658 289.397 998.773 287.803 997.799 286.448 cv
996.462 284.59 994.965 283.161 993.379 283.027 cv
993.015 283.012 992.682 283.257 992.381 283.682 cv
991.347 285.124 990.676 288.593 990.45 290.391 cv
990.451 290.396 li
990.381 290.981 990.36 291.438 990.394 291.694 cv
cp
1 1 1 rgb
f
992.6 288.932 mo
992.776 289.893 993.019 290.811 993.317 291.678 cv
994.896 291.608 996.821 291.422 998.319 291.117 cv
999.196 290.977 999.932 290.857 1000.42 290.924 cv
999.658 289.397 998.773 287.803 997.799 286.448 cv
996.462 284.59 994.965 283.161 993.379 283.027 cv
993.015 283.012 992.682 283.257 992.381 283.682 cv
992.201 285.303 992.26 287.089 992.6 288.932 cv
cp
.0705882 .0862745 .0980392 rgb
f
996.911 289.024 mo
997.028 289.663 997.398 290.13 997.737 290.067 cv
998.076 290.006 998.255 289.438 998.138 288.799 cv
998.02 288.16 997.65 287.694 997.313 287.757 cv
996.974 287.818 996.794 288.387 996.911 289.024 cv
cp
1 1 1 rgb
f
971.963 273.896 mo
969.093 269.545 963.864 272.613 962.779 277.004 cv
963.659 274.802 965.551 274.737 967.454 275.249 cv
968.326 275.483 973.289 276.06 971.963 273.896 cv
cp
.309804 .176471 .203922 rgb
f
989.928 273.665 mo
992.818 268.783 1000.44 270.668 1002.83 274.738 cv
1001.18 272.768 998.649 273.11 996.226 274.021 cv
995.112 274.438 988.627 276.069 989.928 273.665 cv
cp
f
975.833 303.411 mo
977.666 300.336 978.649 295.819 978.239 293.621 cv
978.239 293.621 975.546 301.703 973.492 303.759 cv
975.518 304.794 977.413 306.652 979.664 304.892 cv
978.481 305.324 976.483 304.754 975.833 303.411 cv
cp
.898039 .501961 .305882 rgb
f
1032.11 264.608 mo
1032.1 267.583 1031.72 270.517 1030.98 273.226 cv
1027.86 284.745 1018.98 293.149 1010.79 301.376 cv
1010.28 290.232 1014.46 281.39 1008.66 270.284 cv
1005.46 264.17 1001.12 263.285 995.813 259.77 cv
995.48 259.55 995.156 259.309 994.834 259.054 cv
993.065 257.674 991.49 255.835 990.564 253.829 cv
989.799 252.194 986.51 246.389 986.386 246.285 cv
986.386 246.285 987.205 245.096 988.78 243.532 cv
988.872 243.444 988.964 243.352 989.055 243.256 cv
990.476 241.877 992.452 240.246 994.934 238.89 cv
1000.86 235.64 1009.67 233.899 1020.76 240.622 cv
1025.65 243.591 1028.9 248.586 1030.63 254.224 cv
1031.64 257.555 1032.13 261.107 1032.11 264.608 cv
cp
.4 .239216 .262745 rgb
f
992.922 247.125 mo
986.764 246.051 980.085 246.68 974.96 248.765 cv
968.981 251.199 965.249 259.265 962.82 269.844 cv
962.478 269.539 li
959.93 267.134 963.778 255.832 965.462 252.415 cv
968.006 247.265 973.277 243.981 978.555 242.389 cv
982.755 241.116 986.016 241.809 988.78 243.532 cv
990.287 244.47 991.645 245.716 992.922 247.125 cv
cp
.309804 .176471 .203922 rgb
f
1032.11 264.608 mo
1032.1 267.583 1031.72 270.517 1030.98 273.226 cv
1027.86 284.745 1018.98 293.149 1010.79 301.376 cv
1005.86 283.388 1014.46 281.39 1008.66 270.284 cv
1005.46 264.17 1001.12 263.285 995.813 259.77 cv
995.48 259.55 995.156 259.309 994.834 259.054 cv
993.065 257.674 991.49 255.835 990.564 253.829 cv
989.799 252.194 986.51 246.389 986.386 246.285 cv
986.386 246.285 987.205 245.096 988.78 243.532 cv
988.872 243.444 988.964 243.352 989.055 243.256 cv
994.485 246.581 996.26 253.926 1001.76 257.66 cv
1008.63 262.301 1019.45 262.367 1026.4 257.768 cv
1027.88 256.788 1029.32 255.592 1030.63 254.224 cv
1031.64 257.555 1032.13 261.107 1032.11 264.608 cv
cp
f
1025.85 295.216 mo
1025.43 291.456 1021.81 288.452 1018.26 290.043 cv
1007.83 294.707 1011.46 304.202 1011.46 304.202 cv
1012.23 307.936 1018.06 307.394 1020.5 305.826 cv
1023.6 303.836 1026.25 298.847 1025.85 295.216 cv
cp
1 .698039 .470588 rgb
f
1016.78 293.966 mo
1015.74 295.796 1013.92 299.875 1013.92 299.875 cv
1013.7 302.917 1019.86 301.833 1019.93 298.232 cv
1019.97 296.623 1018.17 295.375 1020.06 294.149 cv
1021.36 293.306 1022.78 294.209 1023.52 295.341 cv
1023.64 291.895 1018.43 291.088 1016.78 293.966 cv
cp
.898039 .501961 .305882 rgb
f
982.852 313.189 mo
981.889 314.329 980.449 317.469 976.244 317.5 cv
973.961 317.517 973.675 314.717 973.113 313.637 cv
972.566 312.595 983.771 312.107 982.852 313.189 cv
cp
1 .133333 .113725 rgb
f
972.815 312.407 mo
973.476 312.315 973.456 311.394 974.265 311.458 cv
976.074 311.475 975.894 313.395 979.779 311.599 cv
980.382 311.321 981.27 312.309 982.56 312.112 cv
983.427 312.057 985.471 310.911 985.434 310.855 cv
979.356 317.6 972.548 314.951 970.419 311.265 cv
971.046 311.837 972.162 312.5 972.815 312.407 cv
cp
.937255 .027451 .027451 rgb
f
984.728 286.381 mo
983.403 287.698 983.781 289.644 984.331 291.043 cv
986.057 295.433 991.321 299.861 994.957 299.981 cv
995.335 299.994 995.741 299.961 996.168 299.882 cv
996.169 299.882 li
1000.14 299.151 1005.16 294.804 1006.5 290.933 cv
1007.05 289.336 1006.91 288.045 1006.07 287.092 cv
1003.77 284.476 995.985 283.141 989.738 284.289 cv
987.438 284.713 985.656 285.455 984.728 286.381 cv
cp
994.897 301.8 mo
990.165 301.643 984.422 296.246 982.638 291.709 cv
981.578 289.012 981.863 286.661 983.444 285.09 cv
984.967 283.575 987.528 282.846 989.409 282.5 cv
995.663 281.35 1004.4 282.438 1007.44 285.89 cv
1008.72 287.348 1008.99 289.3 1008.22 291.528 cv
1006.67 295.993 1001.09 300.828 996.499 301.672 cv
996.498 301.672 li
995.943 301.774 995.403 301.817 994.897 301.8 cv
cp
.0705882 .0862745 .0980392 rgb
f
954.135 286.627 mo
953.145 287.979 953.33 290.188 954.642 292.688 cv
956.64 296.494 960.604 299.771 963.126 299.702 cv
963.283 299.696 963.465 299.666 963.619 299.648 cv
966.426 299.131 970.147 295.24 971.581 291.322 cv
972.047 290.05 972.641 287.686 971.38 286.149 cv
969.632 284.02 964.49 283.045 959.674 283.931 cv
957.055 284.412 955.035 285.396 954.135 286.627 cv
cp
963.176 301.521 mo
959.553 301.621 955.088 297.453 953.031 293.534 cv
951.358 290.35 951.229 287.515 952.666 285.552 cv
953.854 283.927 956.228 282.715 959.345 282.142 cv
964.021 281.281 970.32 281.989 972.787 284.996 cv
974.146 286.651 974.325 289.121 973.291 291.948 cv
971.818 295.972 967.712 300.745 963.947 301.438 cv
963.688 301.485 963.428 301.514 963.176 301.521 cv
cp
f
983.774 288.313 mo
983.966 288.021 983.983 287.652 983.823 287.327 cv
983.317 286.297 979.314 284.479 977.993 284.375 cv
975.34 284.166 973.212 285.634 972.153 288.406 cv
973.854 289.055 li
974.392 287.646 975.521 286.004 977.851 286.188 cv
978.902 286.272 981.86 287.815 982.267 288.245 cv
982.138 288.11 982.003 287.698 982.252 287.317 cv
983.774 288.313 li
cp
f
846.272 376.673 mo
835.046 375.724 833.327 368.349 831.304 362.115 cv
829.973 358.017 828.632 352.624 827.391 348.587 cv
825.35 341.94 822.288 337.193 820.757 337.431 cv
818.97 337.669 822.583 351.637 823.818 354.836 cv
823.379 354.286 821.522 340.912 820.246 340.517 cv
815.824 341.466 821.96 362.904 823.818 366.863 cv
820.501 354.046 li
816.047 344.592 819.088 362.92 819.736 365.201 cv
820.946 369.463 822.043 371.911 823.2 376.129 cv
824.467 380.735 826.368 387.92 831.644 389.965 cv
834.166 390.943 839.894 391.072 845.763 390.835 cv
847.792 390.753 857.806 392.101 859.202 392.181 cv
856.479 378.571 li
853.782 377.331 849.278 376.927 846.272 376.673 cv
cp
.898039 .501961 .305882 rgb
f
845.505 368.432 mo
855.27 368.339 920.539 364.57 943.29 358.515 cv
965.514 352.603 983.268 344.727 1004.21 335.196 cv
1005.04 376.693 li
998.025 376.688 1003.61 383.428 996.734 384.716 cv
994.318 385.169 991.768 385.591 989.103 385.982 cv
967.006 389.239 937.435 390.468 917.283 390.657 cv
905.263 390.766 866.619 392.129 846.321 389.359 cv
846.227 387.03 846.065 384.677 845.902 382.331 cv
845.579 377.585 845.266 372.864 845.505 368.432 cv
cp
.0235294 .152941 .207843 rgb
f
1014.1 315.154 mo
1016.82 322.453 1025.98 332.596 1026.36 338.561 cv
981.506 362.058 li
980.874 358.141 980.404 349.57 978.959 344.24 cv
984.619 338.938 1008.37 319.887 1014.1 315.154 cv
cp
.988235 .988235 .988235 rgb
f
969.425 416.152 mo
976.63 425.039 986.975 432.781 991.284 443.662 cv
994.654 452.164 995.21 461.98 995.405 471.754 cv
995.485 475.604 995.505 479.439 995.628 483.189 cv
995.694 485.497 995.804 487.767 995.979 489.983 cv
997.408 507.784 998.12 519.884 998.12 519.884 cv
998.12 519.884 1089.83 514.051 1097.93 505.155 cv
1096.81 502.758 1095.6 500.155 1094.72 497.569 cv
1089.7 482.854 1078.48 473.103 1071.01 459.635 cv
1063.01 445.204 1059.58 430.85 1057.96 414.966 cv
1056.34 399.187 1055.08 384.537 1052.23 369.395 cv
1044.4 327.639 1017.13 327.621 1017.13 327.621 cv
989.059 324.662 971.793 357.437 965.917 379.891 cv
961.829 395.508 958.307 402.42 969.425 416.152 cv
cp
.027451 .192157 .286275 rgb
f
836.336 379.204 mo
825.109 378.256 823.392 370.88 821.367 364.646 cv
820.037 360.548 818.694 355.156 817.454 351.118 cv
815.412 344.472 812.351 339.726 810.82 339.963 cv
809.034 340.2 812.647 354.168 813.882 357.368 cv
813.441 356.817 811.586 343.444 810.31 343.049 cv
805.887 343.998 812.023 365.437 813.882 369.395 cv
810.565 356.577 li
806.111 347.123 809.151 365.451 809.8 367.732 cv
811.01 371.994 812.108 374.443 813.266 378.661 cv
814.529 383.267 816.433 390.452 821.706 392.497 cv
824.229 393.476 829.957 393.604 835.825 393.367 cv
837.855 393.285 847.869 394.632 849.264 394.712 cv
846.542 381.104 li
843.846 379.863 839.344 379.459 836.336 379.204 cv
cp
1 .698039 .470588 rgb
f
827.568 386.729 mo
830.042 389.728 li
828.859 389.246 828.077 388.147 827.568 386.729 cv
cp
f
820.855 357.899 mo
823.164 359.549 823.801 363.328 824.868 365.755 cv
826.076 368.5 827.146 370.706 826.979 373.825 cv
826.839 376.5 826.168 382.83 827.568 386.729 cv
821.621 379.521 li
819.544 376.197 820.709 372.012 820.855 368.365 cv
820.953 365.967 818.538 359.507 820.855 357.899 cv
cp
f
995.405 471.754 mo
995.485 475.604 995.505 479.439 995.628 483.189 cv
1005.73 482.924 1016.69 481.59 1028.45 479.184 cv
1026.17 468.018 li
1017.24 469.847 1006.47 471.46 995.405 471.754 cv
cp
.0235294 .152941 .207843 rgb
f
844.154 389.764 mo
844.393 392.294 844.631 394.834 844.803 397.35 cv
865.181 399.557 903.756 396.58 915.767 395.997 cv
935.899 395.01 965.412 392.531 987.39 388.15 cv
990.039 387.623 992.575 387.068 994.976 386.483 cv
1001.8 384.822 996.002 377.749 1003.02 377.482 cv
1000.82 332.629 li
980.198 343.751 962.715 352.96 940.7 360.218 cv
918.161 367.652 853.055 374.265 843.298 374.744 cv
843.205 379.548 843.674 384.642 844.154 389.764 cv
cp
.027451 .192157 .286275 rgb
f
844.154 389.764 mo
844.393 392.294 844.631 394.834 844.803 397.35 cv
865.181 399.557 903.756 396.58 915.767 395.997 cv
935.899 395.01 965.412 392.531 987.39 388.15 cv
987.39 388.15 889.992 391.25 875.71 391.23 cv
865.91 391.222 854.471 389.74 844.154 389.764 cv
cp
.0235294 .152941 .207843 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.1.1%%For: (Cheremisinov Oleg) ()%%Title: (business_allegory-05.eps)%%CreationDate: 28/08/2020 19:24%%Canvassize: 16383%AI9_DataStream%Gb"-6CQfd\E@(Afnitn_1a?YP;T:eM418a$pYO>;N"k%!e;W*l@r2dgeAMn-[%Ymljo5,LF5.uqZK`4^dSLR<"<6HfcZj]E+*Ts>%Z_-'dr:.`bcX)!GoCDq[eR:W=dYG+L>Y+E](X'Dflt?@cg$eBYGl)3QQVW,/mdA'[04)>>HM>;fa-Y+Z^A?eiLZ;a5]K#i_ag^i1%-\nnnSj.`#kJPR9-VscLr9X:3l0I):cgPaY^A@9>lU/Bi+U_ZKdXV$XY*$otDhuTg^]$tR?f&JF/[$<V`\W,EG;o-Rn7FY/r_L;D%qtA\RY?sG<rTrX(s7Ha[oD7'An,)5&pJ4a@\,+XkamjHJjl(=U02I%Er`UCgfZoY0^Ac);mdP]HIePu.5ObBuO)[9_47jn%LS,a(%FSOa:g;AF!hu4/sOcT=tM\@/jp%N_p`$E+jG.r=ar]eFrZLqP;r;O;UYQ"13jaP&qJ%5CDqr^a]hm"tY8QSK4g\`Q$h>Lks9,I+l%?^fcsqg<?u_*bPeHHOh5G<\7&qt%!$s6]6r2g;I4Mm$L$rpnbB-[j+gB^;\XhuEKLmaXP7GkP<I1dfd"K7<^gS%Ij(o!nJgq%NJr%o_JE74lHoI?@@1p>"7`!k<G\fIW_Uf$%N!8GJAFoQTL-mV[rRYpNJ:inFD(u'n>IR]4s@#@C!Y*0d$>D>$EK^T44(pXfZe[5/]-t%ZJ?UH_nGn6MKI_l1.HcflIiYm?Ml95J,!S]UQ43GHhH`pD=A<jW;;#APcHkDD>gZPZ[Dc<f68n7)k?s)ptKKqXB318;BC16n]gUc%GNaW#jJNq7r@_\j4Fd1/rbhY'^QH]hr*DU=5C`Y+0BMP506#8!n+iILobYr(P[FCFX-Z&"s6CL$noFR%of"Q(q<m`:m[h.Aq+A6i%S&=^oq1$Qu^Gu.]'D(^K=&5F1%HQ\lcIJ+khuD\q\!)l"Fa)2>b*Dn0s7bn^bFB<tZ!FN\o8B7/T"k2P\uhRupA9:.r5jjEY7?eX%g\p9f:\'u&dQH7nET5g?Isd#5b/!dYRY1@m.JN90L(gFk^&:73H1p76%4HSolLgcV^A?<'i3/b;s,ic?jf>F0hnS9U?iK<Xp!Z.^%^TU3nlHWa!H2U69#OYoGo>A(hrj]?k>$bcYs8M&BkKfcKqs);tIsgt^E:`A8+9$N[_onCma1X/(IQV9B*Iibnhk=sC042Efh$a1I%LX3=@mQXHGRU5SeqQ+\]V<>oQs1LPTbJ/H!cS(nTqr,/,j&tr,%,Y\nTAP(mQQKPk]n:4tngRf<deiH^2;[$)n+4R!#1)K8jo!@Z%RAc/pV)P";je&0do`*1BIt$Fb6tcJAZPR'S*5;@@g$?7e-GKEGHPhs%0E:h.q`FL>5P*'<_t:@<>4]>tb?qtl_/f'bo4%Rphn=@,%bqiK1IjHV%fHJ\+LSOcl#M"9IpYm"4A[/>TiGeD5nkY1r5/&osj<$"`;Z,P8T<!#Js%NNDj<$D4l6CbAelJ,^pt=7XY<MC6mFd8D%3D9Rhr6R)]oZIbg\X8.]>Iemq?,Rl\qBPHLo>AV]8,<q'OZrIj5/g1a*H"V^8G80gH*D_ej/_X@hu1gYGH[UNq"@I;ffd/6^t(C<%QK923A`o6SUUB$nqucu#0fY,O>^]-[/SeR]S8P+_^Fn.63lqu;_mR7&EieXZa/Rn%l\7X3jd'(dU&!j3=R3Mhl:mONe5C@IeQ5gi%b>F:#l;DYZ,nu\ajZ(A%PN<:bB)G4\k)d7r0!BOp[rS"f8WI;lO[G_)C+=8"']ni+0?M1;3R7.CLV.;:;4\=TINO1^5-Al7\)AmY%.3.H2NsRC;3D,Cri?[Y+07R80Qa$<j*bRK.r[>gH*7nN2crXT8^ag`bGP9ILo#JkWic)Bp/B:>B)elDnBp#ttrtd]$96*EJ&&J(e%Xg`>@f971Eq0TGSbL(Q63AQZ&7QZ2c@JPDK>NDX93;iDU^@(FPIb*56Rp5fuj358N)11qHU\t-hNpE/Rq0RP=DPSLqMB(k-U]#+_%*,#eom&_7?3KA.<F;YYA<Q5D99O,ra11W@Xg8u>B))auFE#qK(N!9b3$lp?Nq!M?H:,7K_EnkUN?!$qQ$V+-u$/Hq<8k'Q8<F'0P%S]aV(*p*E?jSuFFB_&XTrtkM2K(4F9+iDU#,Ka3@I(RJp43O=-n0id)nEsdC()`*7`Zmr`+-RP,c:6otND'27dE-9/5Ok@)hpBK<%aO4`\le/BqW3VAj)g@TF&nH)Bl)/T)APaagZ"#c8)"L<6s&7YL-D&\TJkV:V;sKUmnnCBR\4?]Ao<#AsOGR/;'i-S!S]p(EST$/d%F"87GUuR>GJ5a'cUkaSEGa/;K]KTWYb0]W5:l5[QCDf`W)0&F6>a.]-d])VY4J$*%]2OgRb9shbs45Zll/m(Kh(CI4_E%/-k9A(2%qKtDtjNp-#124BpGk;&[Ll@^EHSZ\?g[dC"dOhMA$jI&'"9Sl2.*=eInknt;*+'Oqf.u2:mS4aQ\F3%TL5@!3;A06>7d_H&(k8]b%'lH"4:Xk<3R)7@:SeE5EHX^4pggA&brnLUcSRhHLZH:\Z`c5IA)sJ;:[EOJ/EIUa')bs+$dkbSigD0<A=R2iZoGlU&XaIh'[)<^-%giApG\&V]$)JOHDC!ucRNauFG%Zh4:$V;`(JeK(#KVi"JcU8G$7Ckpp/@u'+,>EhEQL;R>D-_f)>&PE]W+b#7<AI?gfr2CXB$M3\%PgU4Y=__i%41$tR%aW#"U&^lFU$?4%@`78e$rnn^Q/f?IOjRbKk9@Y+bSb_"*U5V20oIcU'B_78GC_s:Hq+_':^\8B&'c"n:_O60%"a%I0("=CO/?USS/^Q53)Wui*gkhK`b\u#42\.ndF:1TE*i#m!]6WK1Yr@`X^sP*\+#PGOi3F;S2@@JaoOAld,I*<KGr46"A@G,(%+(ZR"bPa+VZSZ?[+ld/'X>5m_1.%!V['&MY<PCLeUIQ2U=DLs?-WiiUC]PtDH',7d>WEeUNO(_RCW855N1qhW=W"3P4m\*%=Vt6h%Ad\]6`-IJg_YS4'bttr),\c&L7A2@?8*LX;"BYXZ(B@J8/+rmu)ZQ8;^>up8e&0T"31J$0D$EM-_%C2d3a%PQD4G.,hU'uTAo0ri%)GY./Kr2kL)&b1bOr5-tp4ZZcC/n5:'ZmE_B3)rBVDi=IL368&AMW&kVE8mhma,f36@<Os*P+shkVh6#e,:N[6aQS5mZF$\;u@p0%e*k8"Oqg`HNLV.!6ACRg\lU(\!ru,(E%@TSe,p5_p^b"7I15n#Gk'e8GB_pa^,6Lk;p>#p@_$VZA)?P[0?\eWh:,tm+%=X>=o+nl%.4kHgdCWN[UC=(JKBk?fJ1SV-7Y]u,bQ'##29Df1?=X>6BF8u6<iFId=VFbI7V^%7PCP\k1a8/mU^AYPHoG#NkJ"AW@qjJI[4eQO%K%cR?A.#Fh1FaYbZI@02kJ`[RZUImER4:$nBr]Z^Xd,U82YGZ$guu#1[d+iM43i$)p&jXOFL]N7_KC3TKSr?Jj@K/X\M'>1r9.!!%5F+fh<BohPhW*\j0$!O#VnMutq1]\\(`nPJ*>7QuF=hMK4gKr@)T:-'9l_Hd&9Nc,1Jt)FNj<KWaoW>h.Eg3hf8C((P:;b^kG$=b%U\SLK)pG]^,OL6:fpV\*2,'a)WRN]1^Qr;W3Ef]ofke+Jc*4P(b#00o=BLc47C.HJOf6ir.3c+%\qLmC_V17&ChNF9D&1a2=^="I%j#G;PX'9%ZclQDHGMjg%jqmuW*T7Gt]Q^.V#Bf!7.e1qahYF,)Z-5GFe'[$"/8mW/I?/TciB.'BhYkt(1cKfW#+>*RQ(\ZU'MsIP%XH=Ie%l*WCIj?b+X3A/E"\+?YM,'#m7'i];.Y73SkjV#%H^"F?^Wr6;f6t2"2+Z=BZPL+6l?>'lm<h]fKV:gK*[o2s#\HeOm[i.Z%-)s\h^tCDo9re^&D4t\nP>Z,D(qm"LmVA,ZL05QGRD#'"Vf47.pGC.c*_PYd@o?"D"^Uf`j)Gh-<ZUp#a6+E@)r0r?*$o`N-p/Sr%6on/4b"L::[Fk5(i,<nH>H#Z<l*<c$s![T&l8(*i$l2^:7QV*\aIAfe<Nj4ilA!\Qc'Cf)@9sp$m1uYV?lrh(.s?&.lR3Sm>A/u2%`Wn8A90asXU=Gpc$JhpUm"r<4W"X8TpV@2R(SZLLlr6i]_4rKZ.%mPh<9Yg8Vg>.SLd%eb?Zpj/Ib!LMd<SpZ6#D)!lj1iWc/'VS%DmW8h(B4?u_K!;;C_;_dLL2T7nh*F[QXb<MdtlJee$6R_WW-[M8.BTdH[E?;OVP(TVV?(UcF;u#oQZQ+OCZeMe*ZBF,6RFH5/i^5%CjA(u&?s@].ij15^m#9LE[F$XGS8p[TLf-I$;2isH"-,4!D.ti%?0'cObQ4U",M=@(if[%M*oQZUg]AnB8aWh*KX5k;F*m.,o)eH%B_'/pTp5U(+A**"7Lb5-`%%=s7XK7LA.d6/6C6<(-7i%u/6^2/11hGWrp_t6^rWCQfI;CZUf3=<RlX6k<D,9<l8WId/L/c6/`=2\%EB:u)\GsTda0NZupP6A/j>apE3%YR2^>!XTQXb<MdiLfL/f`'HTDG2@L:=Xa299D>nl^VC[Ed+5rYp=;+J1O4B+=F`4$WcADb(>c%ZZtkV4Pj:uFFYR!Y9I.&1KPgM3P!pAj&9KS;W:_fSR2*3_lSAaF1[n`(6ffLJC+3D)QQ*\T%)'/m`NYD6\ngsD)hW`IUuRp\O#f^%i7G$f>FD\)s!t]jNq/7'5;I'D/r/iMP_8j?Q^\#=E9.p$BbJo2Em`B39s0V25DiXh9HPj)rGa+Mm[c8,Tm+73T(L1bd`$_&#$*1X%E?nLd2E2=9ETh:CIo)UnOt[sVj3ka>'XqS,8+F[siN6Y8j$0cJ+?cO'^-rIfFl\D7qhL-YJ327d!r8b+V7kj.IdAG!\W7cp/m]O]%,+]&9/jH0F<]r/i'P3Y4ii%Y_4%=pe/@$$kQK?g44Y<tf*uRmE3%-B]2'lkW<'WlG/#,CO/1;)Z70Mh=cXjN":Dj2*'>cki7<p`_%ZS@ufODnDo<_BW5'[,aJ4M!fAZWI^8k&6ipD\jaTBQcla)4R(uWS$;!aOJ^Ec$c0qZR!eeVKlL.BBEoCY%H#2%$n#PI*FZ]ZPho*%8>uMJgMs:iS'-)B_p"cpYTo/QNFZ8<leETT_9j#kqj`]fmX"C_>r_2sEk_2/p9EX46YSWJ#9s2nLSh004-kYrO#oP_n3&Co@R_8Y%7e!:DIR3CZ`h#&"PF91[\Srpn0!D-h<8TOPCebB8HDTrSK@,tP`ef89gQ<hL9`s3J#G$VcdT#;U1L#reHtL68:M`TII83_!21a%/%[luR&(odn6g!OhC1flYOjB88'f+tm\;.`&PaU$X7fXQ]n&HR%jYmJXsf-mZ\@s#<bR;X=rNV9=I6?,U\a"caq>u)p5`u]D,7OEH-%7dp0:?.Z'i9-ZN(O#i:QcE.;3roZ9@R?bk\rYTs%esC8f9f\M<\8]AVO7\__0@[c*G*EA)]mhRD7;k0>gQ1H%:3rPm5O]+b*3t#s%/E_>7jY5Bd\AN>Ll_1a"3_aP]amE`aCu=g;RFT%<db<S)WI7-S_Gj9S*p$!1E?).gmN]^L&rO#(31B>S&C,;,_mtidFSmHrr+;#G%4908b$+JT_2O=uE@`NniAqF]^$i%r#bWH*Kgk/hnA%;lE>k7Y38]GaeIk:<tY.jL)/fi,HnN.`do!(=NM[quM_qo?%M3"shf%[:;%j`VC!p.4RK`Scd'0BZ?Zi=ek%:iN2k2CQ#];O_IN1C6&G>%Q/uCokL.V3tP5c$L/V/.\arDMJk9hA+]8&t<3<e+JitbDIs2?<V$r%C^$/+ElhLu?>k,(g9NK[74Wo;rL1pK$=O[)5207g[$'>db84rkcEo^D0W@MVS!FCO"0)GqL:uQr::6X,4?^8ce;]&3EFVYphf@Lc%N\-R[=/Vfe8%s2CHcLb'9+2UHs6/FuE^2_$lTm-%emj!7e*K'/rE.q<V"ZnK_qo@]/?Ee*m=M@iCM&)tR?j80#%KZ4+a#=la2qt?%h+)3%\,_LL#]@B#bCq?0UdDrHMtIS1l$sAk<)4m-L8sorc0E)6X0f*#0XFM.fsD>!?nj/O9;NE7X5/6%<]a0b*BVhd,rt6!FSC=.%`LI.#mL/uL4rqQ11q&9c*2CZ)<4M[4b8@Qu/l\P!TBka/ZdAC\/c1L7>ntXoAb,G4WT*)]IF,km,-SsSDiQ0GmrJ&hVI_8rHDfg$%[UXU[.;q=DpQ+F0ki7]L2gj6;X`5cm"_=%'/'B$RBF*Ip,M/B4!CZ@NR.3SC[7p."(uRc"YXOdc\ee$Q_7s<8a'UID'J\hd%Jme@%rH=^2N^gDV%BS<2Pll++!!j@W15Z>1"U+^#JmP=]Y9dj\-,C%M4]/6&Y+X]=J^UJ<E4pj2rZ1CG1U$/,c2S*iMgpF"3_KeJQt![_%.7SVb5SFSujC_\4>imhn>M>K=[_.Pm1)r*CBg/0Qau;2H@C12]S22TcY%\`*K#AVm#cunK6%C2GCfK71(nt$s8iYm,bcMPYC>a7O%0cQ\9!:ZYbjhV6UY:T$1nNGhd7Zu,KHD[fu<&6fYjDm=3OiBiFm."?Db8%3ZM9'_pQG.Rm#=j&Ym#:8lU4rQm`dYO>D8rn#>D`Wd%H<;HPC^/G3nAuV*X1D^s9Ii+]gPXS4nj`3X\p-$6B#?)8%>,VnPZh#+`=/a3@6bQ;Ak6McWKksbU[t^BmSj(_"f&$n"oZkbZod$\%IBEmYqroXFD+)Pa03bNZg0'DWh!poY*%/3/^I]\s4IAj%eDq#<GVQR,j($d%@`i/#RM\^0pkm'>;iS0Fa9^:tOd.=l8_s]f0lWT0%%qO;19BAA?_Q$_R=sS`eS6$:,`_ogt[it0!_*7c<8nP;.O6$p8Z)*WrGe*"[n8HXfBK:s6I:9\b_!=4*c+G#KpA8h!Lbe\FA"P84%;oWY,]FdgSRl%Si76GEcB,Pcg:3.eD\^Q,AHZNi_Ks]P-=Jf5cL<gGYT4@ILme[jWbLddB(2;)Y7/%WQ\I4lg0QV)R^9-EbB5gS@%8'/7*a<g(N3m$U?+u,bX0P2q!VY,BUMuBcG#cDCi=,TD;\,FuPUs!kIIA-_jjl;NHn$UeV*!>J+lY*hA1p)Biluk.gp;\,I.a.J%%nI<N#EunRE#!_,*%5iX5QoD)rI8@=Naj`3rOWGBbaI5H<"O\7_=&LiNhC_:K<u>WOY]hk7Ulq_'P:Z)Pcb)/G7*Q=ZE#>e/9T_RY%5+/\am?).aE52fQMr[:_4cKLk&WYlKSH]=BOcnW6Q'^$%1D[/1g+'=-!7rAdTYu,R*G&P3q^'[\F,sHYmpZmCpRfbjr+j")^P7[+%()^NF/Mn6&T#l2R[I;1#3-+)ONB8@?%#%=$e#7`ar#&4@KM:E[gjG,O-TEpiCZ)BfMIo7iAE_^fcSXtGAu^XDGg9bnMj;9Ur.Ac0%3';=e1EOgYc*TOG=-Hh8kht/;YM$3+2g\)6jp0"2(r`EKhGFM(LE+K*IJ0&>Sb;_P]2-@Y^AiDF<f&M1hHtGt2qPT(Ft=HK+$ic/%9L!W0nPW3[@>Y"/a7AYr^;g]-c_JY5oi>o4"WJ1d<AR5lU-6=bA#C5<m=-tHb&P,I6qAOhX7=n-G^AOeCq&._*T$2Z*'K:@iSe!6%iR,QrZ)-FR5F[k'`f\;=qQXkSG;DC*bQf(dH^p*V[H&CA^C,Y[U+H$@1jdR?@Hbb+6JJ,f%W6S(B$+ZE\TF2l]j,N[0A9r[]Tqtp%H&UbJipdMTd`X_BoS.abLW<s+j!,&ET`nuZg6Kp9DsNg#?#SmX=)?==R_*ls#:Z:2M/o`i+QY&GFg)u+q:`hn;C98Dj2SgA)#[WN%PKZ,Z22)D31o>Vdr]Z2'EOjD)HIGGZ_j!`9T>pM8jH/2q1A-R1RDp8Bl'<j#^<`<(Hg6GrpJPT\Bf7M@>1]:025aA%p8pO5dF_7X%9\S6m8W.(56<#7"]pr#jmcDsdo4k0s=r`GLhoG>&+(j"dRRqijS+b5L>%;8pVrM2Dm7/5-Th_#HbC#g"k']A[IN7caoPL>JHPg8I%ib93\ArjmAVEi:D3p%"4r+B@"B,[j7UXhS_PWdpK?Ba4nh7:k`1OSq.n&3Pm4TKtana@P]"(W;L4?e)(M.Z18L<go"Ggi9T%C=)K%Zh!(qE^?'Wk#ah8nr#GsK6+-S3GpP7:jfrO5W)h[F>c&?#=teZ"RY.$%BR76eG6he_3?n/[Pp[>13+fcdbVX.nFe$e/`5n\io4!g%=tI@"b$*T^/5H"u]G5LhD@%+C6>cWQ`5WmW%c?/)ira3b>e#W%OAVQJAGr\pMV=fB?=I!M`.WK%BU_\#.XCm[>A/kW=:pQn8MTBD%3j^GV^Z,+:$%$HkOh+WDoKegn'JAeO-!4?HF!T@p#aG2M`Z1RSF)R<@.8TS3-hTug!%QEnB_3(#>"PA06t<XA%BYl$U'@9Z)KcG$%O>$&^VmM3;G4Ma$n_6dAM1X^;kAeuJ2kFr6_auc8=bR>bR.!Nf5$9)VS*%sW&q]EPe>+<`36H/a^uMNV]>s,025f\`n)ilNc0rFI%^"`:b\4<l2>2hqT6h*]HOFQ=KHDRAXJJ5t"n6\1)V$Edn@rB.dk$p!7't25@@`:Q@eEJ/Ue"Sg3Y,n>m91?N9FdJ/XF5^U)6m/aW%luUHM]up;<Y:4qr[b/c;MR=9=DV`0tAe9,1E&7G6ZgYJ*B3*f.0:jrJ+bk>E>IVt*[Va@"]f*3ok_cNC\!i`^+>5Ym6pL9)oMjUZ%.CeO];Qn1Ei\fR$W*]'":>@h,Ej>8B9Oa.&nq_YoYgmr.*rFl?Y11$Tb=Iiul]ru,+E?_9<V4L4F:PaXGsfTe)j&bQ(o\_js7Glh%6uG:b-Y\3=n@Yj3VIFc2&9BSEXqY@!KkT=uW)l4U\d.K_AJ@4B'b5+`<njK>>DY["5NoKW=<s's:_[2;qBeX99ig#KkWH:(3pI-Z%kR5+(;.\RhBT'gu%<-sVlPHdcdflCS%s,r;`s-Mpi)i%S0u/c.=QNc!*h^O?W8^O<l?Gfs6<l&h@EV3one(TK#kr?O*_Sn':0MXe%0.HbfMT>@D,B(UXs'QeI>X%ElNla.`meMa$VhO!?iKu+e(AZkEB=YR>j]dc-KBtU53t#p".7W[B=h,l</FsJ%3%!9VXb63F3dM7>%2#R8@p[S@Y)$*6;@'E7\C+fF5"VBKQhK#pP]WiLoX)Za[;r#V/^juM]-m3Lp*@dMk*NUT5U`T39UO.G\9l!V`@26i((Ghn)IgU"_%Z2"p4?HFC`-R[tBY#bG7_H26g+%fHrAnSn<n&SMUP/hj\62"dR\1i1/+)qtc6?8edP=8t]gU?t$PoNAR&EH<7gE#VZH[5d<L!@GG%?f]+C_RC*<'IpFiZ`((_Dr>$Li<En'M(Mj$6W`K(Y5TiM/710T12O8T#8pldB?Ml:2*:6]Qd'g/;<@3m!pO_A$h'J+Zu_W"hIX!3%kZ3-qJa+N+-)eNp1UtFk4*PT">9InbP'Nmlf:$QaRF[kh,-p'LE4Wfr5UQ\!mP\q9D&B]THT"S[#RlUZ3T>7pgH=iN:+(]*2fAUi%B&@C8qgKm`c6[lhP&6\N^0?EDFtXL[^ZX33X#ckI[8*OQ#K;-o$o>qY`]Q6/jAK?;+)12tL<6K6S&-.;hp6';dSO'`,>7bt0W212%R%$DsF"h26a34Q%)*FCZZ6)<OH$?L7@bGR`D*+uN9J4(B\l2&&6N:mAYaJUB^BN8sCX04Yb1oJ94I5^$B_,=aG4f^A#B$6^a3urD%VNJik?o6K+0qkkjpVo2jHYCl4a>-m,ZL+OYBo7n\AI=MnF:)6U!<*p1A?p+#/t!0i@6uTJ3`Luj]!EXY?:Aa*C@-[k+2Gn2I8V0M%Yh<huc5,Qn!QT@>A]=?s)CG%q9(O1Wmk$aoe9\.]c1S^qgT_]rFB(i(D$md5C`_7/l)3?pr$7ipDW^';fla;ZNZ-Q^H.2<P`IW)k%'#7#<qs60/lE"i+m%PP**a.S_rRDr?E+om#pGq5MqlQk!o-63PEatja,rPh,OY1'"?Q4?JZU*F3N-&E%jY8eHK+V.S8ktI(kC4cW%#=d11b<_rpDq+Eg"2W%7SDB\!reu+Yb<:(31dr#o8(`\2[1r.WPT_A(6$+qg'r]m)FH8bIbGX!9E8G_Vq%VQncLi1#Vq?03k%@d[%`O:EjY(Op<D`c%*3t_m>:8X4m=+$h,hrsZEWuCO#nMq:IFpQm@R?p].#]pJ+D]JuL0ao`CQ;9LL0FF+A3tRM.oY(FdP7.W\\[h1k%hOFC\m_QFEk?a+je<0?ET)3Qnc/#1eqfDDn@U#/U>)N++Xn/]iF3i-[485oNmkT\/H5FnuI$ouUZ(NGc$'rulF*DOC5'QhXl1;'Q%F2*o>V0Dmnq2[sSk5d7I!Cos_`kZ%s?loUE5j1RDk*1h,Gl%;+R\'D%Q8N]pc*k3N%">]S+8NWPgA[mZXm/ZVk7R5lCj!ZW:i6'U%,CdJO50anX==]TqhAOp0mK(9(d.<]od#,(\hM`SS`=SC5i7%j9X3e_u[LC3_\`BHrjS(7A]o<aS%l)fk@;UPR2rf>4;p`teNHYF/%=[s2bA7;gVNXp`9;(]$N><.&60Nik2eQ7`!mb6AkheIME>E!Rb(ZPc.p/ZTOTOK@Uf:4*FI'422NkUudL>E.;rBH^4A?4b]YpRn8%\o$oD^"N*sgY6T6G;7ft?C)$-q%h;)&9>2<X(b#4cYg";YPHH:mrlFcD,KKj>HF.7=[VW7EIQ+0Hb*N5[b#!&Y)tG<d7B89FlGSG%NM[=G`'6;/-sBKt`hf?pa4pjPbqu$PEDM9oqV=[+WH(R)Q$:bV4Ua4NLL!R?o,W.W76oH!k#FPqU"Jk-4W6.E6$qHX^C73;DA9BT%)Xc_&e/L_Qb7pH2dA[RNGh_r4qot0.+"S?R3.ZXIp2GM;!o?U!i44ID)`Y'!4jNp:cW^e'])ln"I@Ju0)fa+ROS]Ks*^GI.@CX)@%gAQ`kh"P-Eo^"2GAXOP+)-D@Z1);I^rrQlD(eQZHP^TsaV7c1UF8K;3p+k1PbV8!;lskAQ)b`$ikR97cj(P(,4_)]WRJ'maI:d?Z%7>Q4R[cYuf2fcUgNNrutg4=nn[akA=Tl<"FC=3^;/h(NS#TIrgPp2R!j%%MWoO&e8ObSc#r;.3-4qQR3']-PIl%S*#oY!d;NB=69%@h7&flK)IArpiV@iR5Non$B_;OPNsRbIqbBYO@O?IkQoB@t3890X2R^@;"qmrK(@*R!rPTm,H<RQU&L<13VF/F/.(*kf3]HG#i_@%3ARh[&)0OE\P4?XLht/*3-.m:6qZDU3c*U(nWjmPB`NoZrUlWQ4"!<J"_'`OpP9Xl)2?J!iFg7$!bD(O."!'CT81;HTeHq0s)X:\%^TCF_E<DooVX3OG),(!gV16M55Jt#-3d'?W?=8J3ZhlYMnN@7t(ip&Pl]St6kgkIB>^i1#6bE+Z$JPekXiY)AF61<p[1BhE".oB4%>O=e\[cbY@(Z_0-Q?=FG>#JgigZh4'ZjZnY:r)Z/DY?8XkC<L$g$?8b3SZ`Ho(5^5CN_pk7\N#@:nLU`cR@:U'^@I]obiJ[N'_q^%Tg&@CT:q%d6fIW5pcK8ie"]_`q"jGd^A-^<ZPTg;^%h;f^RY5fq%q63IuiIirQQ-S?GF4$og0YeRifCno$8srMU1,YF`9NM'ldIg%d]-A'YON0&]4s)`%O&Hb**:0>^#o@pj.GEt5OtFI>Bfk_^[T;D0)tk,,5ecppu/];J,3O<i>]JkpXm<U5Gd9/n=<)l4R)@)=ZYF'%2tJ%B96YT)+b0OcqUOo\Z_t"!]mTA2eR&g$i\hF!Hh6gio>AnXIr.pNp%b(iY@#$?qW>oK5=r20rJ,%3n%Sf"h:'uj3;eb@n:/Vg%qqhAD,B%P\-iL2dYML8qIU-0$fL+@_Z.Z5@YFs%cDg=SIpk1TY[9="3.]ap<>R4C[f;bqcaq`Pn71(0WkC^u(m"8W?ZeC\'1D.,I%(RgrT`#:j&jb9bB9WF>s+<sm`TA4Wb,*<8PGWURZY>Cg3E%t^b(=M.i=$l1Q\Zspp7X7^K?Fc4Jl9u>hj9rUknl6.0M'Q>_gYd@R%bjm9VjNUoAP*tbL1@MF+._fiZ.Z-rHpk`X[X+71ur)F;PiW)7RiR#@I;a#V"Sn;h@!T`B=m@mRN44JlHeTgC0.d^'=HpbhPi<gPV%LPdl\[*/AI&iFa/nLAmm?BiGBcQ*(3g!Y36.Z=:V^t5*YnLB"R+;E(PZfHI7q5rH-\QD6Bmi5CmhTPNX13lKUc]sj@3(mRJhF.We%7$;8eLTf@E?5b,he;J#oVo_T626pjM?8os7bFm7s&kfi=c_.495#"edMQu.A(fP[r.PE2C!aD$i1kf.t4::gu-p3d'Q&`O]`U;n&%<mdljna^QmRlR-edgE(l5NE,a?]PLAP),Q91$u1&r2M%=IV$/)Fkfrr=%X"*(mgIXj$Q^F]6hacg6GEfREQ"/MnIskP]e@AeF@C(%i6SA*>ZWVroeI+O,6p+rOi<$`f7AiLPE42TY4@"[RPJ<Ci.4U'$qcu3dK((n/[;TSU:B"4gr]2F%/*\eZ%G#%=5mRuN,LA`O#D.g%17S_AZV40*=)tg)9EP$Y'nY(m5h9HBkU8T]+_jh\+j(5bGa,u6%?JAboT$D_8OfF\,i.,nVc-aGTJ?g/`i6UIX8F\[:O@@q2Rm'=%XWgIkF1?K5Fnf*OP>&H_@iKWG?]RV_XA*l'F?9JF$kMb!;R,@U'?Om3d2m+/&HX-gWP9)C!I]adj@VuF)%@i?Q:?_p_5<3]b>f+s%695-K8jA1:EOC\4EDDslXmMqU0oDMMN3*Ph[%b4"P@dTG(@_0OW^nCEMkCsK=4(*_P:R;hTu1/TV7^kXa#KXd@QDLh.#DdcXu(69%&BVMk?pu_?1J/aIRM:rSF=O\=&S6pc<+N(dX[K#MnUg[0Olkk,)OpXC&m6$N.b?PV6kk0Ce%@et=8HOXabqbPUK6k!m8PNSi6L?G%P93cKq^dU:8mVEn!l%?,JsU'TZ7\&"fi(d;0Cu50r2&Su2i+"QkFlNiBlJ>sC=uN0b=pq?;R63mYCs"kWch[ebk!6kYE`miI[+.e%)B[d.D,KXl\No"KL><S@LBCj,K[m=NV/('$d1N$GJu$OUB,>1/#ZrBuAWa,^"N8FS.SYYSN^r=m3Vaep.-g8@Sh*]7R0g21I>:`V%L3pdVD"_J&<X^mSc8)&N4s8dG,"]N%,I%G=,2Zu7=h[=@@!P'Sh1>G,/-?V?O]bmrH6PVdiOKiNbk@>dXoVTn]X<."1p^;snq;s5%:-/9O>q+f;mT8HUV=FXrbfWm6k^\<oZTYTZDi;'Q$`.Ld8-3sY^s>;9![SS^$7)Wu73^dDV@&V4G'h%>F<%'VR+_&l(jhr8G-V^E%Wi0BMMS)EuW280:M=dO$!Ij^1j@S';1/-%V?5.]N9!h_#1(]TSA6E))?1fP.R4[!o@m2d)7ne4^!bmgPi?G2$0MT4(rj?q:$BkaA%dDP+Go&>a1`3m6+P8<X^ndb5d-5%l#AnRcNV.Xe>]QhH_OT@"oas)D>bM$Y#W()VN<uXF\1)%)]K6.i`l@<K27qLOM/0:bD'ott7%VXH%5W't'W\!O5.rmA5p=V_aNA6m:-/$N`D<8QDUYKI\_CQX:X3A,/`WJMl8H$r[[&X*Tt6P`-o5K'%TDpN*H9LO7A!fGu1Z:EJ0%%PhY04<D0[,IR&.;(()QE];c'_:7#4FuAnB.jmA]>A#+*EfI_,L).MN_m&[t>?NpZeVZ2e5#JmPN,1':!B-s*R](,V'g\0U9H/HR%dHlo&irN&KXtU!,<XJ,,QnkqJHD18gb[!5gYND8^B3?GG6;0%81G_5Z-TeM2;1[0UdOK)4$DfAI^.O0VjCu]3;BYLE;"LGmFj:9r%,9iDlU<n:*i`+)7Uo.e0:a2JlSdG'qD!&4.Aq>S'/`!@[>Zi#\_8g@Z6_<U@A:SQaV&]6Yq#j!b^<mW(/(tRYla<`].B>2_]TkYH%@I$FE.E7srb`ZC.Rp?`;W-.a<FHH:jEh5BbPa;!@/<s])aImPfciBk5N+FFq$=t^IXF`=.k_,5+-PFfJQ'4O.NG8e<?B$MD;9&nU%1*dSB-&/A4.i]UUJk0R"pIA7i3ml_l/]kA`SlI9e4#QK@ZGnI%>!l$%Ob0'$AIYJ"9*s'=>Tk,88^8oWQQq\,N@h'igutt5F#?R)%b/;IQ?.bgYUY&OP`fs(`F&HI7=X7GKk-RZdpf400aWucuKlAEe<(WMq5F8/Z5d[Ru"nRS*3]\+d$dWk-fk8d'#6ReDqT78L]9;]2%e`0mH`OE@OW?D<tLEJ"LGU"#T.XaOOZJn6K<,Fc9cW$34DPJaWf$]XHTA_l_PjLT#B_#tBO\A(\5Ja11I0)6p_hn"OT'+4/cuhR>%Wfl;E3(5gFcIp:aG_&>VQ&?<g1MSE4`Z,0"l5+fEg;&n*%-fHUGgl-nJSrkMJK=X7;oa%\EZ&Nbq(Ju\VE?d9ipaEa^4,bA`OCVp%hqVI$IJVuJ^OQ(U$-q?-$nH<$%,"+&8"*+P]L4RV6WQEX`hSKQ`-KWb%J6UOJP_EU(WfZ_EEfp*`![3=9?0ANnq*E=0_D10$J0Op%Tr2%XUM2?C3@\&(-e*)M.i:qcR0@&r2eku?r;t7@%,9^>BdD*1l54b#_DqqQ:4f%k<gE$dnPcmVJ,+jqFe]91iOYMZ&oBZUdZT;=%H)i3u!n('\*]/2.-;e+UDSgV+Ni,Qu"kk!>T+7hq%p^0O9l%X]OJ'p:D3X._3mIp!i%if6W5^)UOfnDf'8Ek&!a'>:%:*Jc3!I)A%/rkK1+qS)r#!mf1$0CG<;jqAD33\Yhc/EaRRR,0X\?>>0i75A4^njoj:Z._%dq">,6Y3ue1mhFEa^.;m)]L-n%LNt(]SK4;[]QIU%K%%I9bo78q"hqTiPeur&F.e*H9CE&G<oL7R8j!au!<JUSLS:U6<om7!5>'e)N_`m08Cc&QK"AMMnda?K^mq4N9#`->%a3il;Ve$h%f*$5Oa2Z?ccIk9C;/@<(7:MnK!AN.m)9A9qJ#oWR*1c)*"ZtpoDhuM2VArWq+Rd]nJ9T3nn_u\h(a)rKBc;;BM_0-q)KZ7Am4$9h%+1M=cKY^)),O$FS)3H,*5pAHQ/.p8<J^T&P!"t?2LI>sH8-t@h#ZBoh%=J\[1QTh3,9(4!:*<kq7,/kea(7P,,_K/.[l]I=K(ni3%Mk_2V2T`>K)GD'X[J96_!*F#OXoS#+_`+Q3<TQpU'm_.._/^46fG=hK#1_R>Rf^/c5U(8ISlt!(M?3L9/L1@\=S/c?c=5ta@&\["%4XQo)fPhurApc:,##d"-Ik4K3p4RARE*L8Pn7&NBqBt`d*eY#VKJnBfR@msW"AtW95;\i2C_K>n#GQ/8k!1\#g8lV<eJ1HU3K?r#%)u4ZF4Ih4tqlh\8B=dDb-W&n1WI\>Wo%Dlo]t#8!F,OHLAgE)im%A>;'`nP,De5alc2pS$:,J^PAtLVMhEr(kop&kRE%YZQb@03u%.X9)tndDG\.\ED/bnt.Mo48ETUk>4*UhLL@;1m04C\4qg&f?P_VG.+Ubq*`I-@71Z6;>NUn\m;$+]6#&l\-E_S:QAKV(6khBJ"c#%&.iKL`*q)PUonL0,_`$2O][?IB<XT]_Clp.?mggh-cWkKEK7rJg'9p?@RYtRXX*bZX>G0OYa-E2bs6",7u&\*$bfQ..99hG]RNrA%9-u&Lcc.\7d#qHg=osOj6C_\V\c=qQlcK+EN0_a)9gm&;Y::m'4VA.7kZ^e6#=qT9i]qfla:5""Xoor.ri)S9kYu*@B!?+13(B:<%h,=q&8,XIUK^+pcBZsN(R6^2?C'U:aig;bZ3&I*#X,/YGrII9;,sERXd2De1(%!Jh[&V_(-R\L!'@[W,6;J^o3];hM7'MM/&RuaX%PT3L3k`q5D_b&_3A[/Mn/YY`Ma2P13Re>3o2hqD`]AQU2!C-[I9GFN)lkNK`q5a4t?K\F$4FBNl@So"%GSA[@Z)\3X*Zk]FGa(7s%6l4"LM6?nsP,TAa^qeMi80WiGgs+%TnT\b.b>;1Q;jQ,g/HnEm>b_=Z=2c0m$uuENZL1"Ab5,RL/He3ZPQ7`t?0]k&]!6c3)TI-@%,c.P=Br:/$'djIC?fh.=Z8?lZ)4Y,66K\De=%T.Z+NAq,EtnmL.mk:GJ(SWb;aB1og*71h+L[c04VFrQk`&8'fD'+ZojnVhGG"7Y%iHo[ge(u"1:+A[D$-gQd>=FK'R/$`HO5MeMX^Vp!KIY=`32Y(%dN]*.@SmKgcBHqVJ6Z5oLa%4;CgTA\qE!#LC$ObK!64kQ^ADCX%);t&p#kc%)J5OHH3RQgk6lM!K7_KFp*^ESqmVko7!)_HY=IW_aLug.*!W,A.,:_<b44^Eh#Sb.1>acRDQJu4-@k\r9$:JCI>NrAD%:uaZ73m^AO(W<ic!Ds"812L_7jK^6JWH6]Bre;5Gr2;J&W5-Ib!Zi>DC[E:qU4*k(7.Pmq<&F!P')4mL<'>6+`"P7AI=)aq#M>3(%;"]ZKG;.csAM^M31X:hK^dp,[,&)]9WrZT^STUK]cJj$<KcV?P6KH6#/qCN*R;8+1V?1%&5t>-EADe44R#/Q:H6K_`B:MfJH*Du,%*a<drr=j'ZK(H4+/4)gbX(-iMFu4eCWM9`$?3$l'Z]Yi]PHrDE;=)Z1=Jm?P+#6J4&6l#=#"9bX7E-tRY1K6I&-11GQfVcWpBpQ.%O?tAn&L.]77Sen"ZEY/F!G$NXLo=/4iZk^t@)F8$>9^&&,qo<>m7Q#=*C*_<eRLC3V'1Al(?gYF^,'F2W%HAA5Sa'!#hC>HCK3[L%k[4pZH\'-cp%N[g*>WK7N?KcImZ%Q*/3=H".jpY')AH#67[=N>Ri'%9Zl*?F@_KoUL`sr/)H8)9?g+8<"]J`3#$;jGpmU08+ehU/%5g2_QU_l&qnI=r?1`[#XO4T&a_D$n\YDe0/oV9E:kYs9tVfqR[('oY/0X=)D0grsA3[^"[,4NV_[NrFV"fW.c0YN(`$^@Rn#(7,7%$m?Mi6g\R3hQWUUToc8sT.='l*(;2fX_?K+cET81[_RI"L1Z,,J?Q(0.H:(-&)[-8hZul"KJ?bZ5BmENMh[m5iaH_SB1B1/BRqsG%r%o9P#n]kTfccLR02>R&Y12-dHQ38@"BpctTO"j2atP5e-/o0:lR\!t:Oig'6]/]X^."kW4=#/UkkNu!ka0B0]K^r[9UYDd&&.X6%[cQN\chlR4L3V]-"!f[fB3fZ'VFKd.4$)'W9ubq?Fd[qZ`-W,k,7Z.N#[L%1IV1Q2KJEb/j'ZOc95EAklkgUKC6=CQ,D4m4%#[g\%m?]\sCFWR17n5APKTnAj)"%5q<*qtNJ&KGCWq<^8KT%UD.c[al>/9na&^s;sKNrb5@/cU0]+W%B8;ouH)+V>,bUHg8&V6^[>7nWe%NtMD*LiC2aU0CeXB;0%t,[':mP8"j@_-:MMq-nFMI7`d4e&%CoJbPsQO(="OWsVmEE6Kq$?6JWMRT]6.P,*e43.nI3S$XQ%>\6f@%1^@.5,%+5O5(^tN?3WBrkTV8C7ShKD)d;X/k\qI-BF)R\P`HDtT+MboVeB%D?j=JUEP_b?mK78]\p7,^b]87POD+p?lH9q/-Zcl_%MRaH-%bs?8WO0n]AjS1-@]1EO$Cs&[6f?NE)DBNt86I2Lf'LP<Kc<mp`ml5Mr=b#WE%s$t!><fRQ@T_6Cds='A%hOn:gk6kD&L0i%&"=d$leSSL0-&>0U_sc:e[uY]df[+"\8eC"eWOM*&-`$T/?tIK!R^3'Nl[,HV>unjUi/Zca+P5)2[JV[/.`+paLi']7d,*:6Pq,5%?DQVaELLK")@f'DC;CBl(F!a4$#6\\EMm!OGKeh]\.EVYUo0#UXL("HSp:Np!a\_[9N&<l#,EcN>@a.X`>X#nj1R,[1qeloFdY6/%d1B\Ldc3bY7Vd0p1GSBN-3GG@">?BJ=SsA*$/Jr(hG)BcNhkFC-1qiNa,Ba1XLXO_bu$=>b/R.6eekH>!l8hujp0!*Me683)F1&@%h[#f`6nD5W2PA`(:Q*e'O(a@NP9kl']h4u;Yp@GsUT$_N`^<?:P]VRd@ujh?!-1%0&.8=8\84h[@=Tms/p`s]_XL[JPRp.$k'2t#%"2jG[(,U!liU#MZ]k03ZC94:?+f*g\ga^Kc.EN@qo"eL1_a>V63KCp<73eb8<s\f@**uRkka?[G#4iO_=<M-p?'LU1&_TG5NR>KB%0<2!M(CXr1O/N@P);C?$oe$:83c0!S&=.mBi*&X`O@!0>^QLIT,r,a5eX@.?-\Dc?/dEHa]C%N8"#9j`Quj4(4$HPPks,YjXoMp?%p0G+ll`%E=1q,!jr5om.*K=u2\shkk/6Fh"h(&O-pfYFi"N)KHl3s4ja^V>I9kVt7A4MS0A0V,e;3)<I0cY%$&?CC*_njec![<Ll%2QVY#9u+Z6K8-0rB+PRoR=l)aZlKg.*M*&/WL\YPkBm9^`tXlC03obMLbtm(RPnRg5XIR6>._X[`0CFTLN[l,=9)ed1K._pTFuqu%YlZle\jN\E*`e2a0j1=L+s<6aBTG>tBQ-Df[8#.PoU81`*#q:J260,7KP1J8M!E`-VH'&S5ZR:FNE7TN,j\p@``J#3DT2e,8/beo%kq[n?'%73Gr&B33cD`_q;#IHg7GTKBM-^:7-EkS9SQ1kMn=k"^+lQ>Qf5r?.5oKj^^0sTRRa6Ro$kjfuKnN7W#,3GF.s)gf%5R9&%?u3BY:Cmb6'oT,=YGbcO2d06mLa)S$V7!_bm*1i@qis=[dp.Zg/C6;",jdEHXO$`6RLqPnfW/5$\hM`DF+DZ8:mb0L`<uu<+%TR2%ZP@>UmP/*9jtQlVW]>E\O]6H(Z0C5ESt?-28AS_q(qfKP6K"#p*a'*@K_.`EcQT:*[r1m_/L"oS8E+k$nrJC$(T'L?JI&/I2B@Xu%>8q0jUA*k/M[AOK>I0p!(,;+?@&OKI_fIq`1l@(nP(^%>!84C%`lR`P#kaCpg<,?WdJF?:&=oRRL6V``44.<S(/O:93m^&ZAH4Dn%W'O;]L&eD%J.2?OP91Z,pSO5fjlY/2@*n[pUoCJ^E5ET`Y7)5r$sI1A^p%4YC&WeXIUrbrQ&:YrN=?=>.@L>U:!"OubJ=7m?K$d[%PZ02U%.m(l-.,\-%Z5>%4s2$ICk^=E[I6.E=Q,;cl]XV@9F?H;MPVIO]cRm!3FM_p+3pN]dcCUX*51eu0+1u)a91DVddQ;=2/nn]%Z<4[EKZU12GAG&@EYOUNoT]l%m?*(oa;+(G$1d("0r_*QWW]R+C2b:s1TUZ!8!M;`2d%`k$F@lZMb1\2X$sB3C'YHsZ4"aRJ/(oW%oF69?HdI5gK!;i):W33o'CU5[05tPTn$Mh;e3XAQ&ki/&-DF7V4B'RI>$R2?!HSHQZ=]#Qj."P[JSIPo4!=TieLF#9HG\t9eKu=$%<XF%\1tJ<-7%YM7T$<]V,CWr>K2Z1u`68h5Vah#&,d,k5n/H)6,@I"b>#n-JW\bK+7`5E0C;]BGFRT9@HA,f`XKnTedg.Lt+_^m3%UJ4cX\=?*0K:nq<O[>DSpW/5B,nAdAL>.\M70b3P1lUu%Y50)WM2[0q@t$(i#9$2:91Y#XR/>/I:d7jZk7tgHD8;r]`>P*5d!sd$%1]mP26CaqbeV/$MFkK]/*Jp4AF<&M12)8<)nC6eQD/&&rfBd31`C@$\;9ra'eX6C@g;-!)TUK!u/.iN\RuMJ^I=:mUT<]ab7sNnb%7_9q;<SE2;NqfNri@,g@"<el^7#9Gt`KiJLS^1Ho_5om4N&qJTWYLU1^4SnO2<0fmMsr,o-!DAQYp]pe2&@ZOC?3g<P/u[<s6$X.%,"T[t-8S5E9m]?jRkBt^=*+=@0,IJ*8rKCf=>^F@U7'Z!/,cHa<6A/s&j<C.p*t#(%q$@iT/9:l&%=[@A5Fm60cC6@T"lmDKJ+3L%J7O?in#7AN"t_ms[/,<4^R6%&'H2`pAfWW>0qaVY$;')P).gWt'KQq5cul6X".VuYnBMq6=:(X,\LM:2[#prP:n\C;U]j?nM+fkS%cV30;)+fp'NXC+RY8.4]!K-$PIV%ufl7GQCLr)(o1;ZE\5]!r3`%6I-S0.?aOe2c[_4q2doo):^N$_A(I2qfl!\t5c>SC&Pa1t-:%K+&8"\f$Mb,s=JLl*)[E,S1%c9G51Ee.?#o0':lJ-ShWokpBE(F1t.4X$Hf&L_?Y185MiM$.F=pb,hjD+"c1HM<Jgcgh=tpmKLhV%,QG0SrL*4kLpr3]X;2h<$an8W^'Rn01JY6pW1gJi]HAB7j@/V!%M1>B&&BYJ6McdUrLh3hJfr<o6]FjU\)@dK^,"rKB=&eLR(`sF%\1lnSM.*BOkE+np3ug/^69*F+a=.e@`?<Au'Eo$QJ'u50bM?*(nKFS]a/#?)"ubWl"pV`XPntX`fO>YY&s;gFph;'Ta\7[s[>%:C%-G0RR#nsuD_Eu<]_SXYt1sjZ`9?,GX:'rWt,t"6PBG!<Qd4giF&i<?QePNRl(AJY&l$9?G6]P-#_2]o471`6FYSJZ*'@tQ3c'0PW%M%LWfJ7nBTVNF0]6uAQu?;Ics/-HX2V)BB4V1PZ!pim$`r>Lkug?:GZB117@TJ?d%P'D>.8slao]XCV46VGq'>)EidfrJ'c\s)@o%!$FrjMIq#s_M70+XPq#)?j%1#K5fip7T@K5Z`@7&W(k*1//[B:4)h:,T#^[IVM5+87]O`Ls5CQ5:T[[-NHD"O2lWhnUrdD/H:Q["%6/.th%`Ar^I#NA;m3)oB&MiF/0fk;\A[*mdc$GC2gb7l,aI)P?$(^#N!\'uZJP'QU,4j]4%i[O2oVo[6-/hng,iDGEM`M]5AsAsX%F;B`gY;6pLaWZ@S1q;dhGe0LT+g]'Y['V?.G&U]Rejgi62Q_[`UmBU)Ze#m8hj>>L<QtS-oW;h)fMAAV=!UlQi%pK=;3nFGOl/U3%-GWWscY6V56I\]+!0)UP@a,[/\6$&If>M^.l`aR@XBoP-09E=s=oLFc@6Q;1,pIL]5>dT+eYH8Un3Yb8XT:t)j9ugb%cfHI1ms\j%;NUnBU?muJM%ICi#0GGK@N`4M&550GI"LraQh-.^#VX'MJY29k-sh:PAn35r`0juh4Q\7)K9`@m*I:=GZFG:4!XfnVA^DEKaqPaZ%JI$'Z_UA&d.6A5Q;i6e?jRodF1_<VsT#%GrFC5PW0n?Fe`IUQ>"0Prn*kXXCJtSO?ot[#8*L99U$!PJ.M;[cBk+X7lgY-CNg"'Cc%Lh.p(o3+ii1TXPM]9?7=g)?eq$%oolc08\<(94qI?nc=;"OWY9lW-G342B$mh>iPGRT[cGJ`)-GFV;h#fJLm!C7$mWEcD.sTFo^b%Es"Wq/;iU)m/Ya9*ENlY@"1(HQ=]`96l2hXN"/s2d;6eWLK%UWZqjj:MO#Qf!%'357hjEj3pUQgm>KSt&N%i!dBJ>i.oQMLPQBSq%I.!-fa;f*7+&G2HQH[F51TYS:,q$W]DQ1Q)#,,YTXN?WNFTj61r.Hh:5[l"YE-XbK3q+qY+*:XS&R<X#LW*%/&"Yru(_IU;rE7Wi%LO]X=f>00JRo;!Wq7NeT7pqH[+2.j1QPrqaWZiQc7fac:oT<dX)>$]TRY$2mKXk?VQrL-e&m`aU)^re[f:^3L-D7bLdtd0]k`ll:%N@r=r?85@f'rXCNn6Q7`4\GpiNRWOaD'>aBN/o@[K+-0CL4V<e;W\*#.*V,$[[uG:RSSS?$;$FH<nG&2UDAs%Rk/blBG<K3dgc\&%#jqV%YWKZa:Ci,pf;`6u85_8Nh.0'()WRYC@tf[C_T;oL+jnLd<mk$:M%s_C]@\(8,!_^`qQ[V5Z%$'cO+h'sCKM8`;A&PgC-s^8%UuGYp`a3F7CL"Lk>\Rd`MV@T$,E,8@Qp<:qDS9&sk#M$OHf"-^o`]L'2&iBsd9qOBqhIS!<(q5XCdU>u0h.HT65gDCY!J_g/4dGI%FBb6KWN$&1'0q`n(>%V\B#uq?kWtrr`[G%5nM&0^k!Hu8!ht7=P@%H*&M+1_JK+VYm%PU,-6qaQ14;t*bliO'*W#1cCImH389E.5%ZU-#N$c_7621l.-K;<QR/@k0fpD/<;"4NK`.PfeP17@k@s"it'7\D.$YVYd!WobheEX`c$]V1=F`e>(b6iakNA*2Sfc_u3\%$ojE%6nIU!+IpHeli"$bPV)\j$M9oKHK77+\:B&,_q2YOo'F?Ia-Y]`jm/956>iI2HhHsMn+D-rYPA(PpNKD>hgP+(4C\'?G51kd%fc;g%Q\Y3!moN>?Eb]?N=O[TUNl"'M/humJFk@G_LiMRSFmGkJ`)3u]O$%CG0'TeEqc?7RQ3<"aj\:h5M[2dd)UH61KT7W4S3d[Xe'*4F%P6A:I86VZF)3d$lmI^q0"_/TCTpF3l#Fle2q'Vbdl@J=2VpT+0@o;3AfJ0g8`e.E\K.e?9!n'[j9@>[dN\M`@p)o_b"F3Ye<M=dq%bU=`dl?u&>ZrKK>p9Y%h'c)u(ZMmTi;dGq@[!C"Y[&BDUqHZY:KV/O]XD/UuKi-Z7VN8Xm!4MJ6)\ubT9Q3*+90ZUGM;bP]$L.t.%VBW"=-Skl";OS7@eXqId,kchc&J>SHED]KHgbDc7_kM`PPWm>c&YTF<8WB:gA$tD$;PnA#`>`eAZ+unG_Id1`.(*YV/@%@NKfuB&%2.0nP(J#D:-@H,$3$?W$O[qqUJuB]_&S?J'!!u(qDb-7_%f@b3A;EWQDf??Y-OkEQir\WmFC.Hg'U,>]-.gTY@;ZD"X!56oU`^*Z%S!]g;X+k0naF-?o!1Oq8dhNa@0[u45$45rSbkYm]UNW+5+r)$'fND_oWKq'hr2HqP_X%8O5mgX\%\j#a0lSC-<D`q9!%Mq5X\c4b%3NKOk843P%BaY>#Ed=en:a(BdkGmupDjh`a.s&(\"RnT`)(#d0[&f^=no9tZB8NtKodf83HBp0;aoe0Mg,j'r+kmqJ5m3[Ep#aa\%f'3H1Y^R/i@&>E:!0YlNZaPnE!PYQ]a_i8W'o\!ZmNb(M-,(:o:%RM8%`VQpohViO*)t="Z?)B%9%7uMpMT.;I)KI9H_JGqP6=cf%k_8N$)!*]GOLM5ZV;q@]V.][:-&U-Sm%Kit]Kc02>!'$%7AoC([&=sON!A65\7C9gTm%=uL[16HM]f$G=KE5`blYYZBu(H.)6=/.%3k@oa+Ike-%h5q8'-3T_SfuNVN!_C+/;7WZ/V&??pW+b=*:C@mMEs3I997PZ>u2.K/SE$#=eQNH]ruh6;1f./,I'n)L8KNDW2+*8%1#5_u1gRXoSu,g#NL!RgZctmXL;;$RW/:'bN"*pr/8.=X8e3*UkI&l,V[bg,Ai1fO-^ai>C#Fml_Zb+FbRfSC,5DFSXcTce!4b%=%'A,sZ1Pr+e1Wl^h-KQrlTH$$[!`l?A<fNh/#qM*Ia>i/2-aKCOJ[/MO8t/]."f)X0BJ`\7i_(GW%ar3.Xh=r:Cc*Y]O9;>X?/UqC%;e.gSj+)[e_.j5q^CeOqYiu<p/s\^G;@L5SQnb'JIjOOm.3AhMb7Hp2DfZ8F0i3RUk<tC>j9\qZ)`ca,>S[6,jJ#7I5pYW?e=/eO%P;g9r+A0fd+h6m+M2m6u(nW)'F0`#-57sS4GoaljD:KgUZL]68!JO`\64gMg"1d)Fp5/kV1Dp:_m5XNd3Z0WUn7eWKX!Nbq.__(E%LVh9A_g#gE!MFYa09_gQ"],$iA)^<U'Imcb30I?Pk?S/Y,`7k*KEr7pe9K'AKe3q)(L6`m1n<4.5bVb7j*HKCM#9Nf\g"lpWYm'F%?8ObIN(3?&MBU@"b3&iLTVY.Wf&[]\1uu]`%+fXa#\4n%"-kSHA<N<?I,:rj!f2IG*J@Wpc1_QIO:#HU<EC9hJIt`&784KuCo_4X%TH1h4q.VA(Ai(Hj@.CQn5rm=b3(kO/bP:dGiAf0f+Hqd^-[Z,sYX$)?P?-l2]Hddn0Q?&CUB"lr=X/:R1).FBdeTdbMkUgX6q@VX%?]7EN5W&bK*0:kgXcO4R\unkV8Jb4eX+4(e<4+UT_6MQJ6tqS.WaAOc8Qd.XW`5*_HXu6&/o)+p)8$(bW<QC>6K\Rf,9m@&FU5Q\%=F@OWCBQ4''($$`RS]j`)Bi6o*)0>Y#d/B[F':O6RMjbr5R0UTNe3+Vpdr[h=:nC@/*hP,+X(]Jpb/&J)Yrq("COLbdS.@>TjDDe%Pcg(L*53R@%9NpO:cNX!&g41D&JaX7;,8GiB=Y/r>m_K&@7G9L'"F>Nd;i8"@&ZjfPVd4gS4A5t/\Rlm8'I3QXUqfo,!k6$*CHJ4%$(?DOT_@M=lpa+$XKXB,!iS:aG^^.GHmC@36ofoJ"dU%V*)[#l":Q"h"Ut-Y$Hrp&ZNM=@`jK#p#g]9&*;r0nir_+*'r'0_ALqt4%b>?0!=I\Z?ApFE*?j\IS<+IGY)=99(]U4##5j#TceYm1C"R[s@MH+\tBsqd/$W*u^YbPXCL(Qeb.2uD:j'q07O?5]kMM*n3=+jWY%fK*d@,Y9WH[t<A_P3%8c&C'mJ'1g<4=^d&IW8(oFBDRUL`<VZR0tr=b&m/\3^u(Pkb=pdP26W2D20)$<JGc.i)Z;E3ngqN!WoRS[%6NHDD#'U.1jh*.+lBCj?]SndF=qA\VN]nO[er]AYA(b4FT"m$$[tas/$0)3WJ).#=^jhp/Y)gm+JZ:M\d%WX>V"?t?$::e4]JC"%%#*kXCC65,3YUfb]f/Me:<"53OC?gCN/^bmj9-&hm!f^=cS@!mu#:kE"TR:6\2k\*$i=!mQ#,7*]"OM\!B@)k+f.hNk"?oZ);8V\C%J3Z]RGQI8o#u)I9TTF#u1tQ,X!dHuJ*qtbT//1kb'42fD`m3i00\[");kTZR9Q=FI[VE%<^aV(fj.op4:uJma`G8dZY_E@7BJHY#%86JI#U<`1<MG[f0T`G$/he&]_YS$rLdPG&l"u'YVbF8Ze:h[g*ffHu'dAF$R*+[.2&m"g=]KuVg2m]nn_nLZU["Q#^W1::-0MP"M%mtr$jE2Hcs!;5HEU-qZe[-Vc.ks2I$l/7`N<[C9cm!;Ge*mObRJ5tMe"rKue>R,Qh`CN`;[.Ud@2*d6+[jpaJeQ?AJ[Zk%V]nmG<%7>pCe'ns%s9iE!UYM,5cMY'O>R:P_r*KHoG><C"Kn.]e8%="N%74t%FaKS]I[9@)e3`_\Ie0s.En#NlUe0\<M,*8PK=\I@SiHlnA%("UiU8-26$#\2mWO47:5^n`AfKh\JWK9XLV,Z?rl)fio^#oCjJW[?1,3C$36mkf3LZ>piX5_*@^Uq>phjCDk,f%#bENMSuT_5[[,%/F@^od6KCcGX,ddP,c&9O:\Bi6N]G5?DTYL6_Gp<=Ks`'<,M/_*`UM(-)60fX[X/'7$FiE#bd&h+__?s/QYF*c64a'<mAV(',35j%FWJR:+W1s%Vg=KQ(0-e/4L#b\Qb9;NV=)DkYM3,)`^6(rT=rrj,VB7bcj37@[F7LmNN3UgB')?^>1'n%r"dP1-h%AT`MdklI^Q0u%8m,"e:,RbUi@l1^)-[dfAh:Mg*Mj4PC;C?u%s"(H]$Q:E"U$U5Ikh"bN51O\L6O]i/F`djL(H1-51]C,58aWD_@hurTZmiNBa=\t%ZH*DVA\gb4<Y/S\6j)\3R-=_sWVV,jA0lMp:VpLF:st]U:!"))AR$DEU8f2Ff%8K<$-53TjTI>32^^lN<;#s^1070g6!o3Mr$sR`%LkDCjF=nc!V\F,N`rRp6c=U:.?NZh`!qO>[DWV\j,!_(!,"N\e6FB^dFX<#Ia_B!pX\RQ)A/I_cp,MQLWKt!j=02L45$^u#@TF"N%%=j8@X#.iN\d#0UJ5N+AFjuP5:^[VoQn8BWR#2h!dd_a#<]4@pgn4821p\^pbA)YB''qMI$&BVp6E_]V8sP9f!'q4JrfK\%khAZ^%enj7j&.rnnB'fiWPNDo*h(*j-Bl]C=QU\/M^0j[AJBh\V>1Gb5TBn[7&7(d!lcB*6)Q[/..uj6gVjpJpcj%gmCPMDR&@q#5:03)e%or(G%]T^scH*rjLQ:k-`enB<P/sq<*UF.OFg#Cf,r<<'YZeJV9<p5%^LLK!V?NG/:P-mE3[8?fg;<jPo,;l8U^bj22)iYSC?Q$Qt%UXRmL[Zu7@X)$[^1>a&%=Rh9>"qZD,%Co0foE.W?_)[[b!/ZBT?<3?<E.fJO$f1q(;AqJ04bKV-@:]%e8:1[6eYoP9*;/SuV2n'5%(WRGQ?^[CC0h,2tlT*$JF:9.K$T0'oS?a?eWF*![*B%$;kTqQ,;Dg?W0_3IB5tF.^c9TjAG7[[g)\l86$#a;L2d?5h7k8E&N"U-t%X<Hrr^,#u)NV"<cp/2l@,seeO[WV`2:htTNGN@TtdB"8Qidd^&5c)GsMN:CBY%56q3N?8\Xp6pQL/rsN@Jb=J'6&@'#>#F-OqX:8%`2j\/!'*Tc!5snCNhkDY\e:"%#hUPEm=A-W*bHHB_`CZDLW<Er*l^fP)DY^bNRToj&qfc$'7k0tc5\+#=JQOdJQ7[q:S.EUW5!5"%^`&M=a"b77]henj2]dLgf$@9:SQTr0@fo>sM4DN#qo]>^WmM:B!l]'_>9E3aej9W6Tps8&+i)R:Wi6$9b#WAtfSiM7Dm-rK:`*Dn%">iDS)aW_!8<9lI[MkPDCdkY^K$,`+4YJ-SaD(""PLm+(Z-u!LN"sloS33b59WJo3-18s,fN;#IgGCfi^`!6#L:J-$(B(7H#>ArG%"UA,:BS)2`7\pb`=J*[YMcsd:[@"G[Ci^4o]4A?JD#.%XBU@5UVO_reocD0s@6-/oqitm+7dUB?2K1d1Q/!ofYM,,m_"B"]CIdeb%66:<r?:(Z]'uaqe!S!R5J]rr25]q36$=p)enUhu;%<b";--L!r-Ac4k#L#mH["9$"1COK$J=q]fOrel=T0E&U>#++c#a_:O^,'=Q%-Cr`4)pGA[F)Yn%Vp1p2$cOMlH[&HC"6L!8;gPK:#1O@\KHEh%Pr*Z`0;Y]r1t"G08Y%MX[2S=:D51.4k!O*+U$e'kdPukZ^DOJ^%:([7So(DI$jQG<jItcZ"6jTbUAhN>8D,6Wr,n4c`Q'"p8j1d,PSsZ<V4c=pI:*a,(icaf^1Pf2^SjjWC,=s"=NAOafBU!TSkuLO;%bTtV=@-a7>Ep1[0<S2@`,:?g8e0\_:HnH@j1fE"K:.tf=i3Q5?Y3uMAlc'pXmO=nGrX0ZT1bPXg1DllMm5)4!N#locq4dD^`Nh!b%(QFM>TtQjH)W+9YWj>-HIK:V.*EdK:j&k$nMM@tWXU;3Dm"u"6EMeVJ2\fa"GG]&h#V;mBM5%?<4`m:Ze1B4[dmV[&"'=a2&reHW%eT,c!&Btnc7N%.0RQK.I^Scl7p;F6o@u+a&-ka!N5r<XTUY?GM'C$cIWprH/lk0^"TSI-5FPN'I([eTi2L9&tl>TCa*BgdiDC.4&%N#io(G0Hs+o["^1@aKBj%h8L<dW]eVB]qr%.a@&$E%$nr6??l$An1%Z:(<3-d\s,m@VDRg?kjWnd*h[@TQ?l^AjdPtilh`=?\+Mj%-\ZH6#;1WBRUj&[m4"`5d?*plKE_f-:trelNM[j@pIkjPeqqJ!msNJiDmDNQ2Ekf92^MPr`Wsc5\pU%STu!ct"*d<Ac/#rBkoGH(%lj#)_K+N?l9SCbBops48.']!PE#I7`\+jFOd_lENHj-fbNjHeo(>VFd]h)g2BU,kAcUaaT/%U;&'Uk7^n</!kd#`"=ChJH6XZjW$%K,'j):n[14YsK*2AdN0aKdKS/p[";NTlnhg=uKDp/d3ebmBk7$Bu1ob1G(FX5\<B->%m>O`Urdt$Or#[.;Udj1jNT!3T!u5aZ)].%peD2+M/Lj!dm=07<5**WKr0CVAu*f/0T3oX1FY/reWDE-=<^EsO1b9/.l;=L\FW.%Kk>o]2neIWcj6s334i[SFtE9+)_!THRKhA8%Tum2s]'%^Kh67ZWlY2GI@i\J<m[4cXp^26l"t;CF39IIb.5^S$@PuYf'H0Rc*+sm;g2UU3BYMb!%7#m]<'+,oX=)^*SJ<%U/Oo31%d#_qop<3m2\<@PEp<F#)-k/g`G-'$rb,B#_XO&45A4XjFTf#VfcO&u1U0?%(K_D5%MgJ'0En#'KW\27'`c1"3KZ54EP4s-sKLQ,n%,4/U4KXLr4M%Wu<L9V.^BU,`Lj+Q:WeN'>rR7)KO:2#&7@`uat]tJo.JC`&:"A_Nt$u*)Y(6a&W8nbXapBg,Lcj[II7\WgJPMe1+%4X7>WSURLn6@1!jF;lG]5YfnulklDsE%(kE)52V=BrIpc6K=TY4WJ*(B[9#Ll8M1G!36.^-%ceue=t(t4Y]95Q5[ZJ0ga>P?S+r<%MoCCq9K5s;_u!@fk"Z3lM)#H]8n^^eJ<oqod,Z=M7NP)mBG/XSB4IflVJeq)Sk]ToP$0b9kj?N\&t0:F1L<-h1eEXJj%6#!-@Zp/%2eGZq1qde8A!G?akR0ik4"-f5XeX>-(aZO6EI;I>,rFgaN*:S&KZ72h>`,'b)Em=AflWsAL/]D-SJ%CSOi,WrTs5.Xn)d(GNC@ZC%K+M5N)1<EVckm6dpRV[RQ-_A"5mY_abBb8DCi">Y'1.mmLH3\O&/qUQ%d]Sp)PiB#!HpeC1/O:j2F;'^i%irMSIiAQ"3HN4\uoXa%c>:ksX-(EOae42gem&Cq1pbauO#h83Q`M@Vc3.FcZ41n"khMDQA)`(%O:$9[5\%idkQV?8mb,i@#BU/^#d;Q&TS_Y^@FZ3f0m\ps%\KcVom".g,Sc@B**W[0oj*t[)P?6T8T:'lG%<OZ21\:"!PC2A>L,@9Ul28lOf%7TgN;jb.h483@J$.QQ/.DAf=:QUpn*J@W8rS1=%cp+FE^f+lq:-HhWfq0@rfq1GYaK[/Hq*"O0fhmTSGH,:24jgCe,Xj.&B/X>F%qVO$XNN(:?u+!1H=>J?391"LCMP;DeosBJo8o%7%&'B9D,qI-uFFOY7oEl,CnZP/;kei7LOcZH*7MG;JX9\/iA]2pUe:X+9R@do1@15oLc`G[NBV2hp,YK@Cn$?M@DeOLSB80E.5@WZ$%#3]ILkSinGMb$YE]]4F;)4]t]q[A&+.87+pgm&M*Kq7uV!q-?\Zg7M(bd>]@<u(s_ib+EfRVF2^0]*L77PjQj.obH5GN*6RY"nee%8c6fd'X=*Mb6EP:E;;Q`1WreV%<UH>_EP-hBV.j08F#,.qb6<W2\Fq\T1QI^GG*DK1L<S"dqPE\_%p&o9si7%'UW$+SbAHcUg31t%g1Mb$i*/;/1Y7*0?_-j-A:La"Zi=E]k3g0pJii9S=h^9Sfiaq=N5p1fbkb#C^Uh"]5')oVf%bAuB1S91H=hR`F0@5;>hY*QcdGsg%*=JR6>\;Q"519On1"Kt]dRpH$Ys,MLKDArHopKP_\UKP2)0VQsHSatD-475/m\J0hN26LiB@:Fc'[3ElUsFE_O(L;uB@m2jG8d)U%T=G@SbV3.k*HI^=8C:S4+X%0O9`"*H8fPrCq@![SgDm$8\1kh,T1P[N6rI33dUu`2X<6c(c]5B%DU8-;Dq%IBcM:.77TLJQSBoF9%Tj?G6T:$#(Ok)Ob.9XpD+.UYpm!R8BTD8OF_E-j9ST7^l'B_00:5Hk-k;0ST:D;iriuUZ9m4"[L=i^gdj"oD,jfXk<pl&8=gK4s"%B@`17p7:XiYO4s%hYEb61(E:bh_Tsc\"2uU'(4H%q49#YHhtt\9ZP.W5`r8\97*%W3:f;^?3t`uHtG_X[-31hj?ka/Xk1$Le!JSt%bui>jHH3XWn<rIXH[O-rI0rOJ/WZ)UP2+ono0&;KO^i:kHR:Zo3?1-<1]0)cDkQ\b@jI;o/$V.m1WPXKh&><0e%Bf"d>@BrK=b^S%I!2("@rOU^]4k#ec=][j>Gf^AbSW?G_TqrcT3YU$B@:G*Z)1oNdV!rmDE9kC51<Yk[%WHN)3W.!dn-0O0?\O,8>#GF8da*?T;`#L%'F*g.#)-@<P<O&GqRfZh.n&PY`b0&deZeAUpl*&6K_`IZb\Sc+f$96#bc1)K@XKLt7CrHCprp[^Ch\`YnJQ=<jk]-ZcO:.p6I<[G%9UMW=i7TNNE@%s=#3@Wc2hWktb%Fn@8e%nmc`C.mnC:[6[CX^C$Qi&)Y$*9$B74A9*80(-lSIl4jm\aBT,E2'_+SEh#-as$X``3-%8<aEuApoDu8Q22Q)%Wsr[O9X=_JO^BG38HQpPr9XB78neBgp7IcPVJL0R))\oIO-G#O=/j*98',=e@E$PaJ;R5,3UL2tG8jbS73$%46h3LCt"P+dV!+cE0'P*qQ.e;3UU%BFl2[Ld69W-:\LU)P1B!Lh)8m!B3MPpL5ko[0so0UYe"r=5B4HaRJ'c,V\h>GB4f%Y.F5BI%9K=VXR5,UG"HM&8Vg\7q(bAs5cp"cRJcuZVJn&J04Ug%WmgP$.d6=>9._i^H5/VR+(?dj6B7O@.KsoAmZebDb9)HgrVf=rM4sNbP%E[uo2qhtqr*A&5t1H6an4YDLUqohC&[-Gk8@`N"1dkgAIMjXFr%YOHm)7R1q6)T-C.?r\:U4#KKPnqpimkY?I\;a<4I`=H[V=gF9%TCK(kbrY;LL:5Z<cb.R@g=djDpK8fXBKGT<Y>iW^q[CR%-j5M')3&<'[tFEXj,[WDI7E?VC$l5n1F2*o9si5[J)-!UdloQ$?-/Rq%p)3&?hOdrCOiX*8Heqntq8e^XdV$K/FSsI\chJWjAif04ih?d")s];9;ml..g1ShfcsH%Fcbs53L+Ahg)+.HPRniiSO0I)#];P`F%h2Pq,I9&S[[>jpK&J_Dm1#?P6=:2OtIHG:kG=g2F13,k&31-<]?tn?=r6.\?QFbB>bV+`KdCGkkGjB:$-9d7_RCRsaDi3D^T,i"#%=En90ce=93`QYiaU%3eP$8SKAdPG"DN7?1tZd[1eN;ArFe7qNLgs;@qV'h[nqjI6oeS782b$tNWcA%baR4CufW/NaZNq?=`09Z5.%iE(KNQM`8pIV,hoNJEr!RC46_Ra1kjiQXLu#PU#G;RhS%bl*Lo[@OmgqjC;SD?/+qT:P+[UcnH.Uq.(ZkC1EM@275KI`B#I7JMo?%)-?YQr5S\/$'TdMmUn]a0^dkJ`Y4^O3Ok]H"p"RH1\W^(3L"k$mUsPV!JM'PB=Q;7)6%\Tab7,tNn$o'9F%/WS=TKo5.e8r9`5AK%8L"H41E9fY=h.Hq47:A:)!aTg$n7B0#PBn32Vj49U41+_3Dul#l=\/.^iS5.TCE[h)*1\\"&#\WjY01&$jh2)B'*_/Zb`h%Ln=_:%k:dK41RVaTHerDR%9cLGm5*0GR4$m+T:9[k[:=Uh3gW4h8=q&-6es_oJ]^FBQct]?cqfI6%`W.IT3&c>4u_5m@E8,tCu^.6pC,84%c17:jfeI2*qi1"]''Tc_kaig(>p_l,7/%,X1FDX6[V(sX-ro$,4Vs,N^QC[SreOlRkB^`^!_`DaoaEL@I&KO-N-]M"=*CHRct7j.%F%>j2Z`!:nb4D,0nb&juGT.Dsm9#t=>H]!d1UdX%ZAVRB,9MbB=u4';$-GXt(nT,GYnKkAL1a-#HdWe'+]1#[cL=L6U1$-<B8fpJ%I],%b__5g>^GDf88;fIV480Z._=!7K1'a)padqDQ`BCO`eg(#-S_:R-B$Gt])-L"BmWkAFFI:cOl\nn?W;7I?c32FW/TRS.VNa(V%7dE_Kn<lT.$jgd.*N_,\FDGP/X#%Dqi7adP\N,Aj#,a6aCJgok.%QLOX$!!fUGE\?=>rEV"::/AdFk%pO/[a<4d.lbZNUQ$1W`ZO%=Z_s+U,Y?4RE?E%&;&2<0KEXCOr:;63CCVnk*\q+cA4rQgV!,;.tUCYeqqEb;LZF>EJB.bD1fls=_&?X4!J<.$-<])B1SK#b&^"]%86A/Ad>>s_70%,o)j)r+-4It``Yfj5aAct,c3t[8TtcdNCDP<h`L4R!?r]%:o0F?!9QdR!"*UU=h9e1qH3[20BUfC@Qf9qBB7fKK%UYO6V,>PJ;3bRqA';@tEqi8]7b7i&U#*1R+1%>[i`oE"HR-sC&`u4%DkL7H29F9:7*KN"Pe>\)A)%m]E%jkrc)iYg['9b6">QiP<%P;B9E#/(8*1FrpRVfth[[!ZTu)j<(^E>!U.->,jT3q&H+3tON1S;ElULZq4P,fD46gG:jr)uu#DTQ6o`PDhDH:c["U$>F!jjp/!%%CeW,2Wj6V+%jkq>d3Jc89[:kX$E7i8c;#sRY\.ugjZW0P#>;CTlC\.B9[5KS!?gcsS6^?G#EuJ\Q#(>JEn5;@g+t`FM5QTH0f_>`%k2,CCj:!l;<N%^;1Lh8Ij)IQ#Oqhs*34"BrkflfH7&-_83g2@*7oGr(9[<E01<=V_B1G5)ViAb8*fdDk1QaKP=P>,lj:">6Q@>m=%6*tUnNl[XQ/-r9e,%k$C\p@+>c8=Dbbo)X"?iVFS='sa&1ShGGM4@^sc:+TD3AX*^L>:#6%$+1eVE9tt]L'J=K?77f+fsgQ0KB5H%d;9d_PI$sABk)01&uhK[0fcSm"-D&@E[Gh)*72^dN;"M!^LM9gf$5u9?uj9=gI;_fP;B!L6&<A<loM3HTQ8V<XD(Jl$rG#$j0DTD%'.3H&n#;h6Pln60<6gRZ+u?0fJXk3Th,-0GDe%XOVfIM;6&,juB?%eN@C1m6R8k%U\;e[7+am[2>gDuc3T+O&B<m#+du2N5N/4M%%<S4jP)$QdD1m9pU3_P"4P;uS57<1C`ABn/(+Up&:.R)a6'61'Z7uab5Eb=koJ`';cN2b+DdpR6/b-Z4ucfRp2buq(rgl5BO':CWZ%`7efUB228M0R#-^VEJ!-G8ch>6auuQ=MtH0F$\,d>5lb-b`k8`G([u+2.i@1S]dFSXK1$KK?ID]nj;*@SEY9=o8V&W%#7`)(Rhn)%@7.:j[<"?D"PBW3bF)[Rj_c@XQSXU(<2C!UBBHM#F(8b+%mTYa2W]GLJhEHTYTPZ')IOC-"p/7@R6jk6Y(Rf0AD,G;/eZZa+,Kg"%MlpMp(P9$``_cS)%L[(p_I>#I>m7Q@:P2VMc<dT*[09AMCKFq3@UC,'*.im)=j-nT6,]u0@L#'2&Q16-@)c^$D*T^$!`n6cA&`=u%[M92rCUTaNCf[ZB1n`Pk2nk;U^duL5*.$@S4)&OnQ;qg1"FuElnmJ7B.O__O5q8^LH_$*eT>[U7gkWVE<h7*<*kVQJ@*cc-_o3j`%pmQ'u;KWWjVbCN\fIf&+,-Q)P`bmBYq!UN=!=o:e[?(l`<=Xh$@m_nRkjufT)&Z];Xu)kKE?5uC=Z,TR5aWgWc1V`ZFYtp#80\H0%'`Cus\H<I9\t+q=I:]h0n/&Y7K7h[;O`K!FJ8aSUs((;,P;I?p+]5t#jOQ69q'"@I-4O^HE[P=u*KgR"=!2p&f#i'\'+i@jJ)uR[%9LuJX*1Nm.U;[;8?5YUkXqDVoOD*_^,glPG!1PGV!C?rl(LYHDUI1gL*&oF"3d)\@_Ij]U"Hlqg!"2TLOmL=6@Z.QNb?D53ZAToh%4^-Z'\9A#,N03*"#n1f3GQMUseR4UpF\7qaCp0Ui=9fd-d8X08Hc=f+amQd)%PTEO@ESEU^]XIL<3MjY6NAi*X$o:>N0KsM6l`*W%3"\Eh/h'jD*HUH@^eO'a&fd+Z-Ub#Lp1-HJhAAeK>bs3R(dBMu"L8.bgi78g7$pup7Oa/fcn`LNTQVH1+r#XL%R.m/$EMWSEHj?*%_&CJgGt?j>6U6t1J40>WoEe&I7R[?Xj\c$kON,1$OoSU<_D\f]I$2LIH4/;u4!J[H_s=W1N6X<L'SBFecu\Z`No9M>"YD_g'"c5a%5(EaCJsc\"__O'35dYZL6CMbQC.1.=Rf\j5b*2U_8[Diu;T[/*O5q(h:8N&*6F#5s8BC*+8SC46.o?k]oG1S?Ys4CO"1R].Ys4,Y%i^EIT7DKY?,m'c,$2gftW?*=ABOhcAeO?B_`@BB`,6J/V$!;<[eq$`?ap_0&j+AZkX&lIHKuL4<6!#2k(ZVCh<K'(%IJB`K_Z^<)%iuQ+;:-;l1TOU?PpC/)Y\h+Rhg"NEN\J[::)H_p1P4Xs2S.8_.Un]YXPtd(8\c\%5nA`a\_9.+t(<C1[(A+L="RM4>TGtO.ZH=>!%VB$tY6&#Eo/0PhCQ86MLWbIGp0Nfu]!UR*lPm!D4iOKfggf;KUohGUugiBEP\C3EnSOrVLe?1((([-&4P6'oV1'9QbklGuF__[E=%dAomT=GpV2PR<?q`0atA"r?QK:0ZrAJ=>=9KFF<CfdLF.$jPsRFJkcHL=Y)#7M'cVA#B<1`flS)F94C\,3Q>f-k/PJ$<,Y!.*&4]%i50%3<kZaKXVb,4Bd*?Z64a`3]LW4F3D?j>:5U'EdfnAagGmT+Sk%3;D?C3(&MHFJ4`$RsFqY!q/!CA(<TOS*9I4fo,RK?hm><#N%,b_B3"3%cm+SA9"iQt!_#+goAfn=?:";l&3C*PDl4UHu@[T-Bs)B9SG'hQHWY,tm,L%WK[Jsr_Wf'gDV@F1b!G-$Fo!9-gD'K)1D%Eb8dQg"S],.,$u?005Sm+m9UnYH72I3!8o-6sK^8.LnM3[)E.*;\2&Ih];/=^U@!mW/1'`G,cfg(Pii75<NUoO=LNc.@IY3aO$G'%82E.ek9Cq6W11V8-k(\('Ti<HAMS5j">`gU$Q:b\_8X8_>E`[o5sf6(##5;H&ga+=!9`n.n.,_`oL_e4,S+F\#(r.EJ&9'381ITn%>o1MQ;L-0#ioY&b.-`\G!Gk5EefcVIOoou[0V2,;Ll*-B17UJ>A913cbT;@u5YK>k`e`$D9u#QZ[2AFg>1I;+i&&6E330P@T3'lj%VQ3!,6eM*""F=<4(9AQ4&j9i.3Fs,W>q<VV`/B%;F\a[W7Yu.?m8=MgP4.,h:9(#VrCPY7;4)I;g7j$PB.\/3Z$.b*J@Uq[2SI=_%)6p&K.-UY]R)`Ga>HrAU<YY@L()bIh<a.gd7tF;05i/E;``ffU/@7"F(MG?\>IZ=X:8l\EPuP0=#<WSl5i!/a"Z_fi!BWEV(M:Gc%+CReDm]KCN;Y$Mk(L+aYPU(-ORJUZ8R[C3@:",IJShN&Fk.?qnr=a4FeOVP9aiJ:30Z0Z@@D_LZa31"8<+5AG(9@&%F5KBkmu%V'%<VL`+$XifSaf=mUMrk%,Z5Nle5EOW#![5I&:_MB=6Ck3'g="5($=k_2r#n\F8f7)o"D0mMn$.?CUn#?M\868Wg>ZI:)@[#%\f`0>%]+/Z;Y(Kd<$H8!lTrN3g5T(D$hX1ZjLp:g@JjO)Ad,8o]GmqKY@>]lW<=TQ<q)<mQ.p$ieIKa85KL)t3SAsF"ZU(Xac`59jRYD6u%kg@Pd$W&=tSKBRu9UEZ=a>OZqjJpk`9'Ema/%l*bR+37ij&L1O>1sA6ES*L/V?D]@:c(kb=m>i.9uL!kCY4i]#E[r'e6[a;92<&'%htSYTnSo-*I;eboHp3*9g7U#bT',QY0i+2[9NE3CF]*?CkjjOUZ=[<taPcL"R'ggp/g(Mo,3lR/[P`P/3iGV-JSc/>U#L/Zm53Z%%7AN=Qd!5n$_&HmU'"5,`hueS)&.i#.Reu=\3JQS3i^jOhmX*:a\q^>c>isMFV(LIH,_AM>CY>">]L95-P7iB)24+r5q8stZ^]FX"%mTfm![21<k'^cL+'nL4l[,)e2.'lM;M9ml.C&3Pej3>Xs\uO)ll;R<`9i_/5/h!2>m]]3Q8qUs]S2m(%-CK<oNP22h\'`Q>>XM>2%&R'B,O<K2Yn=5jOQIuboOVnH'8pHr.'S89k)3FEQ.>JW_-o/UCqOj77&fj4<(sGOuq>],pZfO`<lrs#hn.5?CAu&*(L<gq#'2e,Y%l#Va"AW[U>1)UN(Z<0q5.%pXHWNX(Nf%qH8@`UeH6REXbWE&2=_8D&qHX$pc+t0a&X_gBTQ]Pis'35V=a3Z,C[>>Y4-+b+/]W6!e%JB\'b,9!Q.,3op":)7StMpMO_#TB)';FNQr&BQU8Eu(c"JX<&;&1SDeEWVL2LoNPs)s$GN(%T<%ihT2kdEdE`-kt*!&2g+P;-e`;%0EHhBW_u2:H*>.+./mmY4WonU(J&-EpB=aAE'\eIV]!?28;N`=R`^SBCgKV["W.??l11q2KPNA($4,0LYU;1SA!L"$,?u"0@LKIC%n8T.mTWFtR+?'Lu;XuZNJrCDC0[SfV,m#F]mbrh4l]e7hjM+Cc`r[Q@O_<6'"s"X)WeKUoY70C^4N$+tebt1(?\TN63ZJA[gsD"Q%)C(:b9*C@7?B-3!mR"1OZNYeHX6qi@H3YF\E3C*u*]*]=HS#gIZj]RUV%n"[8rZnH"G(@X6o.[.KCWJn/Y^]>Tlf_+M_#:`-ag*q%i!WIp0h#U!IL4&9d3E2&&Q9UdernTL0;a1@aK;d.GVf9dBV;gD/ZamWdriPkXZ/)K&XcI`o227_A3XoEks@sk,:'[VILj?'E,).1%*o*\KW/a=I)SA-]9+sN<CO"8PJIS%_=`@k$97Y`_D`)a0M`b(\=I+Sl]dG</08P!QS)al>5W3$[U9h&*WGKF;fNPPh*0kcWOPLks%lqi(L-iDI>d5KO[:,+*ViP&;5BO<>;k585>>+2=K6%>^6An<'k+5&H+..as";m`N0A*+]"1%=dtlSf$I:8JjBN=K='\iQ4D!-&.B%&A&be+tuM!N2htq$>L6AI@AY(Jg2XFFZ3f7F&i>Je_nmKbjSX+4]o*-.%0S$JI!?&G[q[#er")LVaJnN<]%r-TU7+b/gHVPBP>Pc%ArFVE6DC?7V%JY5*mi_/=9O3/%m6%:-7VoT;\]=T=J[,V:M+(!DIQ6QO"YnB>'1Wh:!h(@[0sr6+9RfK>I;nA;5be<?#'^G<?O57%dDc9ODeWtE.(:[8"/=78;aF1Z"!-;J6Y)!*48@[/,uAmN:c>-^7i!m8MqI<e"@WH))=g6V&qmeoEV%g=ChpnVZ=gT>:jpIhlW;Lr%U+HUm1pEIF'sT(IIF>UP8Fd_?)sOBp0Lr6Q6jmQKr$oqc`ghi8Z_Bq%eBK4E3C7ePXs(['4=r4J*J&r<.i*#XHQ3kgUGWf5E#hd6%$*Aj*;]NkI)%tRCfE#,6;a;B:l:kXnO@D+C-V>Bf%_Nup!Y^El>XBE!hM?4[,nZ/nXuM_8->%7:6%?^c,igfpAX,n#N=to8+!.EG%OA.:6G@\IA59WKfLNb#`E4Qn.&;j6bE!AP+dGe#jJ'@<@@Vg(E\0eJbfKrY'S05o"mdJ(8W[qn9R!D7GGf^d&p2q`#?HV.2c?"Wf%B=UsIZotDTX8it+XS#F`HXQ?l:7&(r,a'N3JIm1P+Jtoal"+`UgsK8.."GXhkn-HK:Bj0G-F8htF5%%DKcDi`\V<SH]2>2Sb6T4U%@!3[Ei-:ER#>!Q<SV9&C/5o]WVN?(6+/1S4@4G=XHKNRD_(tA7k+S1SAVd=aJ3;`m1'EsZrrOt08_Oul;e`OG=`hJIOP8XFOS'WE%Ph.C94@4/*^_XXQL9=B6BS?Ah5u<,0C9Mj0*3NV$-3p7-Tj71Wo.iXt6Ynb[&q/$@D$;\RH;<3e$_=10j/J0*_!(&BQq@^9;/0>*%%qhSp$;=m(l\rpP'o>Ad@jBJ@,SL?a"rq24BJbcm\BqpcO9=@TRf%tBK$\JhTM3df_Ak"L+V?WMZ\U60*13mUB40esd5#H]6:gA'%JcZsK!L0W@[N6;[pd:P\j;8.B1&0%"KdE71p%f9#4&^g;INC(/&YMt<l>R+,c4EF`i8D8ToWq%raFfI_kh8FY*rQf&?6hA_<)ulW%=<e]=iAAuRk+Ij:/D6=jNVH_k'H[Go">`NAeBuBe5>ePNj=?;nA-7N@>BKQqBRu&[gs(/CClMPl4.5#-dL[ZpbG#$J&Kq=*TC$m]%UW,T.AT9/l'D-YG/Omkka*5*C"J,K1fRdL?mDP9n][)_q1r,c7BSg0/$;=1>.+A[)K1@@RU+l[l6I78"kVXMCd865B>"`tbb)hl&%#F(&U":*)nmId,]$&D+SgQPULfX!^7C_ZXK##^Sm(G+7`ZUBQ\a9ZltP-Qj!(P[,X4T_;]*X7-c#`MZE,(m]_<I(,HFMIlpCueT&%aB=Z;-3Y<g8WtZ>i_BL#SPf/dI(7]<,,&jp.ifp+@eP3o"Ze.NRcFcJ<]",qZ4`g4:S!snf]]+[3kE,YnVdNSAmdJTdk[0Q,7q_s%<T5f5_6fo!ZSi>+Y75Lm'6G5%HKA>HFk!eG8r=G;!to"H8q'_R@]:_"s$=%F4;fdj&]%/#JZ9hm;?.rDP\m!P)-PUQ=muLS6+B`&%KgNT(_c1)S<]`htJ^m8'4f4F"Ln9FTb'.]rXa*=^#`es_fk"7tZ.KF9#CR%p+[@95&=e?DoFe8G.\Y6N1=*h&mU1TH!4B_Lkb&OD%)"oCU6HF,Hi+%-\W_S\s:J?(J@75+1?QMDZ+&uNT-*q*u0o!//!dD_i0Bte):mkuJ_Sb%I(c_>4'\6//H8AaA+<&B;g)@kC234M0%<]A/gA.#"V^n,'()G:KB+YTmV$SaADFO<kX>+nGQ'i]9/OG&EG1A4k%+a5srMFP<EftGaApahZH89146QiQV?`9JH,3rsd3m?6\F%kZZ_;")T?,"PkH+-X+U+>Q[_-)k-RB8B(tOL4gGd"I?-*X+>s?<a=5Z+[ZVR)tOKsg-H,.*__7tCYJsZ3dF;[TQ(:)JU%33.lk"D%5]*U`_KC=7^ks1IATSiGPXu.^@?.<]!+Da5Qm.?8EM-&EQE.pbb??>*UQ.>]3/S[d7\a*6#fTm*fFoe^M^+Tq1A'J3:-r/+jrhCe%8eM7=lBBp>6)?9A&Ab'!QDd)(DffeAIcQbS83B10@]W6+K7=.61Jo!VHP*X;$m%Vm@F3)k4F$`/!%Y<7lKD9!`G"G2\i`lcJPfg*%Kch-ZMC=R%cs"XbC;b0<FQ*XN5j)QfVG!0O(XG?0Jk[Xo2WBH:mLCJ7e[!*u7(@mj;<d&Y"j1^^ePHsIUeJF7iB_X["q.hY5j-&-%7V)ql.kiqFggiF>4GY4JpaH%U%gKP?0sD3#ZGjJr?k64Q&0r@"%Y54:GJp^r#/8>u@9A*R!-K"i5+QfVc)qU^-V;+,/ee;%o;d=a%!<3dt$\7IACIg?J37VObl@qRPJG6aq2"WGonk^kk01D4di5=U5afOaG[93D!&FW(tYX\1D`Q^oMoL=7l3!,%b_T<$2GICB[iOD>"%!Mr?-=;<qpjCfbDQOs<?Grg%iZ%ral-fA#1_Q'u+L-Rd&mKg\K)<n:m:*s-M98ZMSD=+Ol?pdAg'1QfKN:9)+QU"8A?kA":jkLY4%UVfc$PSeH#&^0O47^?"?;jsF;CN@SRU!Ck2Zk?@l0^Unmee&^<@"L97\m2)3JJ^\:@_tA;JY"mk3_K_]7$^+g'F]s2)Wk%D+ga(r%j$[q.$Y8]1:"T>@hdEFt#;:<&Hmb1;%P?3WPV#<qnR,J#Wd?jrOk1pAJ;tEc;lH4=i'e%06AW7@R[b=eg<PX+,2!:jUC:6QNtjss%KkO,=7Wh9rn.plT(c..K$:l=O.S(8GG$p^FI-s7[8lYs-DGj((i0&*hp,GV\$BZr;,!9qs+hOl*B`kJ//"'/ZI0oYa2,!TZ8VD&g%1A:g8jNHhnK%EB\"cN;6o8<albg/\Mku[7T_it?"2%W?Qqi76e_Ol-&l:0Aiif2Ip"NNA?2p<d''8@9sF#Z5JMQDJ\:bj<<J#[I5%G[/.)O!M\L^e&,V9h/WHc&_-NP9aA9S;olT>2m8+ff1>21_bR.5^<(kE3r05T[qg$eB`3@d%@L1GCc`o9_XF]?Q5)jcT8o[K[D:m%NX7Nn4KAQ.$033q<[a`YE'8i',&+b8CBW"Y:Ie0j&m,97B*:4ii).L*b`kHe4oDd?l%H0L\+lCq'pqtd-+B&?H@3?c<Y@/c!MQd.%AQjI+L#CC2r&L)I"Ft\g$UOq&3u+KaFsGV6`Q8kQ[Uj[`.$&4(C.:f;i?b;K$8%F%LRh%3+Os0p,bE9k@K>.R/hK@n6W,$18bg8Z%,!QEuJpi\r)L0IbU++5sa#iBD.odJgX,d(m(r9*7d'"(!L1j^$=MtCTjcnka!V$ih.j:S20\ih\fcUpC8L(Cn./EN=5HUtc]K='.%UeOD5%\sZ]02+r7dr?/%dO_7?S1p64)_Fe)QDN20r_SCd6oPeb%IkHFWXmiVM6*NkJ<$p[$q;Ylg!CoHCcFUapH_)bqd<-M\-+Ba%at[*#:9BuT\%4+S#Y55q8g7)N0O`q2kRbm\!fS1/CDk&5Buo(88>bNc;\cB\#n`kq-&nK5+#s9gCIaBreK#m9*"Wu.%l(F=)/FKq%;8*N'agX+1K#i;/[B^gCkoGD-lVtQ2ba8go/R7S0.!tV;mrKcC%7o].<1K(<[NQc9QCKh,<C>S4)ED2]G]'5eQ\hYk.q/i9$61#J%"KJCJ[q7%W7@[UT!XBO_o7XK^.-r?E6\'[(7>?4>^g(#MBpbK(\]9oLUG4qtKJ,)c6[.Ho#j2@HfcoZJMO=WM!lW(NPU<M,%#Q*#%ibU$n,b8O&Y@)-"p^>=/:A#jk#+6Ee11K;J/:8RGL_h%]8@W^\C+302h&p0\J:O`(WRV&`&T2-0(45&0[XI-E9;@,K8CKkVZ;/tA%OU)\fVi?t8JH=D"l'RZfk=Ek>lR[6s'L)'PI,]f&aiP0u\rfQq8M;D>O]'h4C_3MsQ5jenW&=]`b0h2K*[QLimE4tP$D.tspk7(b%$8%pAOhK(BdQsaTo>stc'hEZ[-;cfB_*o0]5sfT;iN?a^*%f*NiLMBKiUc#$D?RO*_9FA[<l#b[-ZF4%UIR45O_a#=C/<n--:/D&%7U+gYAi66`Hk16F0J0WXW"9g\@%4[].>96A)l:#8:o7@m@9FdBR\1d';Lm!8UeItFnJH)ZM\8C<L0CsAIBN4r%NrPR-PT!l,(M'C%S"t!L8HO-jg*kaX>mk]X%X=m[-31;AK2Rn3IlAVrMm<V`$1_sTHb9q:?.fT^VP(IE-Stt&_2C^ueB2`.eQ#'[ZjN-">`M9&C?U7,%eKKaH$[J4R29Ci[5Rh.5kW1D\:.ET'USX3n+bf/q=Z+Ce<2N?r&GLoeYb#r0=V@mI\/?&,,TuDi/]Y-;L;6js;HHn3W][!c#I.nJ%1J4rH!phD0/7IV5pEL[(k;9TF5A?^o,q=pqap6p,YqA]6J#/5I0'T7t#>q_R!1IMii%5;`R^3(;5iQWKe-Ot9#E=+@(AqkITo=S_%lH-O&)p*RVRs!jN!,8CI$;j]E+W,k7$Sgd7![TAh)''b%9PNp5\8@&*Cf,80()E[#=qOP8\5^ifU8TE)'jt26(Si5riZnn,2q-))%0h)AO$3J"sGtS9;!/_A!Y19Nsgkh7q!Ko5RN?SWR5#3GC5S>Z2Y&>Fp&rAW*hZ41s@]:S/M%h:W)<*hF!`O:ip&]W<Jk6lGURob2%Jf7.Y7je']n^_XgZI8i9g/O"5[ZUa>B>I1&)h=q\+B?nU45g?192FQ"iZ5t2JOr-UAn#NZ+jt.h=.)?r![*'2;9']<q'@.d'JMR6%")4S#T>%r?]oi"#6+eCEKqcLME;Wg((iT)48-eH?aJ)]rZ.0-'$f\Qn/P&NflkYsQ,^cY3b/juM*u^QT%t*9CK"70"WW98+QOab"%3@QNl="k>!HaM=oNfQXBO:3!(i^g$KFq`g[T\$M,e4We4*AAfr3')*]VF]>O,:0.]p5BD9,mF\ne#<H##kUqD-REJ[=AK!;A:eXu%Q4:eS8//,)LZ./O)Gia%J[@PjAO0W6dKW(-BmMco6tO:tcl]0!d&Hl/G`Gom;Q'O(phht$KTPE)#M<%@L;RH>@cp!m>NL;LgW:,/%cB.?0#8g=T#YL_C'OGJ%Jc`H=pdp(J`U\=-!q8b0+5[naSjnXX6`f3^ZYsd_JchP<>O^G\.$b$gOB4i&c9a+>mb=3(7SNADe$fq+%+J<l3i4T>:E$!@@cUS/<d[*%J<c'^idM*+*Y#llbnQ^lj3a.CDj^>!Xd<L60PJ%<r%0T.WP/9u0K1K*?k*&g8CpYaTEDtk>nBMr2%_aj[*f+B-k3B>lT(ATSaXO#tOL.WgQaRD>Zb81%+p"\bi#sbIB7W)g#XsKl"m,lf4nU8GQ8,cR]mpRo8)BD`!q<dYiMf.c*oc:.C%0i6W3Jq;%n-7G__L(L>keJphjB')EggQ>He)nCQU0g1Ge*]3&K(gu$T@$>p57S2DfMkP`eEI6LWk`E=P)bk5s5%8D?"W9tdB*;I+%6?Z?IK8,oC$;HVXI'b.u@gWP^5m3asA,n-HEd+FD6W9rJjZjIG"@NgJoR>;pPn]c#e@:*kKW$C\b##l^KnN>(M\mV:p5]8,3["NS%`PTSd4Nu1,5GUmfUQ$grXd$?$"Zg<so[oh:0e`k9PuF_<-/qZ:VM`!B82)bT(mQiK:/jnE1@*FoGT@d-o&Yjajlu6p=/Z%_1p_/N%4(\l!-QaR!5!-sKcW4F742aX<+po:qr'W+IB/lMP-aRCfZ^!e8.'[Oo<JqUoF)**T>K@S:A?Q?;_H-0IUXa?@:pG\(L%SW6M\Z]C%D1Q7r:j,W&4kd/]14cZ*\qi-[B,]5TZVZ6sR50F$ZXQ_W6V.h_+%9ZG7..Tp^Ye<-q4J'N4IVZB7'cqSl\R5tq08WD_$kq;:](c3%A>%Wcjr?a]4E5FJ<aZ(@\eKrm6PV`gRCpa2SpUte81c3Q3u'=aGdEVtbdA7Z!5fn?Muj4DR)Ml^3M"N8djRI:2nk,p&p.C>1gg4&%q]*Zd-o&W<-SkP8%"a=TU1ZKmM@a/bH2t'GGj$]2bI!SN5E4dm+jr`K$CDlN$fk(PQ"^=*^/=8n#Vua_=r@[/?Ue:17$+rB,CDKC%a]J^jL-FZ4Do^E1#XcBLni/uK,/Z[-%-XjjP&je_]ZNd`)>t,0>UZO5"jmS,o[KB<71-Xj#l,No7=tD(ZAu(6p'JF\g'S*-ZUEnX%0Z+HnE6<SG"LQ\hBUQHGAM<PodX*>Z8Pi=H,@dY]]`l]]8SJq'>lia(MY^+_-Rn:ThFdJBjNJg7*,d*)*Sj2\NBt!O9nS1R&VLjo%P#0&H*J^uKW;#@S<@F5>Ae^jLV`RJr&YpP4#[4/H173WSRqtYI04K2\L56(s%Z\N7??W9s("k,@(KCplk_Vc=cm"$[1-W<B%7#lQ%gd`V<XFXqRQjlr8\0URhc7'5BCga!p,Da^7gCQ7U"0kEX/uVSO9q4hEOA@i(A=G:7astFi=YH^Y&Si:rZ36P0K+o#UncO"F`VS4-%FBY?cg+sF6LuD_6*0H2BA-Hb0=&E<r8h10pCTr?r`(oEB#u7PHO[;@S#9a[_WLI9`'f'!.g2i=icI3^9IV<9g>?"p/i_2b3>dci.%Q!BGHARZ)Ne.Lt!YSW_+"jS2n]\)t57@1a/Ih>1,'`Fh60.^cWlmP@)#9.si1b,B=)1`A5@=TU'XMjJT^J]X23RfI3@RWRcZ)q#>%/f#;/jI$d%hr8tE->@<CeXl#6lkrIKU8I*-(#(h-\+!/f`#tEDlc<=`--Bjd)=:X5O'Be.V?F/BQsi*-.fbX/6`Hs_77!B*cdWL8%#E<VFj<ZP2&M7s\1;B=n"Kf7AE$n>rO>+XNIK,<]m&Z_u&rgF9.1i*4UKTZVd1V;A!6`)bJV+c(#q\Om4lDk<SqbTNZ0DJ!c8c'T%nUgVtC"d$uf=3PV,98:YNF\/-KbYnqG_;b*TM`P>G#aHZ!!\b=7)=)5Q6^Uo/Ps:1+plLk;`Ef5/>aiKk6u/]\$6iFbbsWE`-)Vn%,Qb6T\."@^&ddtH(]h^)->]-MRPO]#GeK55&'^or@K\"k[2)+JG]%Mm85\bC?kVFe+B0,2&7d#O[T$MlEK,WNl,SqO#/ungX@S`b%_l6L(RJ?/8XTf&K130,.A1.%$;QJ(70.CJsW2`u=dE9jF6%;2m$1'#bh]m*bF;7<A.\mn\$iqu$_A^;Q7!rh34%>(GdP<.E"SbQp%RNme/ND@0SE5ajc:g\dm$OEn7*+C1##r;R#;IYqCIM*[-V$;lT*%6I@[2%q.bZa1$%5"1I;[/OAE.L))29`KOW#M^G,2s\)PotM6%HY3_e5a'QpbFN=+Jk!h'aSo=mqZMW]h[-bWP,pFqa.>T-`C<8bVXJq4KRNYg`ppFtTT05bPI,Xe9Oh?g@I.h7b6*V4^!#VBb&SM6%+^j&]/k$],,[Kf9b-2bYifM:q7:8tp8t:]S_Y#b4P`W&qWcm;;5)WlTYSn#W)V#?R:>om+2/OTeXqfV<G9T*TD?6VM["8hHKmb5(%+p#et0RV4Ig8K.<aA=<1PBeNO-n$I*H6(;Ia;eUGUL6_]SHG!:5I5&LmLuqfcD&.`;.pW]Z[h=ahA=-Kanrm2e-`Gol-"mR!P\[<%6#\!h%Q55>Klos(2R_O)MC2kue2sd1`UT.Bn_f+mN#3\aMupDo7^*FEZ$>K0EF#QB@lQ/5&=4cIPuP@@a*gkc2Lkl\F\3m4`N4N'%kV-ZQUJ_'oXn]GQ6o;er5)l'Ubl`"%2>$;p;ViO/9T\6^"FUEG*uTD3\iFOC.4IrH6C$'*%cIh+Kg&sAN9\8-Qq?V(%`sUQJiA2q%/_UmuIY>%(UHlOAbZfb4(XB8K76K$'-_"-!/8V``Sh\,@8Pt*mlrKdFIT4>nX)LT9,Lp"e1Q.Qbd0-0l3q4]^$<0AO5LNn5`OdC7%Z44[F7FZM.&sJK,_3'W/.g?rSS:MIP:<DNc_ICTVRSl`j3&3`#\;C\An5reU3rpkCPusMP&u'-UeSugdNponMjEDe%,#k5NT3s(_%C$e&tYD`Z.aW%$c7V1#1L!VQC/Fa%NoscDDP'p+<P\.S);-I3!5m6'ZY,\-tkQG0]%Qg4b8R^7g,RK<o?kMGd:*![m-*OHf:W"Uc%.;U:m]*'=0Wa`6mG=JDIGcB_!^.nGm;@rWgL'<!#8Y%E?(<2biT9YHh8.^,M.Y_@sL`LLJ+j,i*m>;L*X-_gu9$@DZ2i1Oo]mc\j%ZVnM>8KoJ[53kPI(=[pIY?Gk/NR:@C>tt_O*`<%OiS5-57Gc*A1C9Y=\,s"V5#D^2`P>6Y4D8/1I9O/p'14bUmL<iLK[[-<=T-D>%*6:jT0QW2<+OYr88U.d@<)mq"bm=3Q+p3\X`8k<HMr=1r;,7W/D(75Q<gG2_WM7n'L+;VEs+mWT/BeN^pfAF$>Y9Hu"hZfK*IudM%!+iI#+jj(8RA8,]TS7h3hM=j&p]YmVTNoMl5\VMWPUgshMom"@@4*1X84bS%_3b!7D:V04.r*3:X2#Z%_I!:b6S!sOA>*qloZJXY%7H-\$8)\3N$+XDKP&+)aZ85E(=])c0JIRYZ0G8Vbmu;oS!tQ*71.8+[*0BQ'SK)mbP--T*0,Zd'"OWMHDN1=P[n,WZ;6Qad9ia+c%cUsm$,NDK*,3/li;?h3jFQNc&3"UXSN24E(Od2q5UY4D:W_#ZINKgaP_h>?Ro12p-.tYPp<cU.1,SIp=a&mr[PdnF]a^mTm2/!0I%2ImjJm9le"r%LCWDq4$dr)^\Rn0i957L<eE#%,RF,Up/`?g,`)JhG5[+&un3pu"7O1(a&B(7l1=;'K1/#VHaa_)lQlk"esf8-'_F%PmT?`N1g<k$WS%^:8P)6]_Qkk+>YB(imT6;2a\pNV&@76k4t&6&Z0LiF-emh&;s'n@[`IA:hAVG!kV?!0t0j(JYN3'([*6fqnj'P%eshN=<[5.Q6P`C0g'I'OWNEH52=diWk/G<.3JKe!ob&W!eS>("$2L7L:d;6ldRMT38'3@?qH!);)HFR+Kau8"$NX$<QFr7PPtBXu%E`ErUF@<:9RU'SPD-P'i@5&oO/^#*Tb/0^I&_AH104=qss-uV'06"[HRK5K/81T>ALkdlCkk%cH?qqC\9T>tfoe\2I/^R?I%'gF.%4ps4hPMU6g7VRFSWVW.cM:4_Dp<%B.cBeW/@MQZ]^c*/^XM%;&I&TIX!Z5o/&5TM6k[M18;'lb__ac*]W"A-jYHb3C0_>`5VHg'L%;(8hRkNEf`[??9"33B+!K7Q%!?d`=B-.'gM4.,8Q<l1DZ5L?(q,R_R8bIE4L.juQ4Y/n57YB4kY3(`%H-E/tYE[-&k<ZJ.EX$+S;%-_)qh!4A1'&6(H]p-LO1,Zf*/&MR1/Rc%m*)8kSGM1d6GNjZIcH$8,pa\Rg1nQZ4^.Y;caJA6hH&(Is2/f\&O?c.1Wo$Sp8--H`8%0L7a!:nB_Fm2JRsTZmO/K&fbR$56?@R8.B$E@rW(fO].Fm@KV=,u;3Ede5IU5_l4*E-(jii1:S!$YBPoU9%Z*13P"TZZFKogKuiQ%1H=XS'+\.U=/<-!8G[qA"=T9J@nJu$66*gYB/W\OP=3DO.M;reEl,9%`Kb3)WE"mMZ2%g-`N"<9R_j=61#YdQdZ?MD//VBB5cIP;%6bCbB8&>+@`?CLLTR^2m\j$GMaQTjQ5f"p>cPe;DSM7oHI1gMq/:5:b8hos>i#,ZVRg%>FOBieYlPLO.0U7hS%t&4>)AB"c>an:_%,-W<6lkK&FAfOcgRcSR&:p(V=pCUXM]@86OO3p!4]'?60#NZs@S7G*<Z]NAR.rgH$gqsO4_B\64P7SHOM,q5cphReJ1/D1+eS:h8%WTaigT:&ID)\oo\KeATpX<Z87<0tHi8.!Co$3Fa)lpaemY]Q?%CaQ>h8c'ViNng&QOk_XK>0<mnoRaS<oI\$eQ\C4-[SES$&dasg%M4bh-=g=\<'=M(#52)m.r`=;6as-]h$qX$\)[S:uWo)9;03'BYUX3XD/I^b1d0lq.XFA)+/'/i[JE!iM)d'A)5QO/W8<7GkkVPjT%3Y<7j7d(9YlpaPX-qV+.ZEA3QmP7A7%8)Pu!FocYTG?^E#C$E++O>9]NJ3QB7BrI6i`L.J$`+`*02lJH&^C[]!ASPF>XfoDe/Jam%+^CY!B$_2VL\rD+!<^^[:^W>!.nN#N!Q;m2,9H,"(*Lh:X.3W#gdr@",ca-PK:\HF7MD4q9roP_H^c<[N]qb?D'lffjJJ6^PL>&h%![n&GV6P_B]2%S"Gb_V_U"5N,1BN!H6j496YsK(#!A^$dK8+Ec<g&iHOr^:<1>A+6^Q'nOJ)Q-\8i7d[.1.XlYQ6r@JF?TC[#bkk%7!e2PBRR-$,3+WC9Ws[dc54W'OYn#0!p:?7<iqU[KFOgl@h]Q@A\$:lO>9V]G_AaMqBkq3=KJ'iWWlniNF8h*D?4G,[K:Y/fh&lV%_Q!^u&:toSS6m1sU7Hom\AjqM1,9l*R&@;.$&;6gcR.U@n-iQcW5)@Dr?1*kK0f/PS^"N!Tmf$Or?W-jXM,1g!M<!,>2#''[h9#p%g7q1g<Z'o&)1S^9ie)!ia<2WAUS;q&kYTFRK'9aB'HmO#_CnK8:.E;an%n^%MWeN+%Ud@l'&';,N`/MK*iQd%,`PbD*2lIU6gbhD%1PuM\PO`5tF<TkF+G,^Lh-hd)=AEoa@A'Zb5ndh5Icc%gjbC(k1Z;HGCQ`WAS>_<9Fe<YVKM]d\g'S]k'N3X-`t`a2=@4Z2`=8in%&NEEMn'F%%"s__A#*ZheB[/A-?%b8,fa4l,3i(^KOfEQ)3V+-Q-<U\!)6U,d1<l*GU.-#p"@NB<+>Ki/]N$mDUUmgu6%HoWDQD+u%P0%Ga#1?p=e"1&a1`RH+e7j6T$/e0s@DXKN!pS0bnPTr8I]adn_d^@gU5t&oSW5O3.A<`,Y*4Mp!X[FWL6RtG`X>!Fd;`:UC:Y3R%W[-W9JKG"g!D!\/=]QeSoZO\C;78J8Z`+^2]:c7M%blVuiN2iU3%K^.f.#O=7'j2N.Sm02UA(.2SmHdoE0+:tTFl*$Ubg;7+\kn"%QPm+0Wa[Kb+dl8$Eu&1RG]a>:89"RTF*q+kT!UhG`7e\/5[e4s<^Lmo!CA%`..]$3<.fqK(kiN5F^k?WC;/_2E&geNi1R4@,c_>i%""JK&d[<J4,WJ4<im;EG]BB8HQt?158.X&g/Q8m@,o41W5h,?L4I@7i?I>uZUJi%Q/8>GNg^X]K$c%U0^*%f:KA>^ATh050jD9/>%C7uT09o1<M4MIcUB#;t!<$.HI?[tTJWj4/EZm:i1W+i.LB3TSXdgEun!TlsL>MkhugIc:L`saO6Ql*p@`OUP=CD-;$81p84UDd:*%B[$rKV5tQo;7#t,^p>/J3'mm$b:NgC:(VcZKs3D,3JpE;0(g[s$oD-b"tQe&dm::f!:iG\&%$F?(?<VbMV&1u(tCW>I6so)/5<r/%:^Beq<Ips\U@kK]7i6AX.s_$]fEuS3g[SpLOi?M)C15'q3mW0]_-X?Ld0ep"J?rDW>\o,B0.?il*H50Op/B>N"KENGigJ!Z1h*X"%FI"rE9_?C!7h?.*aHDXW-"@gp*!7\1";M!&/t$pG"HLl$[LWf*9FbD([lCb%O>os+0nl8o4%i0uW00#L##6@@H/pCL=C`W/AdhQ@%<XKLr\5K.WgKu(R>=f7bSgKI">""BQWMu%K\QHa@n5O"F]F)kPr<G'6>=^#V,=Dm_4lSXn%Z%>)Zs)aO^l":+od-P%5N>p[V6:X-%5Gh@7Y!Q`?jPnY)8T^'&:(e1SN*uVrO-PQGUk//93@5s(8hkk3c31+J+R][-C/D:Y"B)1fUf?VS2(V^;4$d.2AC!ZiZgoiEJmX[S%'h+@4'B8i<lkn/nKqP,@3f`]%`jq(RJ'^H`&\6:=ls3h2[>EII>,?DBPpTWo\'RbC_/l#H,KWQ?.9XQX<\c#d/$GOfTmU9"\eY.q%^pAi#GcQuCXd$S;X4`snPQg[gWeubDF=]tJY*g>=:Wao_72lL]$&1>JD(k_k+(SO/?Cf7BkX-T<O;R/&g;7Ya[*VP7)q/<EGE-0!%-t4_cBQbGbEO+0i0Tuqu^$9i/X15a&(!+&j[4%28b6VdDjEe%@<q^uo5LrGiJ0\l%km:=oA0n.o"/>Lc\uu4HC5FT>D_GLc^q\%'%X%$9k2q"'%2698Oed+2QH(F2.#$*q3m4;([*M]'0,OS44d65Z"A&Td/eJ]d2@3b:t%'?Y^L1mCkK@:.%PR/ICFMe;V8U+(dfLSnM%9'YbPhB2ZeNj.:ohW2L<6fYMapZW&rJY\V$5`96/$-#I`3gpC\bOi6ci/09K!mh!bhTH^c0oISnllk]D+?s"3'C/bFeRp:/TEl_k%jBIanic6^k&1)"9Wf2hVU1$>.P25(jUQ8N;<hrLB,]f-5-1P4ON!17kXEL+^2!!%LQOH[-\e1';7/nmq@@U^JNDc'mpqeOG(A"[\%oTZ/jIo)*g(N[ekZN:ZTS0].&^>knTOHX@maf6-c@:gm4V*`AI[)b_f0hi"c&PLc78FEWjqBiq>/nK,t86o]kPpN;(1>*8R9pj))%^r*fS./JgeY9dVOUbE=Xjf'TLLZTXd'^9Seg(a)TU[EllUksjH+\]"mEO2O$_8FQ.+%d_KQ,#!Ps#n2jS.Y`pR`Rl.<R#E##;CYb%HeCGFJj:00??+!c0>^%IaI%;2I:Jqi0]qI#+-K2KN-6*e,m"L7P(+u_H62!&KN=HONV*p79ib87iEJ*(PpB8>$t?bh#t%FA6;3dP%DA&n,X:=r%-!X*bKiD'IOt\uJ5at4U=""I?XCsJ*R/+Gf*7Mm0nDOdS0tbi4(Z]3J79a8/AP4Q5!/=/ejD\'j.]o&Y*a0g8)9(t`%aXFSE';hm@r@uR.Xi$K@g$m(?^X[Js60.a$EDd5G5;m-B6q'+AI5"nM9/t\K)b[l^aG:,GB2m<N"$JhY7%hjk3MiuQ3,57BZ:Hm+%mN@=+*1UV%YagE?=&=$A99q*I)msc<Bg/n?d9D@NX$Idt/B5Jn-6nBO`8I(#`8^<2hWJ!Y*kVAs%&#c5PTfHad4f)_@n^(JMM5aQ%*k#I&dP:mkff8+F6PQ6Y]RaX?PO^/FN+E3=-fc9e&=+K-N,YMVYRG4o<&Z:6)3ddp1`7<>):$O_KV!oL1W.n*fubKZYdSI<0E=ZF%*ESXT$A]^#Q*HR9,`.edXQ_afRP?gj3;$P&9no.:W-$g*Q?nl8;j2A&W6Ad7C:#UKn,s$OdUP3]-GrnXd_#(5+mOn<mtd9g3cJh\%<\gU=<F=Yj^mSk-+ZLSjK:1f9X&1n!MUb#Mb(u33C<]Gm84LO!(_i6sN5ce:T8.f)O>sUB.NMZ&7V_;CaA?YH:9+C5R8bVjNf/jl%`h9rD<+L(VGVc3@U]3rcGo.qS;?\b:.hNXrpAC;4X:-94)''<WJMKkWooP!R+O3;s_b*=/TYh[g]*].<6(+eJm?i\\4+VtMGfV$#%80'gg+j3oL4usH7'&EH;PE;K4JRgJ;$F5W`6^1bc+=$jr$kFX,K11F(Y7^dO/-+tuQ$s/(8chjjAKN/_P<QInWF@k'CnXHb"u88"%@QX!4lsUOA%B7BOPenSc=..*fkpW82b[Uj>4d0?q4D#-3[Wt,$<X`S?CkpMMG[*Z9J#+4H1uP%oW5f)o"6qUT[Ag&FA'`5>>WKc^%aca\,iZ9n+J-=#EIiYf]YokRm=PklE+-T_lILH)k*sM8=UE;9WN2?&+TH?Orn@D["0`s;[=l8h3Tg]S"LAYQC4:i<Wa$41K'%N'<%a3Z<n<;FQClL2h$>RAK1:kXTY!L`J8F4Lqb!Q^$2Nu\6=&:0F#1ZBJYTTCP;<okD*%$<4W<WY$DW[#rd%1(#T@O0H:b!3lM:7Tan%iBCisO6FUa!CT2tNdo7QI)n<4jrZC\8N"'A+#?<]&#n_61GD'VH)1cD@tkD?VPbLl!W_2*qD#@]<-q"tL3d9;L0+4+U.(1kDEpEu%8-&s0;X)5X'h2B38jC<>#S8DCkf47B6u$>S5%[@D9"m[S+%$<t5itH50`[$O"=X9edEGLE4oZ@=aRG$2r\6d[DP.A=r\9$r"0%WA%r*tI!QT"R8@tsc[Y3l&*d,O)QIE[kR-\n:AN58`aa5g_YR1Xo?g5<*oe''oE1#hDZASF\!7U-'O#UoKc@JLb1W8qI:U99]?I8!f`%gTut6O/hPVo#b'uCMH.iXjGjgIB;mdjVj>d*&JXWK@.(.S.J\!/-I&XO)\i)7pX6W%)WHP]TddP'>iJ!+nliIPMfOnpD=6!UkW$_%a"24sT\Ksda,l92:?BV]"u$;hh,Nes9<V1a,OR9o%[f60SpLkgIL^>IQ$Z1I#hp*^0gZEYPF6HP!=_`XKU$o.3+%6!#NTC73Ml\S%jC;j8Gj7mbAl.PS#-&jB(bhNa]tTYj&JU.r9LJA*TEGP1F!Vol(0jq_a8.lQjC:G%&D"?`4pL($#s;5Y1!!;0DB4n$61bMVF!Vo\%FL+_VLH=u\*)-dUXQ3lGJ<Qu"ai=g@,XWW:Nu9u&RbX*fiLhlA"ZfQP0f1X0gQ@Qe11>i5nhHY$9&VO]n)FglHqun;#lSR,:H`<W%A)QpF&B9eu-^pWQN7/U9=`PmON/:XmU`P/-B>Jsc4baVPQM6JebTL2^hRuNE#!I^OXr[2&JK!qJcAm3%CYEML*^b@fGW>u@@ka==%G#W1rTZLgUZP+Q7[@3mO,TRPuU"".DJ^&ar5Y=$@r@B9WAfTh<F0R)4_]eJC:H'%VjU<*4N?OjORC8As$q6U1l`"-!d/-qE4/<c^%I"IX,Q"eH!?LhJo9OhaIP'P))L)*/Ak/oMmR_"3-9OhaY1l!R0R"<Ri337gJ$k5N24_,JK6nl8UM8l2[OCk3WN)</D?B^C_$o!,%%0iagM:a=YYBC(N+IB1]RK5/20UbEa-6o,%TQFX[LW>JT'TrRKaOt_RuRCf\-"Q<Sl^8-=/=lfXIqpLi]%$+2$[@j`.U^P8Yl<9RO%#5LHoPJCFPn9d.(^'@`Rn30?^dgEl98!)9j*Q8kHfaIt(8hjr"-D?,:<*taN`u9p\`>AW,"pAG%nXO!5L,":l69^>F`h4`g4F/Kp%(i#at;l;C060AZ:eOBXq0k1.q2F@ejd%I$J"+i8V.[aR40ub,;dh@\.8jb]b(diL=0[rsY0j1[eI%t8jM05R\MD<QpIoM:[J`p*O%14`V^D/J=UJV'+MQF0bJ0uN/e?r%Z[%-(o59JC&qg@;Eq(o)E$KRk;_(p9V`h%>T3itn#J8hak5>jp[>?jmA\mC\HebRjWf\M:pf%@?a"Mr*n.dTV6N+@K9Lf_@ecb(F*7eU"`lK`=.\&A)$U5)5Nm8kK!L0BGHQTatJJbo##YK@VB3FGf26>"X3Sp$'5(]4Md:ibRe).%k>=]5?YSH#WVg4[OXXe\r*iL;,U]\aMkS)qVj-b1&^$?Xi/h<iJ6ja+1eN]2a`2nQd>Pht_-hLX01JNhJte93%/KutAOcT,L.K:#%lM8C-C>k.=@M04e/RH>j>t1i.PRFOe(IO+RY#K^%6_mOZOUUHmpe$^I<-g:!0#T'9oO<Q:V.Rq(L9HgMONK1&@&EFQ%GA_I.`ugD%(F,"WQ<M<]`g0)RJW=$[F<o(q>mpot?!A>](l`^$5m)9b.'_d4XmBLVSJZmZjC3k&g*r!&`R*mEkdeZk,stR+/S9g]BueG,L=jJ=%m?tr?GE\NG1Q132L!4qc/B1^_ho[Li((s/>Ahg`EWc,g,#(8Hehki/e)*F:cLI5Z.ZjJEbV%tkIcLo[cM]$KG<\(=.M]'M;1r#!7%2)#YIan&DF0j`mAR)KIHp(EcB1jp%`GGH0ZAheCY"mI7D0du\2'N1@<N)stMN`jR;^9N:f<+[je,=7An\](e(Kn43a/V[<"VlT/n%f_XU"W9dt))T$)GA/@V6E.h;90slbu=P:Y!b0'e*OBr>YQK/FM(W/`HMq("e(S`kJWDtC\R#r4Zm-2LY.*ZcMd#6lC-0))TMbt+-%,uf1FK9-NO`rWjj)V`o.Mhqhfo\<mis,B(K4)QdSD5&@*[hp:<R8#d((;l!J1n'G/N.*>K3`^,Q_dq>3a4t,(;E%9;Y2!J'=<Y3o%Ef6>b\]QD4)"*V.Zq;qTLDm^+8*".CZ'(1t],8]U`A(Eh`<7UGL,$H1aU4TknVaZR*d1T)0*X#F2o1LK`Lq%/KsTeUKBGrGUFO"q%=TjPd2WPZaOTACW._cg,+<,RH01M!B(&,j(7Zr=q<FDo\i]F,/%/Il85m_UZjVNQ9KhOZN^DKV`8_#ra(INI.%HNOV$ne7k^cGTn%`@S&P271m'MnpW+kA[766U<Oh#WdDhdK:akg^X(ucmnJC8hai_bGDb0a<)cV8kNMc0Lh>YdtgtT0uJf&7mkZ6%?]J>M@Bm3`%=FM%4!b^g2EsY$OC4$oW"LIZJhak#kae[U@g&;sRO2/l)W:)uk=d0=6OPVN3eB)ckGC%Q5VQeQ#Cp_oJh_ic0S<q-0ZLDHUG\(+=CBM.%f1Ia:3G6)*OC4$#%C&Vj_&1A"\QX^j@jllu!57h,`X#ET[$4D6T+Q`!WS*A@MuYfFBmYFd_FBY.YnE!--qBjm+;c?;5)C4/_\h]8%aC8F(`mBVl,]X!E0pZU_[V$GpneOd2+i>.2-9*ZD@8'jflP[]eVmHjL`X!>)k`j4D7RSc#;]7?KTf&$i9F8_#F"P=fQ!fPN04K/8%#f\P++qcEBR*\7^[O2p02:uC`IPIX;8+Q"HIPJR"QRTTb1<*lA%-b`5:.:GFdYe]KRJK21(F(^Ia+$W67Z^EGD3\Lfrn<Cl\!AIP%m>=h4#f^O&<Z3a=05X:]WF6gbQroBM%T.s8dZI'(M)(#%Jt=F16\[>T7T<PtJJ]RRWV8QrQr"[.DTjg>!"P<VF<"f-MNe;rA#kpn%X^6nrWW47j'MZUkb8>5gpoTfm9L]YA<a!EbqOE_qG5I-/0eqa\A;mTG<'`"U(s-8USK+kmOeY24b`l[tN%)<'Gr3[N,$SNt1.L<5%<?E-#P[UNVH<6E;X'^.E,Pd:#`kL@+lcrj$qn)aiYG[/%-[l<uropJidr3B!>a4]%nNr]=QG8Yj%0!L&eN<[Tb?stg0AjOHchZe*%j_kP*Z"TVfGFHK`jo9f)D<Gr[/3\Ei_k\OVkD.s<O8iG`n_^2-[tS1:\bOMNC)2T7r7dbY$/'P0JaJZh#>QodKt]k]Ic0S+Z+8Z\%CA=<#4/_9PqXEk^.NjU3eABOt>:>Ej/jY4Uau()&l,#C,5V\q8?(>mUVJ'64nCdJ?OM347fs#+m=0?J\ah<#62XC&7+-P&9SW"Xh%S$+prW?A=Ro).3hjnW$mmoH#eRrSE$1?W52N+RIc6830jK"6"I&DXN1.:j86WB!'Y2\XRjkQ68HE^O'ErRLR:I=ML\JYbNr%XUrl%5..H),gpBe<;L4k\jr/,-]d@SrV'h3.(pUM@i29PH4%gtZZu.E?a%_%4UU!V`9<]<-`jP&4op``iLEai0Z9'%`?+ZrrJ7WKK0\ef%8j@'soE.!J41lKXG*;H')W=%6]'QA8glJW6k'f^t^K^)\2G68dW!RmY$kdbtBl$Xtj2R(RIe:l8rCFV\)D:6f\N]0+9!],=4rRF0%Q$sR1dGR*^mH)J\9Buh!k3l)ApJ7*1$asMK0AL52h^I#LF1YP0U5jPU?<[(Toj>BD^Y5DkrGq(NY.HV%cOOeP^@L"<lYerCH+WYi%PR.",%#S$Ed_tM5<^.Y(36"RK/e,?689X"X<SC\ZF8(HcKKpp@'5G_SWL<suqG_=GqG]^6UsW,K"df4<4&r'>f"qB6pc96dmpJK1%@#F4Y%l,m7CjFiUG,1rE8KFMSmIkj?f<TEG+q#uHC&Prk\@J5V\o5j_WI;tT;mW":X&&,Oor7m(I6[MY9cO,XqO_K_:TsfsMn^8Q%QcJH?df$N9[%I9cjf>T1%[ZtR8D1]H&"bI<qWGujC&-59d]N,9T._j`n"IZ8IJJ8?jbe]"8&pDJ9.JP:n]BZa0D`HB^Fjtb\&@/f%.]_J\"5S?Lc*.#bQZCJl7u%n!Dn$.K%i:LtlXg+mf\^ZAo7&D(0)!RC:Cg+mp<NZJp4M4@)SSF!\p2!hZUP`qqSu<tSt!H<n.#EQ%bb"jK^?<6q6-hdmqbNh)^O*TmP?Ibd7u-Cp!S9I12b_rXDjNu/]Y.GI"nfHVS^?%aO_bi#k<H-jJFhn"bMrm2:p56<BuF(X*\U;"%Q>=6(mTK91ouW9m*Hl;o:G5MX5.K8FFZD`5&$LER:H:RbI;s@KE79BjJ'iULp>+-dPYW3'r:mRD[g?ibkNDg<bJ0T$s6$[=`sIoU%jmjk+j+a_+>IqQBW*b"_D@?,c^1H(Y;0j7RhR'D>V[kD+oEFpam.1'^q8N1/]=198'0]sLG<E]Sgt8mGmq;*TkPH'.kNfmU^[fM?%_TT9LGA$B*/uEH=LZe_<l*^!ZjR_K&`M^&Y1`K,p_)1TUVAi3X2OJ*/kt)>]2s:(W1-#9um-+D6RnW/BdVL[%WQDO(4#C/8)^`:2%MeTVem^<pDMs1a&<dsotVAFE&c&,)@hd"'.Du&_iq"<D?_mA7/3Z^(g(Hc@%iof@FS)i3;R2>1So(NrUT.b[WdbNFH3pcA$-W3!=%]AKC+nO,n?(]0Qfh]M6XmbPP(2GnHWHh6Cuo&>s15HF0k38p)aI#;ES6J!S)P(uhQ8kp#$)o$g9k!%FlNI-UO(o^mJB?+ZJs7Y4%%S#qA&naQGG"J:lap?506rO_1-f9\G@_A5_;HeoEsh#$c\q"L-<DtX^-Y7L=S/Z7"HO0AJas.$C_/s#bQ?_3h&^XtcAYd1FgnH:"f%akudCJ%e!+?/F\TqE),Wb:gkIe#XXWs'7i!s8*M-EgY;N9ssT;UnODqks(:GnBKY6l,B\pB(3\tgm5-d"2<4DI>]qFB6/CVbq@gS%TDm@9fN:;tcg8p6PYJhtH2<;#5PVbNnRJB\]7/5\%D-L9Zg0Pq%#/'^:XJdpUPj'aO)EH)\*+Zr/jD;g#^@\)h>Qr?Mmk(WM[A;1%@0a[3$.T>Tl5t3(ca)rC/FVLDhfr5cQcnu-Q5I4c;F;e'.aMl%+0G]e508S;DR9<;,gSLRs$^$S5F^q*S!'VQ\[aIKcd%RFcBl`S%>p"ij'4j(%d4r9!Me16/&!&=j#_IBYj4asrDgY=L4DsF*HC2(28,e=^UZ;:Z!VNSc5CRm$rpK1,n_#S]c]HE!r1A[.H3U3?'?V7P%<?TOqBGNsbGknQ;fkpX&I^..#L0L0r5G^,O_nB)TQQGto"Kc+]pZqFM-=3<A\2DgT',K0]$DIhnFAk&jk?5d;IPK)IglJs0DG"Kn%U-iGh-bQ(=[J`MXg/A.@k%7jl=@2WLn,Rn:G(%a#jkKa_e)g,cjmhnLP-'-)NlM[2XH*VBq6R6\nRSQ9k=>!u*Ub($:R7mp?gb\`%VP@V6/\U[E`Q<RSeGA+l7U$YQUAeeFje$/WcaDZPIne9-lZJ7AT=5ZqCs';ukt[>,W3lKn[S=)jP%q]#^%%8#64)O-!?Y"&P0Mh(%'84^qDWFOF7E7orbPh+UT>bD'q!r5fEo5fta7mU0FN=pN!#%UKjJ'\UjrOK1s82XG.'i,Is*U83P7+"uV00B+YIb=V_TQ/XJ:gW8%?Mal^l:Is^DiTj=-fkm\5J]9P3(4$-;r@Heqn7/n`g:W%)>`Lnlt!u_n>]"IrqV_Ciqce<4?U27qK9r6FB:Z?eZrM1r=&\&$3"8A%C]bnC(M=D?`j7$kkP%c5:8S<I#Kjp@;RiZXkE#n1[l4b*_YA&Pjfn\)J?;Is31//;Y!%!#``Y;&Z=dtD+==1kNKln1V!+Z[\t3OU%`(U0>=i\N<8;(*Kj_]5d`"WNi\VUk2QI("C4@%fe7#3i8i_fHmS-X,C$+@gAm"]5=#Vfc4D=6(4-UKq\Um_r?Y-Ikq1_F36P\fbW%Ib[>INK->A:EIQ@'t<G6[Z(8n;c94LEPMNnIg4+X1Lf(lGAf6Gg1Pp8l#WR9r,ePPU$Xj[-Fcr4*PUU&^rZN>_),a)Fh<0]InBaL%ri9Z42%-?c5WtroqWiE@QkcQ&5!>lm>%/5lib90(f8HP0I@A.(/=pJDZuP)>)!:VX5%DXf,GcHM3ds-l=S!#jZ:!'4Eegarl?S0_%=a.rnAkWNU,-4QIP<OFW,qj(Rl/Ur`rr&a5NrHROroSJ*pRgl[=DiHgg&#snX'#8`>6.`4-<*U`=;<Vm`>u_UI!KaU,=K>5?ra9A%aBK$OnZ7fnbeeaBRtV11^RI[f^JE%fbQ%ULr*cl/RFp7)A8u^;\9r@>H8CcL:e\W.mU(?*jgZ15](,P2S"dCi4G@'`j"n%ag5Oh*%8_M`9m>%AZgC?l*;mu?bAW!(rV7uKSqlZWUNNLNt[]qbKe8o-?[PZ9N06HIu=,Z^3Ro20LK9'dh?Ys*+op`[5fQFNg?,%i>1[M]&%K!#V[JnKTYFuSMl@h4/QS^/7%+RG^B?+`='?;*>C5O;e14Q/>07K(,AqjFlUDYLb7[uIjTk,PIB@Q?q0+$3qWT:gMb,<DG1\GdJQ%S0O=1n25:*EfO6cio,c^V/8DeG0nN3auN'S7k(piG;Vl>Dpt48g6&o(IY053;B?mmH#ktH?[h$Zp3P>SId5+_e"W;':AC,*2a$q,%rOtBX55T3aQQ71Ho(JgUrP\d;$J0d[lLg5;>uOh\`epqdNZq7.6G8rp'L','nb)VK8,D?CRpr6gr0m0+ZTIF<C"u99=l\jDRb^Qe%Dt=:5rTmJ:"J:k@DkI#L^0I7Y>',M\VamY?8&(RBqWlP^nab\goB"r/BBT/i2[91lB@A)S_<c!l'MTpWGJ5\jbE$@4R_bh]YK,_s%T<eL37jjW>2_eMG-!@qNah/Uc+41dOKd5f\&gTXWj7/BUK3P^ahnNA:'[>h==_*2PZg7EI-FV^4IqW']d;oZGIueKHl!D'(GAQ>&%BeTM_cZd>.]?>EkGKddZZe9OWq^uL<`AM!Xq^uL<`EI$oSdP!nW$?pIN7iD0q^uL<`U+jeHR##dlXb7Qgt7D6C1GK%Qam7jOlp7b%SM"tTrmPfR$,tkm>*;+Di,pZoIfLe^ig]nA)r575F;.DDV;'d8i0hCM5IXPg$/>>Q;2W,6#K!@0AM_!C;k@RH!*\N&#/S;#BToi^%q(18?U&(ZHbI/iB4B8CuHth4A.C8a(1Si5.6-=TKpRbd,h*4%!m8$=mnN=s_f>Hcf<E\ou)#X"Fj6Y$[pWEqdqL!QJD(7GmS#dui%41n.p&$rS@\X?`1:R0":[QUP^M72s+g^elEh>7<Jrl3:A?'OhQR>6Q<N,QNHb]_@Qfg3V:Ip'AhIlf]]P"qd=4o/=RXDPKa-ENi4%#n"sVkVn_%5!d)3$3d?:U$iZ7oW`VLS$9N^/gk5&Fk=m0J4EDmS36llX8gD8J;r5/H$_[T'=pAS!bP6Dlj9%B!RG3^Al$4^GljSF%'b+sH@Xh#4bB&Vt*iq;/2dX%AF2!-CZ%)]%g!PJcBXqp7\(#&/*WX4EjiQ-9CO_mQ?TYpodD'80b1]t\aME::+[%jl_X!,TMh@Lh%Z9uY40)P)#Gfio&?2XKN]"@8?<.<\R^\lj^np`9YV[!kDU6Wp28S117m$&AKAVNsjs0$\Xcm_oSg"%@F9G-K,cHf64bRUh&Jee!l%TO/`Y9]XUQf6ZSGMmE_5^tCQphuW`[dudHJ`+/Aojn[5ha$o]<TA+2JE>#.9:7H!Ir0cLUB(+^O:5q8pBVR_`';fD0Z\Tt#Huj@b%q@iS#RgQg;^f<:,G<b7QU5Lddg[@ME=JtS(M$JHW[`$`Vd%@3\\(Lm[mVFU@1Q,t1&>!a9fk-[iVV,RMD5QK(1Tf7RAt*MCRHD/W%ql)KGXemJRRat9]Cc"<3I*>(/CA2A9Bf;EOHs<$n)bh8g1qbTtCGnoPqrSels)E4*priL4"JNB:<n!<#rLC!ek>ALu?Bs?HMY1[@%Y+*##SlqWC>]IMIgO*K]m^F$[n*IJdodu7q1Le.`#bX,s76M?FepmSmGlQ\DT.Zr(m+qZWdDbSS2T5dkro3ZD*92(mj!WAP@\DP%%\N9+6m^#mg6+4klYe7DXLHNU%qLcRI2V+AnSrdbAms07rk3eghZCC$@h%WF<Posu)`RFZ%I/VQ]B;_QJSY21MhXK_Np"S4M<HcF*%\,5/CGqf#rea"=UZR3!kDQ;X.B>\6>[YjG2f*D1O<:nSWO8^m"'78SCT"irC=AJd_n^ZCTnE%+8@MkC*I(8:oqGfOsbMTQ84>LM`%q5;cKSuG&^h<4T$++YB/T%#>L?'W0N`tP9=:B%E2rq"t!l1-Iae_dWS)U#4dbR2NL<*3JmcC?bXVq"n@8bVQ-\?@hj;4/H=:VXFf%:ta`Z0/4;k>dK!=iBM4kACu%r"C7WRl8OF@LL'XMd.PM&oc&Ap9QiL9mP43-)0h4%KR/)hnb-KR"\/I.%YW*]h@l4)5O<c`h=lK)%WFsn;'f2Ino3$64p;"\>B9O]R50>cRVZ&$)ZL.1Vc7E4i0b4d;bI1gN+0G]M2"bX($+<C2GWn)5c\Wb.@An'V[$<lR9f#3!Ar5M#%b,t,Na`H)Y8URgN*jm';@C'P7U='!GpTL`2m76_S'8/Zbma48k%P#96l[LIDq=:uE[u!3HH'MSs1Z3n@d9iJYIr$QQ^t6o:.e1In%,6tk`Y;pJOFMRKg2f2h,5$XVFK(#972!P;OV@AQ"9Xd8FekhtP[5MfY56KV^1P*GbX#/NlM;X@X!Ol%)`?bBNApOBbU[r-Vn9KhR%@sd4&G-Tn2J$K%FnabQbqLV0Q5Pep]mJ#t[HQqG<\'*6QDmr7em&!4XR+Kd+Y,*e[Be>`U/8alSg3]h6"e$,R\btlCs7H8Z$"2td%Z_l,oEQC<S^$2\&nJgdT\<As8HOj`W_2WNO%'%X6NuqbNDi[>,7le'K7f(]sjZUQ*n&.3VQd>YKR\0S*HIss5TIHPqVm"B@^F>3d%i5c:?hHTu"F?9?;c<'K,)>qtLhbS\b45Te3bjO/&Mc\(\(E`*&MpKQGrUARe-3)FF^>A*Q)h.Rqr:n%g+9,W8ITr1On`Aaps/T9B%ig+M,?DLug,$NUdL;aIJ3k+EaCMR-gnYuHdBS5'!Y/u<^A/5D3rQh"qcJ_,qA*"kYMu:@B^<Q5QmK0$Zb!Tp%^8:hq]?rj=lY?GO%06d,=hPjWuHZ.)dJ+W[gB'4.'bPD.r;:1^G[[aEPRbahqN@d'gXp`pK=-pbXohFIN*CT_l]jGrQh(?<Zr;!)di*1Dpk^@`acb&&2%\C`mrGuNS6[o__P?cnUt99[VJLC:p$r51AE`W]Zj,@;O?B\JDp['<3t8,7BObi4EVSUL]%9DJ.fM+Ll)3')4WlWj1rN82UIqP/ug%mhjntIFF0Zq<(DAIm0\-dAPC:nlq_;5Pj"*2bUWk5/5nK>FC&gqp06;@Z/?>Bu0DH4>/&1G/(YUAa,&XYq@fB\]jhVo&Z@a2`dF&%rF;7qdEV6o)^%@kD1Am8X7lANn,m!^.K5\&GJ<5iqr)KA/jB,Vn\]i]D8;J8SD+[;p:IS<:YX<c[_/%"RG6Qg6L;:RG-brmqcMEL%_mX0d>Wump<d-uL#Tcp_DeiSQB:2*(mO.fX2ldC8<rH6*`dD(fm<<D^AK%msXYdK7?!/(h2dn021@VF9\C160gi*X]QdS1788\=c%?lf*k,!G-*BklaLpg'blF^@N_;++Y047;\*[W_9bQi1E_emS6<NpXCl;VB\TkLQ_Pm';10.bjYcFM#@t%7IO<]e+.[@COL(O-LbT%FL*RR[l&'n_o[of@K>0@71k-n@8O,=[>]bFQsNjKel\CWHNtYjf"J&$NU<l'\Lk;E\=5kOnQ(oJhj7beG4Y3f=BW#_S0WRR-'qGr%J'T`9/>h(BAhKWHa`&0A7"sj)N,B<[>K30JM'n3>7+m-f@nlc\QfCe:4uK.["kjZ!liT\6iDT-QT_pq!Po9Mp)BWPT"BjpcR@;s?%86@mZck']$d-JlQ1]\Ph9S\IeD6A=b./P-!h$37a@iWHs&bi8u=EJ.6)N%6G3\K'##3t-d"Y3)?q3$uP@_J:KB%I`JlE75@1+KGC%R26q5p#R:#Cug]#+u6.aj2>qTm;C-Zg1*-ZG"Z`t=)@,c$0@Z"hC^Q??@-I$ii[&N7P:E>7GM:iIc+H)-GJ$nZAQgKL]N.p-p+hD%Z%)SKkd2-NAc48H26+_`6WtJF4M!X<>eGQus),A,TmljAjf5&0rH+U'[UV2ZMUYs8r_T20A6E:X8LN8+AGLGOA]L)o,1<mXqC;qW%:+0GC^UX]p0UDf\oa6NC1.qIM"M5$c4ksq`%3*K28?HcrEih-`P+dhBO`d2'nk[>nLY4;g]I/UE=T6F!.d'Q0Vd)#1QJSG`H;HNI%la^;-igcT;-8^0+)T+>lcE=P=\DF`"&pK7J>O3g*QI=7CTsp<SkZ9^$/[*6,pHhCtf9BiN[^5QoPeO@j25?fO9s^<K-=o3K[[`.b%X&pq#Lh0ni.2O;t\f8g>%rGOJ_.>#?Q;[Fo?F`#^Q+e6%54Dqhj`CcF)@?,l<qZ2Km;2orJd`;h1l/StocS#g%Bm?tU7]/_7C`2h%oW,`CoE.U5IE:n8YAQMBbC<]oj@r!e31ei9;:]d8RcC,uPX`$sr_6r2b6<@m2^9t-,Bit/He7'^FfU4J58`j)"k,sp9KBtYeAd'9%\@;4c_856T[q?L_Y(-kWgCN?AGt0gRA_"31ifu7+VFYJ"UY%Zii$h"%aRrMZZ@@"B=OGes3n#f2SRRHbS_g5Hr=RlDZI+^EF@k\k%Tig3u(I,tp)OT5nN`8B#(5*M.eXUUTnNO/SONUD&mu(=rZ?LJ8bQBGEF7df?nMeY_2p6g]1&V'trorD3pe\U%0l^&s<W:T<cJ9l*%0)(DQO1tOW:Nt^_?X,/.:YXLA7foqu^AEi[UVm,@r*<W:qm3\:%!9P]Mso.ons>uceP!V^rc7Z1igcdp?e>e$X*`JJ,!]L?*Z^-]%C@0Wr%KEC*irE%uf)&Ug6ZS14jNGa@7gHB4A9O<`mZM5A/tkbIl7Oemh'H[`?",_4>p=%6MT[8ebNT+6-MB0"-:saEcr4k+?MI`1%-=N@d,kipT]>+$=bN+DeMT[8h/e`;u/sGcp>pef^Q\h)a.kVM881kQ?fk"V?]1g'd\4epo7)%s!aK]emjPFIB^'i\%H`)*^>j!hu%q&5=9jHo:/H`8tu3d6FOh'Hjl-0@74M4*0GZb'b-]*,0]7Jr'W=/SPC+[_[KPHG'1'3"iRAV.3Yo\PYW?e3Zh*OU!UPjKL(3ZbS.%9=^"Tan.)r='J^Ti.Od1h(M_78kW2.)p6'][["tm)D28d":K0S0'cF-+%Yp&0+I#9<"#F0aR=#0BRTBH6jf\5cHB5s\p;GW@bJl]%42V<U]UNrGU>$sL;l*Paq+\0a)jdT0B'OQZh@Wn+b((hdNGqR<Z"@10k>mV7OJ;/L2H,Lk7'`P\[dl4?%/dV6>KY@YS"sQ6=/OEn%edWP?WT:1\NX[Wn#pKMebIAm_V6O,a=jI88SDK`?=U$(m8nZ;0O_34RgsSV5cljgCUD9W>Zo*r+V2]i3IT@?<`;!G*AKT+62Pn#F%GrXGFgM+&s2K9=o`a"N8m/SKQ[k`]Hr)^:K,$.F*`%nSeV(D6lc?:)`<`R\ulAR?E+1'Ue_p.]2mAac.N%\p#h0T^(VTeF-pE!u)%03m3%7:`>IcI_`E,uJi-p%4O*;V'Y5f+rpFN!nqHS+bXN$.$lK3(;9f6KJ`'fYgupNgsS1b#-9Hns1'gZc[t[B<cpj4uQZpk$^XO%=3-M)cE&?o0iH;`9G=8T"hgECrJ81(V,5-%OHqH0cpB(9aRF3OTeVgfk'CGJ,Us!X!d\\hiY[7(UF]dJhQh2`UH%NkG/8n#$r/BC%<`uQ0R%"Hq:+8[jk>K\][9'LC1H`b(&M[`V0`oNFWPg2o7(,o%6"FIC.Sg^36DL\Y)`FTBbu"sYgW7]ON(O\jUp;)3C^2/Y*'e)9%%:r"nN?g)A=q]gQ+tttlCs:``<E)YtX^5/U:6bkiUki=b09#0j7>g:P:mPHgVTN:7<?XEZL),S\X(IqlN0O;G)44lVpfuo_q)#!)%2odC;CaV]F9>t"-lKG70D+$t4,.+I?"j6!i<L(qt.*0b?/>'oH-MXk4.sbJ_NH03UDO]tb@QAdA(UN:Ip:S,lIa;eEYBX@iA$>3-%k]'mEPdaYBp>/jM8%btd8\D/a3%o4?[cZlLN75GAm5<bOa`$")qH!-p@KFj1Re(rR>Q#Z:[`3*rXg7_']rfRENjmP5p9pF3hH'Yq%hUYdLTD98CBBgJ/hK7UTXrVgPh(A%q(aSBaotA!1mVgpNpf@5q]bof%\@UAR]#Nda>j$*DArl9EEF%UEV*\or+h>Vcg+7[bs!";H%WbL7V^A!eJg,3QKi\-+!U4#p(#S6G.;q[X+9,T<"]IOLCms6j=nLK(@0BuFcp2DNGJ<[]Js%P3R>.Q^:1s<HL\d$<Nj,=s'?++^(%Dm'HtNGr5.h&q,e9Y4"3Y@`&U2Ut=X6oW!f%\^HJ,?Fh;m?<Goh(6Q)[84"TWb9rH-Kq&qSsED;-%\!)NPgbcRr)=!lBX!$Tb/$M%/-jqZF)tos?C$_TK-/7P#DM67COu5e:0?1u:-8ho=[9p<\oQi58VL_og>'QEWQBjs4R*jJA(]&Q[*/KIbGrkj/;Jn"8_oCqW^M?m%<<eB$Wl&i4ZhA9d<lX[%gVHAUQQ&$uG;sU]RQAfHMYs8s0T$NNCptZN!F15/@CAUS#\n0EXQ!;".%iM)Q$qu0d)X;(f1eq9;W'^e%M(uu<$TH:g2&J":+cD)M4lD.9l4m(RG.R\$U(`tBKu"b2IHo\cVfK)sOjL^\H4Qh+4_/(M'nES_HiL5U^qQY8Tgj3hnS+68>GfYu%5spCOe]!caB;IFYf1_EYiWh#48[<ojFq.OG"aC?:DLFJWHCni%Pd2dLWg$F&IG@rUJZ810^:BcN:!s9":@s6HTVbKViS_mZoS"dk%&5_nf34>CAK?(o0alR4Q5nad[Xu)/#ei,Ys:Pk;d!`RC(,5SZV=2q7t5-"1Q82+f`g"13=L3b\aSa8/oRn#88mo55F^8++H5%"[<%6l.o1:6c;tck5#5kl;[GW,uuQ-QS*?=1#(^Nj8.g8cGhQ_!LaMB!:Y^q]NG^0=S-?%XZatbN9VM3e*%od=c9t_""E0\7rrXi-OF@%+':-7]7T(a(#6QFSNjW5_!!j%c7A7:?=A>S=4f^4='3K(MJH=_a8Y$[E5BZR=.R:[FeqiBa3'Fi@(%hX08AoS_.<_@YoWUuqmR"T%a#.D\3K@mQa5;'jL"q1LaH,-4hE-qObfj.7d<h,,MFT\1Hun_jH0AK#/fQj=e%id^*+;(sccF;Bo$)(!a\g7[31\gids\9XDOBi2%7W$6W2rH[[2m'T`RskLhi:i*r]"`"!.kU1D'sFu%f6F.2!Rc=kL[2>p!nXlGCuG<@Tp,?<%U&=$)qTA8qn1kL>$lE!YJ0;':1JK8%C%A:Q3-DChTKZk3i,80dqs(0SSYQ&LYM>WB8o[ei:2s4ELIhhJrd$MG%>>8Ie?3Dr&!MTt]fml)G&HSr:X-(&hYadQ2o"?u$S/s#%E5bnL3a_P&1H8Y&X:>>NFe9U(8K98;lFaWM\/r5MqRS66d(,/'e^WOC*R:)lh"dt6\ZM6Fh+OrI#2eA#Q<NS1<LpS7<?88c<Q>hU%FajZ+r7(m$Ds4Rr1lGA[FhI"McAfLq='3=rX1?(XY_1lJQGeH]qc]Q`A+t+ZYBO?_f=8"cg2sFbds[dWqN?sJ\_`[CHM;P_?SWhs%2nH26F^On"lT;k$DqZ/LHQ=r$19MCD9_D`LQn]S^,[JPjB?F=Q*s@(8q025k%pjF+:1`I5@hsL7FLYca1^dLt:2C9tWo&][/rFMM%l8'q8!;0fC76+q;%\p24>G&0Ej"lQEADdg`#8DN`)2s>!C7RG40Ee7UrUE/55p+Bc4Kp_uhngmK\7Iclce,l")-=l==p=__\d1;u%l6<T)I_=rpe9k)!2Yn"HpRX*l7gS$Lbq6>U]8TnkToZ_S=^1(C_*Lt`?J#mMSXhm6PNV>d`S$d9\!V76k1m\"o!^NdD[)o)60Mnl%\f$0=#,1?&-Sl%a<DU^F69"*&h*[4[U^TKMUpWcnO<W^aD*nY8TT+It2Q#%gH5oaYD!U#,/^,eZS"ro\?mu>kg8^;M;@\+B=*eMm%@c9?%h,EB0CGZnYR3Xh]PoL&&+gkVmRje]$AX7;dX::(Vbpp9X_HlE5jb5%,V(>iOq]4UZ9N<O-e_d`nI]J;$EY;obbO1r>pl,3S%U#s)Ib]X(!!#,&o49X'Te**4j]=q:RHlDYD<Sp\r7Vh=8gGX/HPo5dfG'+F)Ej:!uB=SG[07#?*YS+Z0l'd%Plp[3S-)=,dBT*XX%)C4pY;B:`WGOm;82;Fea0Q4!;bB>V3HE0!tbG1ACU4p#:H;?Ph9W0Vn.79qU'K6iJ/#M`KNF_pZfkOt.;U'6onc1MT?"6%`Ok8j7%@-ukX9PN!sAb61@WA"e9XJMPK%rLu%(.Ha66*gi[*$kumC`cOLLQ,I-X:BDCbm>_`Y.<u"$*'gA6%'8YA$'1cVQ+%sg*Z9GTH65&%CE't%Dsb0j5B?6j<sRZV+!&rA(ALJQ10ibk;W^*!YmpU4Pe&UNDR@f+IP&Q/2!15[=4CS-cpFb!V4sXdc$=*_fH)n>=FsB\^-Qf?%!2[=B(4W)-RsG8qHpL^f]'i[6WO\MPnL..8/R`MtHa#OJRZuB.)5(U'/gRuaMCMEhV+g8J!tAL-T:9^g)5k>_+cAIM&BCD&BH.LP%h`Mae"u_74E`XfF@NhYcSFkX;F4,7poju0rH#A?eiT6?@=R1>mON&<V6*YmA8S'K;"BWd`2sMdB9YSM*:;+tBL>dM#?"$UOhaI-$%htE#B)kTul6mP6\;Mse&r.cC'b!6nc)Ap<TWd4(g2X:!r``??(+?#W;Xe?E4.\ri>PeNu*Pgp@RR_$shm)3A6@QWl>bj'C9\3%!i%2@*QF+!0+/\fe#o\&_eibQM-+rjtO&2N-/[F*2T>JHjL^.hjt>WDG;&d`D8&4Yp&J'Rabqdbf0PF9h2`plqcPGYqPSBBjD`X#csZ%4aY_g'PV=<MRt3&7+O3FQ"d=4[[oc=TqkF-=4+hGco$aX<>qj.ZdBUk-+/jR#W1\DLe.`cahH8=[RT4m`m_*)Yeebd.gdl&\iF%Y%cG]-N@Vc$A+aSQ@&NI4G)VqRED!PQ3kHZ%up,P';@s;$b+cVcsr$2>Ee$WEu],G6005k(&EZ/;U)AXqM6"&+&(ZP*;R_B'OTME?i%,IEnsT$]J5PFe5bkc%!n$b9+n?0sppX=t5h'^3B@%2.[Vpn;!Jkl#pFhpq^gK9*T)!!b87[IB;o]!(cEY3@Fi-+j&.PU+nWB[rlk%Q#s;c/oA:r.dGT@4ra0d-r<Q58*VPZ23tEcSC2h,lq_=@2TscUB8@UPkT\`;Y$8/7$XLdV;aima8@M%lcYtT'.=GcXR[(K'BY_'+%C+i\(:Ol"^--`hFfHe0t2Tt@q-H>R'%N:,?d5MSjY3_T8>MkDn<ed9TUau#=c:Qo5RE&oNSt"\2G^3jS3Zn0=b1s^PR-o5!pErPO%Ne<WFN7CpMX!c*&?6?G!d(J[/(9r4b7-i))i;Jd;l9A30mi`=@Y79sVQ7tI,G:S6Yl]\/(1"pgnL`ZB#BV2?Q5'Obl*]Lb(5lj.2%@,DsjRtH-1Yj^^^hb>!9:D<(^ZpF8Hc'6;=m=Thd7c*\f_7im$IBLnP^?Za4VS,i:I>^=Q&:I24["<>,eZ.Q\e[Fb^@#k-rjES)/%hRYlc(pKEV.WE$Ej(]KN`;c`9^k:Dlcu@J1RL^C6JG\VCfRIbuL.T4j4`0Z]V_L?e%tOl_OC-Qg>k"BjZ`PICRQ??!_X(?.lE.7u%&WdZ3pR8j4[`R$Kf_jRWbPh$b[rVW>@SYjP'6sDrT+cJ4"Pu.i\$tVb"Q%h/T5FGXVOnNHk60Y@A^9+j7AO*d6o,2`)+j`ujWp,l%Ts^%",)sl\D'TB2)nEakC)TiH9aijD[_njBWKAr=OSVKdNR^)>h/[1!Q*TK)?m?iLC)l(XY0_^;`X^W4.!*6Ij@[`U-BW&g'"#L1%-02J&QfEadjJ=2G'G7/E(QGU$/Z%,>A]uc^PJlZ>LH-hpSPbi>d[7<K,Y4K-Nl0E;>mILqb3@_L/!bNdHdr:/1)QVrrdSt&66#b^%N\F4kNER^d!&H=dFKGQDT+KsUIdZ'GkMgj%*Q#%&M<)FM4D[]l)/^>KYS0`CE"*HnZ>uAGON^*C8\<(6D/)Zs_-m.0aatsfWc-qm%>#Vk,Zu+>foZSp32JS*a&,2MHX%@0-#eo5..@$+E3^l%$8N:+8N6dYA'lf;:F>%2qR&!&J=.M(:b#+2CkY1^OG1]n1-ef?qb-_[l%N@I4o#h=0V`K1i1:#&38`f&-m,g@[Z:nHbSahh3bfqlf0=6JM7:EBW4']hN?DF',UA`]^]UZ=%^78:J$16S<[6=Tuila0MYVqDeG%UVWeJ#Bl!^=S*dT0j#RP<aK[Ta_e`86Wm`uWL:Z'C(df=p8Ek01,K<c<USJHb/l55>HZ6)V.)Mg-o'.^N$Mn!"DH`#]W%8Y:@'fd%SLfD,2#2"?`[7f=:2R)cd&hm,%'E<F#&9<*QV6!s4u-8'+^)H1N\(!6bYttcIone%)Zi+D4IJYoQ]$]eC5s.\J@9'=f2V^S\Cqu<%'80?::&iHFm2Z<G`&d+6>U)8gl:.m[%]",9=K3gXa9fE9;N&aqP<,SF.?E:hs&a)jOPDhQG''&L+m6#qNe8m*#Ue>2O4u4?Y6^kK%gqrrbRJX.>9.g#Odo,T+HJF*)bLL,bf,_?&:kVDM4`8H[Drkej_/DDcVbj)7!#2HR/[?%LlZ1nJEU/<n:X3A"P,A;;@a6j;Y,t6i%.9HNZG$Lu!Kh\MB1+(2^fM$s5Brn57#OZQ^7cbsBpR/)9_3NuUlfPL!Up-gthF3<l'A\m1o/-iCY&*$Bj<.=Me=)]7X0kgC6KjH"%r`\T+ioTaj_GCss;P/JKQV9P`I!=^4+b<SB_1p*#Q;fL4m``L1Y4fYRB+>1m;^EaVmG&Q/6e$NND6/#5p!Ds,D+o0;7,]\]K;9PL%7E<TS*]g9t9VTNtW=k+sWJ?LcWa@[k__]>6TjrdAX]CQuNd+P"82Ynhd(q/Dj3#tf@opQ7CLqaiXbT[9:[n$Ff0cHL+j"r7>L/hF%W0A88k=_R5MJ]h#l^;6N)3k$QngRE`2b,I.BsgGB_q%=p1T!%0OE:_>P2oFdGdg/l!TUdJa-Uj8Qn8QD;]BLYDqb<ie8'%8M1(i+%AFiE'4`d88)qV3OS7O!.;1mpPda".rH-(ub3M^:_Og3$X[:Qs+Vp&;Hq4QQ3;pKL>ejF48r<LmEg3-NAF%R!\*]@bTEV=9>p77=o%#9fo]flopZSWS>5AD\9XG=M:sOaUkQh\k*k7eV7jaM,+d]L:7La22:^Z)q[aYI_nH5Je<e!D'lQ\eqIQe0I"gDTQ3bf;!j#%tSP\%BG[EoE#ZS1<cV6EH,e^#cO_5Rqo_t#*46M?5^r@,Go\D8?N%^`[PU'g7[LgJBDD5lU)@6[:/7@D;kHR#lG1p<P>cg,J&TjNf#W@3%jO@qkNtPF0+(:<#/bnYupP5b/[<Jc6m8?AkW#T);:sIT+SPFY"eHFDAhC;!BY"&>H;Km%Kr!+RIp."s.6$6SRpBdiMflRajTK9=7%Y;>(>[GKL]W/_)IJ^!k5RjB)e<7-*DHuEpZhn/ec8QGW6QX2E(YCEO=n"&ud\&!<=dcAp7=s##f%]o@#h(!JdlEa&WSVf%8Ba`k;%0"pK6,"72NH;Cq&ANBUUe)jqi)_:*RELM#H(.pZ%<[Qq%m5k)@M1=M*Ib`!T<%e@.DGu,UC.n8$5KG,5#'Zc[1fnpVlKcGSl=FCj%HM_P2@^_>HoITTFFPG?3i@MV[UViBTP?Kb]Y@%qK\mkumRVGI;TZ)_)<W+Vh`s_rGD-&%5+g.*6&TZnmRr"3<bq:ZZJn5Bql=5R0%a/qr(h=U6IOt'rsK6reircTqo]lVQK5A0K`VPpm3dihYgcsJZZ[GK(BQNhBh>uChaCoP_u5Mrj$%Yfa7P>oeM0S+Mj29rh.>A^@c%)*T,]V,;cUrqT.U<VsLiYrhoLq=`gg]!Z,EY43M)lfk3\0gis%c;AAt/ZCIJnGL[T<gK+`Jp&X]/Zf)lp%.KM)huFpUSh)NF[(+a%1L0>FH?Z23$t$hr9C6Ie7AP;gId!4%q[E*YED^&+SnW34kCkFt6TOVS?@ctEaX)k@+3?$g'I]^9L24se;.O^lc^a^a]a<$0a9OWj%3'm/-!)Zb/H&/q%Fk1YD0U,M5XV9''f[@`Tn@l&1gRU*6Gfn\,Pc<F(lArM]diEnm8.&BN6XjjV\]&tip.jH0#*+W@0!q"7jOo`T%e^oe1<.Pk/TI4er$U8V.UE_,OL3M9*S;(*nHCtFl49&?B!%0[/mpL$ROZ4j#FbA4C@dk)fT,(RWSs$e7-c\uB2uRC2Sr<9Km@bAP%/bM-sfsjg3V5r*\]9C2DmZXHhmNh6H>9(;j5,ZPgcq3$(?>Xnd`,7j+WDZf3kY@CO979S8lje2Jn8.>f1RK^R;.B9qHD1gPl>u6s%D(";ui7W.>j?]EX(mAWi,7rPTSK0Yu%,]U]8\].<\e^b>DmO;)P4U@!,]SH>lITCPQEp:Pg;/.EYdPXt-("S/V-B1bO6NNPnC/cn%Y3'AX<]OCF)"E7#9'pAO*$a9Fr<rYeqs=d=Cfpi'!s`G`N\=1oMuRkjbD[GsLM,c=bju+dbh+'pG0#U_11Q*p4Z"s)L\t;m1Ga3q%*1j]blk$#A;&sMm]_+&K[=ualLr)@-[t'a?aR/sZ.J'XDMu&19Ql3p(GgjT(k`Y21Dpng!TY0+G=\ioO%pk<;psGl$6#71np^3NB%ALiQYo@@R@h=ur7+al2b.'acT::P!NZW0'a$W3p]-0&8W2euYE_9,fgO^r#?DoL=\qY**i">4JmH-q7V+:lQ8Kr7NP/O3?173g0X%=qOROo4"Y`Tu!t:2:Rr)eLd8l&[MN"ZJp'^=L`ONER:[NF36qI].2T6XIp:"/mUD<\*A'6QUIKn^\f5\l'N$W[@LJ/<"5a=":c>K%3T+eb(;*dH^pm&b5'Lq^F!88]o.*J3eH5n9:n_R(Q.@BQUGS$#Z)[fS1?-SMS>lG0eP]c)RhK06]GieiQVQEXV%d+)>"eWJ@O+*5%eN;dWLi#XbirobmS<_+D2'"29<`plsCS=F)orUQ;\D3s$gSe>a'hT$jLchtDT`aO(e?4g%lX&-Pk090$%+$WSM)N?TEg_LZUnc'A%=%9,;Hgc\^OfP$gCA5*UmS.pW$uRTVF.L[m-Q!4\30GmU-^nf[%<N-kQ(h9t$VAS=(?D4eE945@[&\,DNmH?ps!fBXj0M8_mjc!b%!fe`X_'(3*L*FL8S1KCk7:#-sb6MZ]=&mil;(\F*U9m7T!4?)D!"`fT3>itflV]D4=HYJLNt`lne8R_C!F?>3VtEW,[J8o^j02%k%k-b@;_Gg+hM[%P.kT>hJ;GNWLPW7[AKNd=:,>:Np3P;(.d-1o#=ZK:qI$*epUD6<d#^3%a1jWGK/;r6ZNX\`PKn]Z)#?=_;c)BhU%*FYUu$5aJSieE"8/l_`ok7t-B<3[".(ld:ih<J0rAAQA4K97<RJ;3AZ$_u?mS(Sh]%,BgFc@27riJZA.5't3Eakp9?\E)Y.]]"dR%-[[Z@JhK%%"!5sK1%Kqn5>n.^[Z(tO:@j(HpWJG:_cn4I(!HVS06k.\$SI?eeI1gCj*8DrA1tH\lim+ok66ps++6Mm55im.Wtk-$%o7D&NYZS]s;P@J[J:Zp20DOA\\i9/]oRctK7i63O(OV2Y]Xc;qhTT<qfaIca]\lg2egK:7c3nLmWH[8(\)K%`q0:cu0=X87O7)9G%s10:fh,^ZDi!7DV/OOfs(OY/V<`nPCI9%^T:qkE$'l_]#7mC,ILqO`L!?X9&H"0@AX6pVqk#-uUW@*4@13'g(-b,47m<JIq?:YQq%'ns_On;N">V?8!k(7\kT?D/R/_Ui:FmqML<j%_8m9>-te[c53+1J/B;BD$Euf/:kD$:>_h<R`&Wg6d2OYI9Yt/2e6$Q^$dp_$lS3%HtANhGVI`&"`ZErZ2]pRJ%f8pNLK3>G$PO<lYa5`!<uROGOfhL-9P@WR,L>YR*B*u_e^(j+/TdWdt&$n\dFCTRaGEG2\fl3hN`hl%#k\X4%6t*AKl[RJP`pEn[<9=g8dVLBe&SNqTrfNb,@4kaeJ]t/r1MHA#lA"Be-]!A+NcSBU?u\\:$A.&(!W>Q^mB@sl\41+f]T7.%B"#6Ma/+]b*EC^<OV:GmBcM51fNP(j1f\C0Hr<pK74Gr3>-f_sHX1Ul5C`Opm.?e=UXP.lFY@&l1ECST5O<dj%Y)UkQZ%m;bC>$?%o7*)CmsOc\iRuQ#`SUFPqmVJ:pJ:O5=e7:\5!N;DIsh.N(@oM4qo?`I78gjHHZYo^ITJ`'PD*5R]@^D:$[)6.X4J,<](=>EL9g5b%]465.=M3Z=apih^hS30>rHDn@#B-gDR?)Um[be.Xp@W.qa4o#/?X=d\*0g]7I/h=/Md74D1AIW,r/_eAp`"+=o,@n7bjB@!n.Tl\%s-<WMO1aV`dJ0A9]9P=ent4lfRg47Xi-V_pptDqXHr8)eIAiK=^FJ-UPqfcGhn+=6S_$@^IjlT8ou6C?bP+)jr4g^ehbO!BLt[p`%NqX(`_//koa0uj,00]33-q?]iII^O'aM0@nKqH"Wg\5VVa(5qCesC=LO%pL3J[BkW_HJVgfB[=#I=_.KHILaMqkJe[CX,Zc097`'%\GF[F`@'R0T3kk'[L$5EH/%^bb&,P`r6b!p?A>M(pQ(4$qF%3`>eAJtrTK](Yk[:kUPiX[eag8k?_>*I3'[9FB4,s4Q?bL&pi^q%%<lFSQr[=,toTW[1$dHs#-iX$S!WLgb$Eg=5%C@es<Nc]h?i,m+5.a"G"%C5)cLA=6f25)ZLunBQkK>fB:DZ*NNs8n,$2;OXA_hf>%rqLDiiV$KW)rj_KMnV=L,9<e6h,-UKnIakQOk/tkXe20`EkM>ErUV6ThYJT[hsm&ZQg^6<L[W"??eY$UBF;0/o:n'L>Uq=#pi]e(%TPTMScA$hKQ]I_f[B%o&XS_>V2qLQ\mMu``ej8!V\Ffa3j8Ils-SG:<_$.1_mZ<^Q^3<i=H2I<FFUdp@IL.pE+^\M?f0of=2:FeL%L-FMCIGH?]p&A?AQ-B<)D8>_,jWDHX#:_a6hd?hY4d'[8He82Uk%tjU;t%H"Y+*u=PC$ZOH1QK1!Cc8?'j2ncr;HEcP3VSjq<n6o%lfHpc.@l"$Fl7[RnL)@I-QgOMEJ+2`l,>a^-<H4%os1n_mk6"?nnj]VMlM`p5;t5ALQ%N`JV:J<K`32/)R4eL5,a.K%oJ!SoAQ=s%=mFnZ?iK`MjltBPLKs+hC;77GOL]rNb9ks?\LbLr^;H\W9D;at%h>kR2]0]?%o5([BqG8"SUC$K2'Y&/m_ct=^)u0IX6).mh_[Ng%[f$cd\b!pMs1(8%6m)1/hL!4QE;@]VcY$lTIIVUc]`jI)'22_QGLtn?f_'6f]?a1+I<?i`gaT59([F9jgZZBfn*[he5?r.kcF5%G%3hiLKr1gZMHUBDQ$FuG*hT`>'&'iq[0\X3hr1?70^u@I:3o,QiF7Ir`>jcO'e<t`LPJ&EUnI7XE0q-Ul26q!D!P+T'.09\]4L8m@%nh!>7%F<qiSR%Db9Cc8QA7CZL')+aiI`)G0JClWraDY>,9`MP;VC(0k-MeCf+=#$GB,BX$<#X*Na4^F$@@dj:r9Sn11JE7__g?=*%?O'WfciZ@W2f.b?QsGh5DeSGYbb_sP"6#^%-Tg-Unm0Y*rit*;^0E;)>!`VL3#B[]=[p\`aiH0hQiF!0N5Zi).e.Cs$(0GkDU'L0%=B0$/R5LbGk5VqooJC(9OU:HTPWRBOU%Gs!KLlXWCBA7>FsDpZ0bg\n^M+tK2NL6kbnT<rQ1(oj-=7QV1aYYOJ9<7W\nMHJ2@i)i%IEqJd75BkE(q>=a3N*ueH"mF$D%k?W6P+FY2@i,h,HVKG^g8QZ?kRHfaq-B6[=IA=lb+Te%+>*5^jW/\O#1Z5\O^EP9ES8%VX>SG%O&0P:j.^g\-$/Mr6FZJca`^@%INTMJmh9TV4QH/kj(6$7A&9=0^,I9M5Ku=fd+j?.`;8[^9C)T=n\oteN2tQ#-h!'Wj%?E1OhVm@%s)7@(F*iOlrOPc]ROmr&&M=lPI^A>&YG[/(c-P+\Tl9XcQPUH2pAUPRn'KsQrc;0pq-P68bCB<ES^mG)D[ro[bt%g(p?5s7J%J?R%Z4nn@BC<41"!+'!('cJfp5?W'\'%-eGS<g60u)J_JGRj^<2c/_\3)qZ`#5aJWGh2H2n\R:oB#OB0+0*cXf.C@']lq'\9d\ghtQHE%3BLE>7E<Wgp5(R'`N\1k@[g%),mGD0Qb#ra(Os!qbOY:7?`uCC[tXuboNYdCm^>%8s.?n^heO`6dY?Wun3+i#2E$J7cZ:eK&HZcb%]RolXJ6:#>N1datrqNYpM^K_?kX^N+\pE5)H"VS3V+U=>)AsF9'9UMj'dA32^A"<,E4]o6FIZt=QTa`kj?m5,`fl1dCs5+c4ti?[%V8-8.%+;f)CI>0uiftPV6Z!]4KI$DIG#52:X+giYj<7i&IV;*V?a2."!)R-WV)9j]b'`U/C5`7s;:1S_V5gqXD[k%FduYaaZ3Z=H%(`bl``ud+95kCePp+SO%s.fj!2*C13cg"pN%?ZXW<(M%.4@u>o;2j%k[QLtY0f"]0rh2":d.!!EOjC/W7@@>2ZH6\Q5:.FX_q^Ek%MHO7@S+jB?U3Cl*8<Tr%[2m0'i6F0TH0LGBUu)_8'&qe/'3u0,.BRVGa@[,iMacs,I$k;Z.87"b^k/]6C^;rDX!Gh_V?Y!RB1/`=%Mk,\_N%CPWk]u^_PPL!]j\le^MH4CHjWp9q[P4ZkT/AM?&[[iBic-t0IE5&g@[]t]egVXT/\C2m*>9,BLU*#:+t)&2<'O5P]f@@(%IH^8gLk2l60^ZFaM/rC<k7+NT-fcf&=BA3ml`-Y1L;V';P^*mG1FB4BbYbBXQO.;Z'lZ?.:!\3eN-t==LF:3:OO,X8:X;[q%:.bH%'0=+2N6,_2Lp#ZGm7dl/on>X9)Qu_`rIH(_(sT5)lV/?\3l)b[N]U2U).,*O-\n7;V.HsZ@VD]`1CYm3Z]:sHA6d?NBtHo1k<3jm%D'a6A`%.SH9_UH5/qiY\m(josbg0hb]p$@o]o8sBQncsf,OI#+[EfCm2.F:^#[cOYdY;.CGp?VZp_EmKo__'j.uXa**^_ZtF>>fH%Z8q_G`QW>0b6Q2,B$"*lhJ3Np-;7(Q>FOIjpg^U/84te;-P%rnZJl_.b(6mccqrtI&eZEaJHcKj?1eqs&SB<sne.7:Y#n.n5]8t!%Z[A$=b[7k0%$)iqAB"EtmtB*aAhtn"e3mN,Z?`9B$n,^##pk&Z7s-nY9Xb1hJ$iBiiL(KDg-_He-Sf7S+74U<qbP::\;!Y-Y%c:&%iFsPD-ZY4^K63.LU*jf6#9"<$SEFaA@[a8KWQ`J$rK>$UQ#oT+>DoL]Ued;r*2hj+2C^m3#d!,:fS[#3/MY,&V9o?Sj\m+G[?<g&%:V/onc],4^;eaJrY@?OWQ.)/Tp4/@Ur-dLeOr5X=k7grtC48X:cAp1$X'f?eV!0u".i:;dPZ+mh#?gZ+;jc>iZ9#;K007;$(UWQ\%NR0L=DfrdBCqaW4ohiJPq!tDoT.P2I(h]a/heI8XQ:C)ka&q):>Wmq>o\a>47etc@,RW8!aM]'<8IFQ(j[sAa.Z@g?\5K`"/[5A_%Y'F/UUsm4_U#gBF=Fd=rPdJetKccM6Wq3Jn_LJC^?<><d<t:G(bufRhCkt>]PHW<Db6G$@>?GWYFrG/P7Z.CAd`+\j]sso$TCc?8%I<nRZd:D:fEVj^eF%KS'Q-m`]JX';Zs1/gd<uLd3F\eC?Rfh_0?STA9((_[\FE&dA;t9@<`:L3)#$YG?Y'AWa%s5&*"uA-3Kou-3%.=)qLSk/lSU(M9WO5oXairnk11$62HL<7BW&8g?):pB/]&Inc%2Bu-]7,:tMV(tLeCp.h?j+j?A5*dIVo;]@dJ+_P-rrh)t#Fsjd%/_-s8cVsL(+a5S`P(tpm,;j;)+0ht6s3(_'fE5L:FDdT^e\GqY8&U-aNX428"us6(K9q;/o,*Q6[)?pIFGlZNI.:/GJ>"'a_'lc'%?e$m'Bd0arr(kd(R+W#i6j><1c)^jj_GH9]<3SgfB@[V$=#*,d#,BV[`D7*sTiW,Tn;ht1.TR6K^F!_L,^'cHiKsc.Jk5b&#JNtb%G4=Bl(ZJ*F@:/8kH!ffFAa,*ucPVY_j6;$_=o8a-6kXq<='NBD!cM`."-R<X%RHIMh]8%dF*75Rd"tF50jfC,Os?X?aR)L'%:?(g%!Z4.tXAuP#Fi>RUCV1H=[+Fo7M'Q:lr^p(RQ/1:gh*,r3*Bu$2iG@qIJ^CDQAfU7#?V(8SR*m#"r1@cbc/[jP58l&C/Tgl9VgC`]%FSu+*AdA?bESB1'5^E767m)'EoqZqfs4hPmaa]#lAfro-i2`j;X.AtS`m3E!UfPq:q,9i-]$T9+[LQ(Kg*^a5#L!.lRDB)DL%t+t%032D&2`i8apn0A@c\)0`qX[\`jQ(Q0SOT2KFkrr!B`Ht(inr+3Xk(M;mf)?gkAW,q=oKrNEDg@")o$gRqsd2R\G)YN"0GZ'UCF8f%e4"ZOS9i!5UnhR]>]K=arTYAG%m*ipR/QHm?>&jZ/!FaDrb(E%^3d@]"4^J?)\L,*kN!pbipuoqC]Bm4s)5&n^2PC$2#gi,jgtlY%?b3<<Rh#;=+'1YkW;7U5BM<@)[!0q]ps3uds#rK6l*]JB_OX1em&K.AhgR1k/H:?Wo)HQUm;;g^J+.=Q+$KlljDt3+^<9I+`"6s>%c?V5Ea6k:0VHpdJWT&Dn!>hV0Qd+`d=/+:GoLt3bn^=E7H'PB,q4F8$eHg#iPOa$+3h]gM5<Gnq!Q00r>48&E*!"7VeaY8kMcZ>#%fl-iph"f1\<kG9M)kD94`W"na5$^n_koh$g:>20_"9%%qP^d`o2`HrJi@<>WX3;Z8H-t=#4[!JkmI\!eV[42=2:Gg]\l%-;8?+[5%i_[m`c=,nGnbTbJ^u`:jV0tQ>Fh)>$kk'$:DqhshcLL=P0t=+3NI50b^_a1L:QA1G0);C<bfuQlXgAVJ:YXWp`p<'?kttGfHC3UY%F>ha^8+6>5=!]GCZJSr+n%\60SaQ7;4k78o$^O`gG4;[pYdH\*o-'G)^!YY#Y!*ZadGEdJ%2JPr\nQe+k!5D+]@1K=.R&1.hV9+I%nt=gnX#@T#gh<:NFK>(.@ga@(YNA8))su[LoksYOZU'60*]J1N]pcs;<O]pP1GB#44DGrML%KO!:A<NAXY[A^:6+(a]q[J+K8i*p%RGCT;rEl*O:!k"pP&9Ou+gb$+1qjH(%FQ:9B8Z<$BH"qEc>dRCg2&CDgKu4SDRBjbZZk'Xf]s0\D]a0ZX^8TqeQh`3UO3c:s6);j%3r_<V/8jmI[+BNrG>HZ+&+?9qRa#KBeNWo+h-7!^IDjrEff/.KpZ4gFkVpa-*W07:H9ls1Wj,PYLnd)4mN8"[,M5d^4?cUA?t4]\%LgR==n,/BH\kRfK?c:[i#PBa1RC&mkk\Qd9qTogl+)[$"TC[H4%NaMB%&)6]qs\.*6"dLZ)r=k;I]Uu6Cgei#F>qNK[DD0R[Bon?%I6u,edbSU*K2qX?n"[&RWpVWiQ-0R.Re8nK@11HJfnn4FL.D]u">il0,SIT<DH]c8)M?p_/h`d`n)nP:h`1o8UVC-J:V#^2j/(3k%\Jj;$9*0OS3GjB[)_7ID3rA/Xod07^eDjD]j8SNj`Xf<$`IFIY(XrUgR31&HhOcRW79A."o#Y_hGE835STa>kppd>*T2f^/SfWGX%HOY-Z2dU&nc0Khn#4NYem:#q]cjcpJK/i@a*$s<&ge:f/7@0Zp["?hF*m7'$VM@ASlq',O?a'IjY2lY,qtd?PY0NiI6Dq/X=P32]%RFNr0LYY.4B^?e_X*$QJD6G@Zn7l5OOpmq&>_kAr9cWWe!iaWN\(:[#C*be1p,k7O<TRu/s'GKHI%C9GEbMQHX)r/Ylc2Jc>A^K'%\@TBT>idM(*>mAshZoJK/W<eeqW+HA$YFStaUq6P,VG[Vq=tE%LA,BB,)r`\YhYQci3WX]qc_SL?etBh?Hi-BI_Lo!f)<8HKBHmW%ehOGJj'JY,ce)K)PHKC+4r7;cmHkssdh_<[CC\5so-=t4jl4EQG\X-`nNeI@i5e+JXtLl7FW:;6k`YU%DsZf%-O4MXiF0_Nbc5"J%B_u1UH6%3UGACtteE%r=SQl&cID"/NY!-Ul"rfeoFbnkYr6WVtT3UQ=&"WCjm"E+QU._dmVb[3`(9r!&?BP?35LX]BA:Jo(g1KWl%,Vcl1e5"QjqV;<TO#HM0kl0P+LN'VG=e"F3W%*h]=h7a7[0p$*lD.2(/o!1_+/rSk^_k79CXnD3UFD!Km2cgE:[\BbE0Z;G'jNXX%WHm:fr.6Xqh)[ER'4DK^g2*kjfiU3\+m8V?K#6]+oaC2(%i[loFag/[f1MLsEfRFu)]Pf#B!8`\.t/:UZHZ-_GPc?4i]*+IXs].W%V$soH[C^np%i*+?'6\I8CE1u\Z]j30T'ehTHX;\kmNHH?#rMVh('QQG6"sU9PipU\hOO!T6Omq)(#altDUFHUdlm]6arE1B(<^5)%F(OTYHhp'd96HD]<i^:Wogi6NjL-\CpW(6oltma0Du=lEI7Tog_qmhH96L$_[I)0"8%Z.c5.Z+^;S<IXc?E-@+6'nga.cTf`seP0%Y$=V%EW6ST:mK-!"GuqP^PG6@mqsH6%5DX[h-=p(?;bFr\9i<h'o4-I,^*EjmC3q_G?Lijl.=\1]aK"#:c,]Kjqt%EdN,bbSmSsM%Ip>:2kmue]Q2?p#j`P@V(j0H!%Srr\pFg,s;Wm7gX*]('DaUqhl$>OAG17T+BVLdf@,rs68;)ZCH!uuUc8OiJ]W`#j:`'<fVAdsZ%)s-SK[e;R^CZh[VAn4lE\'lZETQ@q!Ti1%V-CC;QOuHu`CP0%S.'EQqUZheh)%UR`XlEiXS.-"(C2T)ohFH*h2r;Xom<3S7Yq]Nh%F+<ocQ9c6ndq]KX]'!&Z*c5/t<ObBaJfX"]S#>Gm/6&=0lqRM1\LAWA9=3rW-8(TG8?_>bIVj&+Xjb1I$V3kS,R$Aqe*'YKeb7s1%p01culS=0%j.I_WNPCrhSVF;tBQZlIhJ@Q[?iBKZp"-g85KnB[f)\H_2,S;A5#<9`::l8tO<D"W#4.>%5;*YZqA$Ui4'?J@<0Wl_%H=Oa0S'3GnmDS]!,KNHc1A_S"2MNfVX,$(+h=k:Jm@3>)n+mM5MTT@#hGO/(F4a-Mq!g#F]Z,q7Y(=?_s2&OBH=?&np]+_(5<O3C%qhPbiGP?<f&3#cI?/74hRb(uSd/T$l@<Z5E\9gK@s$$tsl?:2BHGT@/'iS<\pg[uC>4!R)b3X:(Ou%,G27LR#[$N;H*Ub&^^tjEa%eKnB:3`,9h49)g02@c"Yq;\L8?)cnIn[0B@#U8A*K+:<pWV?q6`3:#j`]nW-LQ,X;%hMG3O>CJ*`FkU?Yjm]r%t@5J+tkKIcElcT%],nFSs6T8g"3phu4`)1dN]4P)NK,PR%mo"*7Y[Dg6iO0YTmO(2h,`DTdVNk<WL]#DA!bHhmDaUE5Pl+C]CsVadA/b$H[%]?7_=&X%^q+<r/a6>_USU&K&U1_\UY5#l:(R)\]jpo/"-a<#28!qAHZU\OEoki8p>KW&5qX@:\"2nP_RX34hd.iNk.7Z?75^,Z&sEQ(?H]h:%7I:GIm2fTLO/nI8C;TOqC-l7/[:@q6RV2<K-AT6$(\Q'k_YHg#(a[baf8@YJm]j_]/XNiX7c`$BhHi&(;(V,1mc!;^;X'J:(o%8O%JYA[]8OmM>eS;ENBo*$h<:l7>n_X0if%^,]PN2A/XhGXE>`]bNGH#r\U=5FrWTD#,@OBT5rNa$0:nMg`r@<e)*?PEN?$Sf'@>Ja&%GQ5/S*Ta?(8NQ]oqdcQ%BBON\q0Ojleb5e7IhrV3>PYI^Q7$u"'jP<OO<'8(?H\hF41e_/=g\'Aqbh'o(ESjXWErHa\/KbS;J%\)%BE!K`;@+/)j'USi,Jdg+Cuu'iYm^B?pd&kWX];kkGMuGP,l]W"RG)CA2'"mFIuQ#UP1%=VR$(DHH)^Eul?)dpntJ.,A9"n*k4Yis%Y1cB!0C_;uF0%"&/IkF^+$'LYZ)dHp934AB_YGAREc("3@/[=C]77(*c*JQ"PUUNfcn'RYgau$+XbM27n=toH4I9?'UM/SUN\3^a%?)T9UT!!^E]8%bP5mUO(>qi]Qab:F?qLc#1<i%>o7<Eu;/"t5<f(*k?(J#.o6peL?p\<;+0,(Z6*o;1hr]'_thL7=>5Bm%d?tX*K%nG9Jfl]^@Q>.a1dhQ?;8l!h._1\^=ZUDN@gbf\O!0BS9j2r`8[Gu9N7kADd">PPV14fN>D4nq3hDf0ahW&N=TDXLjNRsVA[rA[l)%Fu$i2oZbP6XQusrFrrp%=I>\oZ[J^OQ-E+S?X-\ORu*c0S1OU72X`h*9f<Nn/%t*9lH.>iUN#gHBu/X%0`PqgcA-1F$X;oLqT-Zo%`H!KCJ+Mc;F0.=urqoOWok(q_c0d03S"&Y:+&"4ZNh%e^5M=i'2TCZ_oTRSZ_Uc1,EINCTs5V>Sr6@lL-[sVKbOP2t_M2Cm4ZE95%c3J'=L>6Qmhu;K/?akM</8m.JT:[T^h.j)fh)poVHu*_m?5kDENDF@ADYQ0NXW@/r_/+2:hO^*a3Vd`*Y'&p`;QFkbn'V#F2g6<Z%Cp`s+CNj6-CLp"^f'7]G*q.t^3OAV]g#i53f],%l`tMfURk(PKIq/D#k8lb?Z.I"4KD49cRYMi+%ON72G]5kgI!rLDj8Ii#D'!UH%l\W:m?+%2In>uAUQ7^tX`",mccKr"-[qU?bMhg=kPF_OJq"d6fn7cHMY-gB=o>BQul$Kcjb?r-28$UVC4u)q`o?3(q^\NkYI<7G<%'7(A\h8GV,#p7$R6`eb3q7XCK.Zrljbn[(ih0cJH^HHpjl2&?]A+UE'L[X"*=1L5deo**$r]TdbBf>pYrNQ'%Wja;kInF55P?B6\%rMV%a4^+@4$]hb=VKP-cS:.X;lfE?Ia_JW@hQ(poHD*t&c`."nlOQ7A5CAA]*QMajqY\2@?><s>O'VN#IVgpn(4Jt/Cu'U?Ha2D@%F)*t@^O&nn*rG`8q5Q=PH=:T3p\3J3D_p/"`oc*T[3)]AT>TgS`?0EcrOi$[I'p?Nlbee7m]UU0_:HHTp/5\lSu)[=oJ=LrS)&OC%`TloEkKR'YpRX#igtd?1CQfQ<BV0JJjCnD7`8gUZh_LlqTkMb8=?F(@>^LX7H?O$j.pH55]Fc6HYNMc`l/]KlSQm+<r4G%uD19bo%?;O:%k:Dh4m*F@]"eq$(P8!QDo)%o_%BaMqA+N.qjZMDaSan8X>jCYICun7[a"tsS1HTUKi9/P`f(8.'RU,f,mb[e(.g$YoNc=j'%ln".R5.]M&$#fPR-W[+2qNOSWi):F3Ap&),'KSa>lJOQpmH36Up<I,#51k,S[M_<!&&Wb`qW\"VJ[TJZ=e(pc01TkN\^u,`\i/,E%Ha,Rs*9L,/0Yd0mDq&I2B!'pR:N;:&c(\(tM0j6.E_]poh0m!:?tmH,2A;.Cr1(>Vet3c'C1D$nEP]]k0_O]o1Rr1Xo_g%Z\o@]4%dCo?_-^tA4qhOXPc*a+'\#>/H'3,-)Mj)t`B'K"gr6fu)[<%*eqf[<M9W[Rd\%K>WFm!J3d<9_e$SK0npb]<rlJVKI27k]SrU;$K%r6L(>\+?<hDJZ(,=RUG)mFmp*in+1Z/9A2t76nQYs5&1$B'8p.O*6k%TBPe`Du]b/?G!ouFI1LE[8uUkMrP=tJ*>cH6[pCS*^>M9%1q_-!RD0P&-QXi5[YSF3h":47FT5!Tp#iY^qJ4d^3B-iB2,.)"^*bP;EdM,B55il64^E.-^N*oF@oRD$GJ#YO>B[&r54<uiIJg*f%(ut5]:%dl6bFElBI]uBCfUQ$hok%-O4o=lUUgG2c;-A7K?Db3pq$ZJa?F-1dHp5:#argVW?[']FnkJsAG9H9D@n00kn*sWYokQjn%Url3U9/Sh2WjfmZ*%VLW;&aoU`O!8&Kes\c&dHCYckt,f9Tr]!T^L+/8m,nfB>qRBles.iL-48Ub%t6#C6.QKj`0\RB.'lpWRAE!%oT(ZMqGMA.j59%j.aGc-/V1"dk;t></)QipQ).dk2er!9rmcuFg4lUDF8\[://i3%roI!`Vh*rkHN!jXH==r^cY(:;c<RNX,s2;*%Q!6q3*V`El"nq$t_RP+I5$qZrc`0bjB,?L+J6k\sQHYUq+tlH'cDWjG;40=WF&!*FXk<-El'p10e\pBZC55ccqrQ3jVeAjerV22p%97ODTG?*3(/P:.hM,?bh*CtR4"&L@Cmcp/*$i^-,QhjU+i?eLP;sVn7[IO36j;;dDrZs>\/P4FQ(#tL:^@-eXq%lg4du^!Sq)Tr#%h.s1,It"maGGhc:P5^cH?PmAGORC9YQ)1*+50YWa^GelrR-Ld!'`#20\j_e*_VX('S+!di]AJ+^/T0qR^+EDh9q:]#YKp9_l=.fP%#?GJ.(E6=eGb>H!;g0=AkkBE!maqFY2kY#eRre&eN0gZ;e$kqcSj36<?_>^CO&#<6iPMY+eaLQE,f/op*U(=G-<PJZH)^LebYJ+A%l43jerf+Ns8-s]o[(%j$G(2\LR]2b4W9;dA(HV:+TCuhH84q3'bPo@(.I:j?Wi!AXKa:RNU"bn19AM03cd"B:dEuT*h>8k^IViP!%,Unk_mQ^^ljl?cK#pc@^WLR3Z2+^\Q7A3YIR]+F4]'oC,^4oPP:EMeqHgkoh0?H^+T?X\ZgL$k-;u^cM(9C&>IHp(KL$/'d%Wu`7%IK%LHQ[A=B`kJ"J338]7d;d)ceTDHNqa]W@oYU1&f^:C3Bbjg\[/A1dVt'`bb$+De]B;TMF?5+8qZAiSWK?e#'Z.QK!'H\,&)1Gn%qS+r>QiGAA[.A%kakg-TNn9b'(c=58fAt&;UDrN13Usnu*,Kf[*$o1iNc:@5c.2d'$2SuF\))B,pm%7oGJ-\=lIro]/_6N*7-QY&%pMRE_^0[G*!WVqWGQ6DS9m<&OrqtW2#uX/tDn5.`bWmoX5/1_O?LRof,'GiMH*FKV:!X#cj=n>*]D-N[C*bK\s*!kndc047SOt\=%*Y^qDPIKt0.H8@iZhZP`k?aXiT+52)JY%</CVG))qB!4krkjLu2Q^un[YfF0l`\j]dIdF%hQ+rl:s\B*%e]ehmePR=7?U;ba2^:1%grtZeO1BlJlLBM!d-b(PX)'B>g4"0$s)d+gc7;'RY'5;%&&*F0Q4KQ_<I\+l^Sc:FXG\Z*c5keep2oQUh+:-'l3$90PFI>L42"p'%qJl9+%VBJ=B%Od>c@'pnEI2;1@We"i^[`2iH&XnX0jm,7>'P4<n#+Ob=c0c(pdf.#kBET(X.<Q1R^`(sKH93\o5"4ma,<`3D'1gO%U^D:S>._K(!3<ud(QojUJ%(/9]RlGVC\H"q]".Fs[JEJ\q*%lJdDbdFFS>0PH@=4hr^h%N2ElNfEcY[\TUa6E2h$DOoZ(^?p%5+d%7T8./O/Bl-+P*k0&,f2bkNu#JVl-`ecgOZEe^WgJ+c@Am`h^YAmtu%A5JE2,TttYSTDLeOID!.rFt1'JXrD8<d7TYH\9#(pfC+4G%*L(!"@t.qC4l+^?gE\5e%kirD#OcQ0)/&>GBCYl"ocGHK493:P]">I,TtWG@Gkm*HhhOO/J^hBH3B-j1h<fpXKAA3Prr'n%k*p_$%\!q<f-C3l.N'6tPkP+W2EEuP+$g$@GL#js<pE4:bjXS3>B3.S4^0&!qCN\m^c.ej+[V3A:pPW7>$dZi]NjE\'SUHeL[`A)t-H[8<%[Vi58N9Jd=-2P'Z3,pTfeZUpue^9HRmrRr9SX`YBYL"&'?OnM79;M+&qmG[fJNqu$Y*QgbR8$CTpFBH]?i8X3Rb>CGjopT`PKfqX%:J^G=RbC"i5B1Q,_7/j!Y8:2bIkSOkGjoIHb(J"6]6e?aRsDRC@!?UrqcOSFoX_TuQbGUC34X5<omUH^F,#Qip?4,SYp4kEj7)S1%lXfD\j!!,IhM^F[?V##4rK]?emWVAd9MML#>2Bc[f>cGD11Cckl$PZ*iSi5RVm?d./&!Y>VbR)<oD6>TlHa?`pVnd\K^E)'%j*BI%8'qnA"[r*b]5^fafXe8UY@\QBcTRX[W_;2_A@(<;a&D(KGk,)qIbT7\YZ:\8^\G?\EdMI_b?r;6f'(ujri+T,H$,0KClhaKEJa_e%CObh1W5m(=.XCY?fMMcLmPPg4R^%7`@cNN'XZ&DSObHf2d6>7Se7sHe?>@`%^O:FoTjDW&p\1,OX#0;DRX;fXgg6FT32qml3:Y64%F#+n!gN1?]nIN'$T'^+:gqCaT79&o*kGg<Q0lO:]fdHYM%ON79-VruUq>L-*VeVtX1!7HVbk,h03e#nVHbZt3>&4"4G]pYPrH<6s%DW^&a]p`n8s&]XfQ4@-@ohlg^hbCFD]73)Thn\g?ftY;Nq>N0'FiW%!j6<VnKr<gT]nOT$V8_-"\&R8:/UmOZJ+2`c5>*YJDUA'a%pDK.B"$KD,cAdsb[W[./C[ILR4gfE/4+YSgDa0kQ/R<iiGC9#Zahh*QG^9M/Q?6n[hh?"3j&0[YZ0`X*Uq]/SLbQc)Lp_?jj0)a"%r8,`9P=K+'&i%NO2V=#`T6jSE&!k5%2a9R<r!FM8EM52c*NI!@6sfu=?64H3r,1JS++,31kfL$j.m7fBc$m;a2uDh&B)O8m0o19q%hQO&Ul:l^;O5@FdVOr26#)km@m=d(\5eet?[?5[]NMVoX`=7;f4\nf0*O/^jRW8#>'(*N5f?J2SCOC4W[.;P$o9pLDkt,a<]U5pF%PHN`UI\i5h5k_K:k7N/SHrh\;Lt<-+auj!V6U^TG/T,qsp'Yq;O+-97P?eH95mZ_sVn%5!*%'oZio.5icYBLJ\'DJYrA]"Z<JfeX%$udi;H`,d<DeGrUArj!\ekH]/T&*K=qtilJLD9MINRb3!ou2&2H`&L4V\Xp_Tt0(K^ajC<c5P5\gKcgBR!eRR1J:>eVq%a3pC$_9%HZA(8pdU^rp#DmfipG3'@H7+2[k"O.5M/$,I@Ja[?_K+\NK=-H&BA+Ik09c0/s%M'Hrun`F_?:AnGC^(ocCf>A,,s;ot3+EWon/-%<Snn\B(qY[en+@0``CDMG<!IS>;$f9T7!>+4R.>Iqok24-)U<Rr6=%ncqn'*hn;$+RfqGMC$E\;rBNJ#m*EY3gPa>98acebn#</R%B2e8'qV=I+6"f?R!R:H-h0RD.INPd.$(h'>UGKtC:Rf?"d<=nL@#"RS:&?B]H<p2Ola1^qb^-nq(@KegW#W]K1tTaaDdBN/]Y1n`%1q-1I^3[B!Grbg-<dK$3TEi+Po(cZa*gqH(>b.C[IG)>Y=RUs#F)g74`fF^d215Q.@2L1A\rI7^o58Jf1VA53m<oQg\":$O^22YV%L37!Dp5T$bnGN+KNQPBdr#*Ud9C:JlEt?!u,I'&=R8@MdpBGX5c[0csDB1Ulme[Ls9Xt%@Y'9X#NJ6QA/<TnUq4gdq21+^tIu\;/%:(OOf;9d\0Kl%oLbYFaYh$oEohch?Xkhbd)fqjZrN>6rC=B"?RM3%=m;XsVW`5B-1@tCle1luXX\@U@a-#*;@f(Z/XEH>`5F(9(,%[-t]"hk/>4:Hj7,GY%^P1>fS'8X5Y"f2%`^IQQ?dg>WV.7T5)+CQ:?J^=`kHk@HT\mSA8(NINnD4C$e3<P31A`UDr>n%]j]@\DEK%,eSRjV$6cR7VqJ:C&bA'@iq.Tn)@N#mE3,Q?Rmu)K+A&29<@^1%s15\WErNJ^-&FK7!Z'"n'%pdgtTNW0g#3qq0]N9>Xj(LGA/[W%<\&ab]Tpg4P9de0&uOeMR]i;IKtDI('@su.%-c"G\f<b<*je.RJ!'GNJ+;.CdULnc?2X\Ak8c:IWD=b=rs\@&IJK-fbf\AcF5($4%Hh*iA\.S0*q%n8Dm`*0+2\XQVLTSsBkh^foFGIs5f&t#O:W<%?qd?=:]>+5kEkAljd(:*C5Arc88@n=N.9Ej%YeR3'HOoARXO$5r%>kkc)l"5q%WchLHV`X)"]I*!7f$<(5eACd*lbh)7YKWK>2j_OVcPNrAY<Pg+C\&XPK85=?lpCaEMsG/:^<[Z%HN">hiTV[.XL!WA%F3-<Tkf?eA%bb0"(>D''9f<M(?[oc]F8VND@JIG'm/!%5%kkEjj84Jj=&7_.R?-gfBeGsQ,U*l#-#W6HD:@p:R!4lXpfb/WLRFXh%Xop?Ijc>8;(DA*c\qs!>6YjBSNCQdDWHYh4DO'Z+^YC<J5ELn!,C9d0r:KaGg<R\E`q]QsWkuX^18m$9EDT0/Z,#$<3Pm3TAf@]$%=rikTDmfO6kJc]bamRQ*V`C->k$Q3NZ?s*jh`I7_kaqM>?qE30o&3mWDe%;6fZ*gI3<J2-n9A"=4.NCO5*(gtRZ+g'HL8QU2u!&J%3rfh`ac_EU\IUd6qjeO/6lc.bC7ji$-_hW`e*Cg[*9U@,h.ZPFT4e2:E8:F_p#cQm(V]qGmGKK=@sEY0&UCd^;Aa.u9rI`!o<V?"%Cu?$P4F!eC*i1CQf>b@=6f2a^*+%Y>F!i4'9tsn=+C^GD5H(aOYPLPmhrRO;1r(3b<!1JEIf'FnhE3jfg#/pF!c2S4;oV;W34P9(%Xl,Ohr(ALJr(!cnFj<s@rd2;k4#97)I*t46hQO[-Jb#)^5<>i,mA%tNbgZ:Ek'lL':P*3t>!Dk:G'A#+M5og.R9'(WY]C5gq94d8%$?6uag6BEI?E)biaC[bg(hi`K%7a\d*3&eC]t&LDS!gNZ\M4![bes,LmBhq,ED/`BQ4J0O@f>GrNN?%B\<cEm+ZulX\c:rXfRII(%lsEnY.kgbW_">D8=kYGSpX,c5cqge6f4M/bb,eP'&haMs6jTE>(uB3X]I`Z8h--3D(&Ct]/MhKF?al*N#JJN7X`:==rdVm<C0Hn!%fCB?R1("OUniLL[KrsX>jg'24=u_l]%]5M7dkMW(R#eNRmmRo%U/Hu:;<SE'#"SScq.ZZ7f5tHTQTd=M1/=18?8:j:bhC&o'RDkP%-D_c%OJ5EO'iJ0_W.`m?j-ikt+ggI^@bM%4L#,T=Q"^.RR)!:L:a^sl1-6M9jfsI?03:[3=OSXo6"r1J&`"77;+qpf+(ZM>r_\fI%jp*>4<8\q[J?Fei*IZuq$V_?n]$YauNb;8:E!e4=dm5G^\gV9X]V_iGFj+r1a962i`mTB_aT<O]ShaL0bsRpPVH=TTrFeRsBHF\&%K;N<\>J.Ac"4qe<RHr8?"<C12N3p!hEa7b($gSg&*p%rL/raP7C5*AI;tJV$p<jVFQQb@*_h-(uFCBQZ^33fiBh(jmY+qPr-5\?c%Vi<-&7`5nD$/4_0d`].7;,etZ"#Uar2+<nP'7;3d%PPQES-uufa</mbK+@-M1e;//6<`N%a#u/oP35-L&ZqmTGj=0*?9t<<W!nk]%n2(u9;M0,$e7';0RK`.0D%-AGA%a)$i/BF.Vk*BPT=!hmD[`A)W1Oi]C6m=(&Xj#sUa#@63*T!XS@49aC!TF'#aH=^!^']r1;Qnl%<(-'@nN\\)8`P@n.W]U`R?G=]=ZP==6R6S4m5W7ieg6Xp3T4g`/8LCETX)E<l.Jd8]UDQkhTuHeRUAEGdR&1;m2\dH=DVhsjK_$L%TZ13fYi@duZ<k,ZV7)38P:%9U7F>Ms.!TksSeInH8R&uMbHi@\a)k-]QI:oeGj-kZ9oh5=GsM#b_@[*K/0Mbcb,?!-=T4bT-2<R&%bpa;E+>"7sXJD7:'`HP"#>4=WCQ#)$'q[FR6blWf;Q:,YD=)&(*:K5f<@_`e[AWVUkA$hEi:5bAJ*aPDRNYjRZse'*BXE.<NM4$A%OX<Fg@S>t(?k-o/,qUrp'S?K-8k^ttD.g#N4WYsE>XkM9"GtT@au&M&b)-ks#!='24aunb#QH%"a)`siPn?;cU.tJDd+6-W)R)Cn%pI+455YTENo6=#97o1#.7np(]+B$52i$^=F3kTo8?Ph7Al&pKV&-/uZ_RP]Mn;9.?XhZWDUS&\ilr;Hn0^r5CO$*B8BbHEsWMVlq%_=P/E]Ih5F!UX%^gE-eDH5!rM`CE,.i$MW`X8iWnO,4[;:.;<fBOPFN(@b?`b"?G:.e@mY*J:3ik*g\*'\mgS"O=',X+`MP*TbA[%p=N!T4&(+LHerJn,,,R,gEoB2,Ek>4<uktL/+uW6T>qsW@ORZN04ON1E@keJ_YH&g)'/3:a6b$Y[4WYID"%c[$Ak%IdUGk+29P18%MHH8Oe^<aIn8j3hcReZR-T478iqo]#P37&4$a;YWdcKPSZFjSrb-aj3Q![m`"g`IO<,OWnHN)P7B)N)6aG5ps<Oi6HO_C),]hho'%b+b,m<(<9-V&NYi8dU&/=YZ-QZO2Q)*&B`%CJ6s8>rns@VmBZ:!ctZ).\n;KjY"?,\.JD3`mW9F:i-t%1`.+8#[1>c=0S[JY`t<Z%fp&d'FNb+Rk7([%<qA%G#!YasJZ!W,;8U]E.nUk+^h)Q:CQ45oVjGJkc7,q@h)do4gr)lK*t1TnJ0ZNa[R3G20::as_.g_:Lg/?;%)E/5`7%.8a$b2(-*$@0)=]gN(Kp:TI>0EHJUFT20%#kaMj2%*^NMs?0Nkc#lo]3^8jO`St:R]A?VOA@6S/.%kAN7=p:1_5OP-8lp%6"G'FQ3Os^kAY.Wk[S(--/EHDj?s?K'k7Qm8OYG;Lg)dQ;BU:]WIQrbDVAJml9hU9PnY^ocnH!*VB^=&[7nUIP&J<oW6"L%o//Eo%.mT7-KWI?VU&iVm)"'>h+Y$DmY=.(j;^Y;'M3@_3Go49iFf?Jucobt`+^8tM(&9RjShU\t#9JoRi+s^i,^IAug([X#:P'+6i5?dX%e>PUQQ4_mPi_0[CK1`tX^]KA)6@(8oN2Edlf5R)(Pn^aPJsm,@ND^^l+-u57_)8o[>YAWr&s;AaATYA=<5q`,ip2-hW\'Qh<_<(^%)jaZ(a^q1(kCjkb$,%p8j8m\%"GIJ\,D"Y>aMDV*<]"h@C/o3j;1F-i'f$S2J6[hEg@2-$-4O8g_,h@8#)*u5AKIS!iA*HoT$->f%ciM9p)p_HYG"CJ*5Qo#(hc-<O/eA`e&]1=gp5%?5^;[P0R(/BH#8E,N+TBPq,hp_36jmG*gl<cbd9*Ud"(pRl9oE5GQ3TI3j)GaA%a+4T%A5PM9I1paWaGL+RZTnQnQ^0s21_%%^q-6B)5NspHiLPEc)7c3ua1Q-.E:l5^7nK$Lbq\-"E$&$9FGaeK"&?8J)uNYc-F<bB%aI=3,csiZ+g45(sbWY1HUNOM4'+ZQbbO['PkR@p]FGCNlo<F>6W/g9PHnFt1Tt1r2]`9dQW@&>Oi"9etCp8]M9>CYW`"OjDlP0([%gk]K]oF/!.50!7'@]$?V[Ut\[Q3bptl\PMV%7Oj8LS/T%"q(@^iph9hR+N0+/rpU]TH[]T6k+:<VBo*=6%#63bOBI%,\.:K@\Hg*%bEKs-:XWX'NYnR5)'ggZg)<Up:!B#\j)@1%Q40V0.K8$emrJr]19M&+@d3+gP9NCnAT!7]G\'/i(:mh2gl6lB7kDhMW%OnT<"C:,%7SbjY@Oa1.BqlC:1CA+VGuV`SKh+)bK>]bXrQFauBP<e7a4`ihG6Lc33Tfrl5fnQs6P9ju.%Eec]A;t&#EgcS=X#n=H,3+PLFc,+%'+:RmL<GCbJeaC(!WH2?R>#V_8!>32)E+r%5W8_#Fu3o(2[/YD..H4U#n3,D<Un]5$-`WYgu=:I6:u6Y`!3>-WVAobkTSbACat@N%e0&%3EWsh[`P?QHX?[>`S0mC_G`^kHe>%)4q3PfI/GccW3F"pXC>piP7-opd?BSZk70q';APgg'm[MKEP]V[R1$W"Y9-PGo+RScs%Jhgob2k<7rTFC<f"S>#fe+q?O`*=5FWc=0g#@)pDQrphm1Jc4oarFr9m[?+>Pf#p`&!A_#)KA1crG(%7Jf%mR["WVul!$rmTkE&7%Q]1.Q2a!WU=9d2]1bMUf$YW:_K4A7rStH8]d(2lacY+AA+GnD-BFq#]BOLOaSkI"T+\8#Tn.'&"pY0d\>D(\7Uo!R&mopBM6GtHN%a2<O>BKiQ:JoNYV]22GjO?U*,#,+=/pIl\1eO,bu(6")qG^q(.pfMlJYHHri+nI3%2[Oh/OX<`6Pfd[%[?NuA#]*o<&1uSZ7KP+n%FBT`ser'+),mGIdA%I>`*!@15_r>(P/9p]\l$amEU*2k6(=Jn'brJIOLs`&6)B(!uM>'+bVC/s9@A7G^>(P/ma#[Am4E5isG@hu3%isb7]*rB/$)%XG.g'Wpl,(E:N::F4J5T%nG81P?J`-MT#8;>eL(5L1qDU@3,oZ8:qJFl@EREB29*V799QRAa8@,S[CCh0:E,N43"%D$1)B!-^fc(1JY2F4tOU#?&b\ldLFQ,.\[e.P)_6J1sN+.FS(AeIWWYSP_@-WB*lE_$1!:7O`/*N@-Q0U,\UR0%3d5/4BZbe9U"`%TL;m,>Lu^:79g$C3t_Uo-:u$op7W1QH\4E/h7uAdd-MaJRg;^j2E5df_Z^K))E.DVBt:"9iC)CW18HLp#qEZr,$T:o_BkL(%JsTZ%ifh7@^2`s;%lm/BJodaili<09^X!!+MDpM#IFT1f5Qt@/2+WLlA34KZTL![*./lV05Ds*e!U7l4\akPc%(<40"f:2I`<0hu1Plmk%*(@6O0`g;`+PsV-'BbDDr.:6+84'5d>*H[TY?BO4E`^^]pBA:NMAKj8^E$isP`aB>f51i1$r"#.Xd!j-;eZ9=:B>$#NXY>oRW^u.%-#Pje%rCE`"WS/A+LlAbc_E$1-/HS:.JY5mH-"2UIH!Y]JZ*5G#f-)q_"Fc7HSBN(/-o7rfM[B%,&!?tTui_D'M4W5bb8hgVh=A/%Se%-ZmUsEpM^2OX>`'j(/ti!D>d%RLMOs^"7)eEnKPt>6<"YIF+_<XPFSIQ.kX5FomQp3#%CI7$'_B]RbQkTbPW;W46sdo.!L#Vt%Y$mXtPsM6cfJ&\<UQU[0)hKdG(1La_4@Ts;i&[O:!WijUD->7>fZFT>YV\p5$PFjt3^?M)Lb6DM^rCFAWXoC#jC9/1>@tjnJuG?C%dPd!:".M<p`fSF+FFrYBlbTAlrFf>=*#qj6fqteZ'0sAm3&[8p7%%H!NH=!]\Tq&,?s&.;#Tj>S]Vq9ppK2U3.'Q=pbX"fY,kH-)%U8H?Q8GO#38EBJ:?",ET]k>o9/aGP:UJmn,)k7WS$A<#73D^SeaKTm;@(g$P6=MB<eO=YSOJi;_4%`p1Z(>grUkOXX%?l7gpB?Am%?1?60Ti.j+P)^ZG_^'.h]>jfb$Pq\^@O>F0mK](@(i0E98R%:f9caPW>`+>fc,+mU4r)I=8gQ(u"(B0F;UT<uWa8$;6(&D`,1_;^%,ELSG'<pK+;%PM$oDg`grKIj'`6LV1f,@uaCsgiWC-$t"U9?tg!t>KTq?/\^C%sJ@-j#T-g(kYa#.C3@4#)WB$R?E7k$05A"_I0K%TL@!\&A(4[/Z+Y4Z7^`3dI%m^WhAO>>R5<g16tt0SPc!G;tN47]&5=mfUf!sYTO*J=i?oOAFC_V*Dop(4qkgNm1:ldrZ9Xo+sq(E%d:A=C8iH7'L]JG/It,Ho\T)KPRYD\(YVJVu0[5V1P687\=sr;WO`$!h%=;AO3f/UI"QjEm'pgOJgn@Io;QuLS+cANnUl;D&M!+rT%!V74oas:\9>S:Vap-\TZpmP1?:,)?1Zm#r/,!5Sncj:#7kh;AN(PcOcf89h$9?b51/R+(6_8?[L2_SCQ]]QQb$YE.M\h%9hiL?>@%0TY$4r^".oQ'E8b.Mu")oWa$^"KN5+_)e4oI6ub&B*5c&W/S9Sjp$6BV*P2<Q48WroQVh(ZBSB@@V(W:iKh8ZKW^MT&'6Ph9$B1F%\<UV[^dAJH$T-'V4@9YEV4Rs.aJUd1L6U>'_!p%NiVDJPYf4t&4c<tp[U9I^J:f:*a:Lq7nEe5H?`Na)"pB@ADCSao]\%sp3,mbD%2H2Z^4NRj%#dHsZ9?SNG_MZ?ETr;_CT>Y<'c]aTYCnH7iiDo<$)(Vd;:/$RJ$Dk7$-kgF[^fjhu?Q)s_\.!D\V:c\0dV*4.*UMIt%-4C;DdW$n6Dda(f95M?e0red!7"`GW:dusER>(8p[Yc)h79VFHTlebk;<I9/_Zecuc)tG;e&*#-#.??RQ*SVB4es30F"gm]G/mO4%Z3U\k-)!q"=W.^#6ksg'_0V5%@3I!rYV9-+8QCBb&d,AJcE1ak6o$sqfg;Zu,'Y&/Ue&S3E+MK[2p)IE8>sTj?3apU1pDMZ@H#Wb%e&Ss7bEC+#V<D1&H3-J@$ZD]ddTurE$-oB$TfqoK\pcKWLkZ.`-<_B7?>?EF7ZsC!N=0+F8g=`QZok`34W#0]C42")e>+Bh,38qg%1N`S)i9W33M'&CC_!=^M>3'q>"%st;lY,0t.?ZegPi_##:9l"GLp&a^EE(A*+Teo7MQ'M'ZNtahk,dNK(?HH0-5b0GAIo_!>?;#$%+g1@TPV>(SW<`\p(o1n0K3(&X3t68Gki&c9_!Pf,Z.DI(Ns[L(,&^+U]FBL)oJJNZ-p(8S_"_NI6&WZ&SIBk>Mc&BJBeeVp>X_YD%R4Ho<Vo'<C7U?'J@^o*g[TJ-JMtmq);A9DhrZeNK9T"N=6R1D7(,fls5\lP%%CY7_cD:X;DhrBClUL'(Fu;=[=Fr]XR<HluoK]hg%1XQi-LuhN;OX(Ag*moC-3eRTrfFpZZR&1L($tCUk]L:!8dg#4FR#FZm>gOl-L_XJX;j/,1!"Bb_,gmg3?G*QJ[[/,V7o^o53o(st%f>X1m`3fj\N!k>86=a4E#.A.X'h]DV#juQIJpWpO=X@Fm&lH`W[?`Vd8-LZd:g./Q@VFh18&DZAj7H2"j=iHF<0QuM\3?Rt,t`aW%/fJng&Gm+jAVH+,"3dn\NEb%Ti%Tb:gh65BKCKG<0X6Q\T.XB!\8WT9-ejK/m6n8c39\9]U>3GD4eaAnkJn;iSjrMP7,\N4l%/RZ%J8:%qQ"8SSiI-r8`F9WFI@0?;J5*\_JCl.p/5^rNeP9V+M9Zl7dtm(X+mQ,DK]P&.dia/X2GL#7`CLZ[&lc;qdn)LR@%k58hP'QW%m#aXo:,HNa3D08hf6Ga@ERS+//X!cc?/%uf,7P[!@5b(i`L^-WW#AbN@'59[Rm&P1M\']1n>n$PRt1TFM?DATX=8sR!+htfM(^fD%1P^6L!D<JdSJTNkN\*fU<2?(p#>CF,@K%(&0uA5R"@#5L`*pULDoDg1ZJ_K7W5Y]e(8ER(qA1henhke/im!$u%@7;?:YIdr2Or=%%Y5l2oHn'cnP]&E%?[,(;>"C(b4#&CW'!!4\1feK&Qt\Yg,b]*LN9TX0^/)>VVo><aDG!BoYhNJb*,5TIG:lRIbCr3/E1(sE:^347%AOTV;pc'nuM%L:p-j5D>7?M,Q#eWK_6cn^]=Xl`>('H?OK*NhBoPd9OLpZ(`Wdr]g'G*;jTjB(GJb%A#ec^4QB!0-S+m9,2(NHBl%+MO@cH,W;h@m.VmZF!"U373i6SbF;TZ@`Z_UjM)_\[2c?(e^)T5=/;',RX?PCs+6$R51+^QTD[/Lq!k0*>$oWDOo!\0SQaCgW7o3%k<F^n2/t+3Vr4?q"W(Z"JQsa(R>$QZ^#J&N5Zs2,"`.1qB@9'TEpP5&!SsUsmo*@<4Tke#TNcYjj^Nb5L4oeXV9=D44>&`T=@Amh%:ES1\S`gFR#!J/_W--=oLZG+`c74iCi/n!\^uY'HZ:PaT*GAm'A-X[g2G\-'I)A9Zm$>%*In^7\pHuSW5`maJ,Kn=HJ?E=I(3W-C%on'O#n-k:1F-K,Gio4>`Cdb*q?ft=;DD^f2rNJ$u(p`Y;hKOXB<to![,p*CI@+p4?:ZfXe2%d4t-\GTi*29u;FOumCb>h98,f0f6%,2AZ\p^kD4)hH75I&N_L-RfA)4DtV18PD^RZ3%aTP\J/1EJk#l#_@&1/ZZlt08"`3e<:n_h\f)n!$HQt493A-RV`m,>oI-KOC0s+%S.nY4+dG(?O)_2Q[4X&b+p^sE^eC)oDp;?ZAB\UkaT._5^qQ1`iqOe'h\N%6.-,Z;6sah,030KKbr5gK>SO&c(7e^!/=-_[!*U>G%5_,NtFY4mDkRai"LogFS*`.Y]'f\,r<WOrEeO'ELE+kUI0(94d$S"&N6U8>`XWTMp!.[CNP7a%h&o=7_f:)(1*X8ETCKqQ_!A`0D%]T'kcW?8W_X>"X]@,M+HMouH@!#@6_n8N@J@$q9&QTSW:"\_Zr(>);Ya>KIj;]IN#L6)EUK?O%?)W41)e<`E81bj0.6McLpW8OUN%<[8,47r]]o\obVEJGq'(!XM%V"qYa,Hj.(Hh6jOCI^ek;"!fRF>tl/hl8+%"["DJ/fM*>J=#I(n#+iisRMB"5"$]_a!OP%W3Q%NE%"P;7AST+_6YOMBld&sCI"899%>k`Zb^'=!q-TGESZEF:HMVdSYAtKDRS&gs0BO?BDM=%d4g?5K)af5m+k=3/;-o5\3q_&VKY_Lm;%f#L5d6`=u$5WG`0E:t0YY5qP,5YBRWqqS2Lf%6&])LPC<0Bbdt21m+em_=h=VdeR<Ut#n1f3h%=nIU-@^'65_GiBWhT,T2kZ#p&]%f'F>`KQDk*f73r"KXpJ[pu*3FHcX`'r#41\F_n^m;#C;Q-U_8Ma"P[u+6l+?/a-*K!G<su#3Q@C1nYBA#>p$<auYu`Q]#r/=,6B_%[Q0Y*&+AQS2$BQr19.Y^o^cIm+,'9%gpMiIC9(e>BsrPi\6'"/CBeX&L;HuqIU3i:(>p+6T1^&Z;?QW.8.SS>!&CjP$]U+PO6gN5%VU]X.BKoEmA<!^PmH7Vt^3])&IL@62&Cc+MglKmN+sJePhh$Co.:=9lqZ5lR]nqC*I[""B"3BDL'SXuR3k4&[T2[`66#aSm-k[fp%,(obE,\a\QotgTm&W*>+"SW!.Uf^seKDSM8!f3tRqlM9jILt=r2@HsCpX/rXG*B8>O7'JB'UR6@+5LkodM2i*i-nAICC-QQi-n@]%H2.HMhnkt$q(,S)IUX_4HKfZ"F?_)cfUuD<pKNq;"C%JFrNp3*cQ"!(U&/\`d7Prb+5IHD'-KtkFMCc)L/mGd!1rELQ@nCM#>s*A%.Z+5iIT"E(NibYB4,)<"#tjL#q^kK,:+Bk+Isj9oi/ci]6-ar`n41g)0Qhb-MG1muB7)qdX@WF`'u$;qaC*F[^)oM-`&oiihj03O%n:ULb93ec5COCj)[fD\uZa>e^\#b<!R7/KR^P*6_6`;7-/^X*O1$fXlh]`[]ZG3Gpn42*]8[q*Apg[[5E.JAUNsVga>-&kG..fg9%3lKp\6RClAN$80K'6UJgn])]j,R,NM58l)3q"Z\`hZ<25@c."nJ!:R7AN2nAr)"5&S`0M54[W@LPkjVJn])slV+<9Xj3N,iiXa6M%J'1kdM(@q&r381]DU8aOcb$uCU-?Yj'R[]>iW.%A$Q]XXT+(8q82/3WA;n:B_%W!1@Jh_(]n%EW.Z?TRLk8gpA,Ip:f6f\q+FcX.%K3&.'Ig_p`ptmmK+7-QE%#q6;r5!'Z@m)2lr6\0C>u`"sb;)8N$>L]5N133j!V@b$5A"RaJ3JP^q8ah;5Tf(U'O+;NOe"c:NXaBP%B[%ZL#NMgli+aBaa5U,,=\'ZbHlQUF/jT4o>eOI*s*^+r'2%o"d7="b:0\KDI7F&,fhidPhe,H-TRWRSon!*jG#SS?K0>+F\&.rN%.Np:XoI$0Ddg6+?JFc:1p.A^2$0P)6,q4BH#0AiS#=h*(\G/85hZ7M2[34rPcJOaR;Ml^'_YH:W#F_c,24Qm'8R.(2)U9F9FBIYj%K_'CQ^POjI_tcCLh0_lgEW477\QZiA-_.r(f#1utFe$2K"&'Q#"S6gkY_lml_>G;R(*umO%H`^L`U(!no62n#MJKN7q(pT&$hV2c%q/akOALJ1!rXRRuEJmdUIg9b.Ee3k&rg4+3'/!!=J)GG%'J\.Yq)eAKF@,7o3.D/9I^8?PSA,GZS,8uk1X=kYLa48]arfj%A2q[R%J&gJG<MhMUq)c@t"BSY,q4k=(U8;I`^I*75:>I\DT@(=!AfX'$r*@/&qJ6.>Lqa$&/OYB?&:]HPkouO=.YtiL\;1uP1W1ABRqs!8%(k9SL">Q`R(k2sM7%#6%`#.NqiP]92cPV.R:$3sp"V\o56%'BPGD>lS\;j3ZR1mNr6QXU[H[U]7&MEhu%jsaB4\Kgp*Wu<@]If],%>P\>L%m5^cUIPO`"#:k(=JR^fha@-Y1$e97i/c;o`VPf!rc#X8TTKZPpKgk>_EPcmZb8V:ZT\KhJTiN\.pW2RI<9N":"9:D4otq_%#8$k_Moee[&cMcKKS3Fn6i=p$DmK6JHldMD>#4[&-&B;@<LSS`Y9<g`r[V-0$KCMW2&,7JLA1l?icIN5<tKl-BL_ORAr(q5IDC,_%p]nmrV4_Ds&:_K[[2#<RK)!70mn:KeAr(rP[W7=B*TA.@(_NB<"n@AWN:$aeqBh"_&BQ2sq_Z+lnV:bj9ORUJn.4HH8kFXAi=CHY%=er>1i=G[m$[FiCn.5#nq@r7W!<)ua3sd14!W:n2pAtf'!<2JTe':LB$/s3:CF.j95/JE0?`e0g]sBBs+)D:9b6WUE<`u5;Nf<I_%6_t3&hCM.k_rh[GJit@VEUFJ%XG65b!Jj0re0fo6r!9Z1Z@N>@&(>rqF<BGe$pu-H);cNe)OC90_Y:t5k*3ZUqtPWiFBW6l1B[P"%E3`YDbSf=Lqj]J%rU'dcEPb?r&;p\\a07?$,m4)(r\R6iq>c"!![GG+%.FK<0k-HN!<2?`aCQ+%5Jm'4W_irhB6Qe4i%#,lc]/-J%+BS@;aJ$e_V&A/D-?14(N:4euQ6Ft1Hp<_13XRlYHp?Q$V>)5j^`U'i+p+*3-3=#P7&k"<5%K1n_>%Su5fj"U+E3UpZ="E_^L5rW%cr^MI"-"<IW$rth8VRFb*(9Q(CJ.!`:PFbsB2l!CCN,!sB5oLX[m%[D`6",$OobP.bPE@eE\P9NOOYNqhEJ`IJZRj,X8r5bZ3Hr<%!trHmQrV.?9[saS!1=$U!:U63g8??u%.K$o/>>B=h[dia7,b0ahp3G0Qog%*WJ#1FL)cM@i;KKCSiVjciVc$Pg(Zc9iVc"e(P52W%_>CWlC"iuYaS:4di8"cE5Ud#tYFtrR?<g"q;_d<M,TJI'r2Ge6GrAsdN:GN(!gcbHgjP8KFC6e#&HNNeT*nTE=U"E[6FpY1/PtF(%[Gq'K]RCa^:PCERegmO\'uJgB1=@=3rA@9gh?jH7A,X5N&UK[)4:Lr8Y[eGN7]Xo8)GZQZQ6sNJ27tT:*EI-/`,riPg),A;CUgG`%:g(^5F.r+Q1`uhu2.n0?9Xlsu58QDD=t7b2f'H[9d/aRGc\5P1[l)[ML.eLf/6GuXIgsk'$q^:k\:4t_X5I],\:4tBP#_XbccCSf%GmL3"6iYibS7J61p7La0f!'Og_>bFnBeQ/$(&FQ)kCK<-2=s,BW[)baK)]V2pdc[m_MnNX8JsP$[/^3k9>Fk6"99Cp]b0'LLB+RC%R.q=Rd#S4S'!'6FD&!2h?C=Wci:7Qc^qL:1hR7kM!*cfV=]7Nr5hmhTeE%YV:`hqS'S$E-9>QtX=9,d.MZot"%)@%$M(Yb2")qr]%Trk$if_h=+.6/B@k#A8a"Glk[K_m5C5dMt,O;q7oJ/4f1'"!*&'Yk/+#lq-&!i.VX8e(h-$`Nk(l>ZheJKV4l<FC>8$t9mn64+.Z%78\YAX$m6^^*l90<1s=t=N4mK8[/;ET0POtJ=@jr'*F-%i7QqiAbnDJJ>[<R/?=I089*oD`s5//0VK1'+@RJ-f0TV-IWVl6<&"Gn%R?6@FKiO'3m-0W9qgOJ(HR]CpcW(,T!23[jEh@fBJ?_:lrXAu:cmcf]UBcAR:tGon&5kq'N,XXa\P4AGRO=qm5)$/;&FKq0+%*Ar%2pF\cja[qH&qm>e5B>1/D'Zk0,aI_@PnN$1i>b-i0NCXfVh,#lTI5uGXktc6g_@A*04VXJqb+!PC.5[/;N:O,0(J%P@gGj>*9l,E%1m]@`V*DUtR\u8%)P/2io!J,j3TV6[H?=gjRKEm7!eIblJ-pk7%f,;O(gC<4"Zml.>BsU>BIOOg9R;g(Y-B\rbNT!PO?4-=&`<a*%"Xf-I!!-Q$"N`Hr#^HT,1PeCMq,gHE?q)GlSBUmZ_eg&ZDNKMtS*nhBLhF).XQ[bPLGi$n%>1bk"uo<or)fg/o1[7-[rfhBMd-k`%/eiS.F<cF(Xcs,[%LM7$7._o0n6KTB.cF!A0\ne3[K.1&:dHd!H&3-N?0q?DFt<m)M%dl_O.3r$V_8U<![ksE[4ZDB2_%.ADSZq@%0OFss7LI5OZj\J:3,6-;7>I^^gofk;'^Q6G9EeCe"/OGBNr]OXCe97@-`%-S0GVJf"#VL2I#0peGp?ms(nYf'e$3E;%Yp;6//b[f%LV;+K5snTZ.GSlF:4r[*6HNnd7l!W>3eoHpi5cm)/gQU>aU,i,.(X1KWu.7AFW;S0BpqIBqrI[&F(=8&i,/4aNN0CVN1&Fjo%#e:%HpW"M0a<^uZMu2^.5We&Cfe-R'L3tf<:C;UO,R?74j98^_1Dk8B-X-+5U4puKCf2S^:=rt(Do1RY$G0=!%o88Q[j5BW7/%T!H0td%<f!Ta@(@GdBfIAH#'t\(6_NI]IT_nnSit["36OY.MHGXOFGcjsL6W(,^#@BGA2]6S0K-f^bkNWa!lr2Z!f9>P5_5]]Z#sAfgqU:#%rQF/*D<"O>hk>G4R(p(pKLhYICa\Skkm4OAL\?J2e&'uh.f`-@Nj'8Dr*[M3=TH)BF7%,kG0eG24-%dDps1Hb0<saI)2m0)I,;C'%8:-*I#sTVc>ChQ/J02+["udPm&KkL1cQ)s2NWK>b+_0L4]:!N(:,NHA"oCuq`)SU[JL8^g/.'AV_d@Z&q()R]`ADMlpS#!hP7(5j%!f)=r/3%%R95G3mC'bWXFj7]G-giBH"AfpIs5_,($]8N"VLb:*N#s/^-Ro.k#)krIZD)lM!?#ZNNWBbn8?GsVZ,S4Q""]oI.M]FL%%=-k8mQJIr4Y*lKUCAo_:j`>"/$[\.C*GtrTGkqn3VXHl!]YPFU'ZTJ#tBb?1PoTGB$BTk"p@1bhh=I]_<2#?OlDBQP[&Gc%/*qj%(68rn8W;<@IhSB43^skeP8,tEO)%,i+JQh#c@DP6+=uTj`.!pcX/'<D<FC-LPPB7$*ilW1r<Q.ljDBd5AnVJ6<T1giFNqV?'b[_`%\]>?%_3[uP0Vf*%EaT1#^%bA?"OB>:cVWaT#=s_!=Bm+M)$C?&^^ZrA]TOsfp_>@WGR]7a&s#IB"6^s8+gH`;&e+]R&kJB6P;]k:%GR-f,_E'/'=0Od9ETCUQaVRPR3B53]Z]p7b;!M"'RKgCt;ZnoSe1eFt2@!MSH*FM\U0^]S>863o*1MUeAf(Wns,:VL*,R;H%=fN9%&N1qFnQBu_]Hk!Q";4CB2C(/r+n$Os>C3f9^g1^5nZiS3P2LOLo>E;"FEI_2/SNC*jpOa>!73'%0LjF=TSP8L.8-DbR=cc"l0AC8%W;D0r&<S*3Q\(p]0_;UpjqFfU#bNm2^C\7N\+@F$.9s$5p*q0jLP&e>nnJ2ShLOioGl\Q>Z503\]GJXd/d3R0CTIcT8!k7CTW.Za%0?YT'#eO=kq9:lb;c!cm7,4qq4!+_V!RqFg8D/r[8u3@D'OhtW"@PM<IF_%OELX+t16@=r<l7ea84PL5#%+Fk+MrH('26lt@&Xaj%Q]50:F-PWi.\`_u8narLVu_J(0WIcR1kDE/"2h(M([u"o&_TX%5.O>e*3Aka8ll3h@HIS7$`+=OnN\OR4bhEWELF7_mD8fF==?RE%3XLB@&4;Ot#_NH)(kU;f<mj5@`3pL2"%],-P2<3GM@_&+J9aTs#L=N$a)DOpp0,7%\D]HbL6H*ncmHtS0[HDn81CJ<F[b":)aQpp%"?#+`P$/7IW&?bY`\GgPjqZkpM9=c,oSr^AahdTUIGb5JX4Z<(a2W,%%P]n^*$DoL[5-%@-Q'(6.DSsa$_U/n"=4<<(#iOQD8KAi%Os3),"Ak!W#OE+S<)FBp8<4?4.jrOB8s8STE%)LHB/dQHAjHpaZn-j-gcW*d+[*)F`d,Mu*p%ohHu,GcM`q5tNLXBA$b.s],TR<3%SEVP\lB#qZBJ,C6]i\'=,:aC;,B@gFk&qXr'`ab$8;%b#Tr8+7Kn(+nj.eGq`[*cC8a<'sWF_@?f1R:)>)>=2R0(,+`^7NR+ANYX%3^R71*Ttl015+V8]&qq6apJ8VHVa_Og\J0NCO%r*A["0%(%b.%'*jg*@Fd=;)h;6r12`XV"\@-OfOtbfN/@]707Y:fScLrP<Zq\X%q$%gJ"\i!XDK@.3,R-oHBa@+W]*2P_+@^rTGXepQUED1Aa=2'37fle^L^l,>+dXuSal+FB*.rl+$B?br1#X@$>Ja?IF&T/opr7sm%]GUJFQ!j4?+08VFIXD/j_Ql5j,iK]tQc)M55T-kV#=dG!93GL/YV!(j:iHYGJm:UAZr5ma@;&iq205aJg?Cn';2dg((38D4*E^dE%#ua6<2JbEV45aQa59,cP83?=4O&YgW,6Gk1Z7Z]/-UFl9>%K!0Ub$uq?'J0c3=1IOb,?+;J^b*Umign^JH;i+rkOG/,r!!_!N?&D%UsD?R!G[F'du_'T3=s=uW'S91/*:fh2Cg&An-J_F@\:e9o''>kZs(/YcrUNh)HiH:"QNG_8!,24`t!P-7&pGUAeOu_%G=NTgmCn^%$=X@%cNMFOiXg/j<[)C*L!,-CabKk-FM)Xm'-A!7PXFDN6IBnV:c"q"9ueo+hHHK9nM/!rLi$_!;EE0\4t[Mfi93Zr52Z^m0J<.=%eNd8sQdeZjE0dpB0T]1+%%.8CItZ/G/sXh_<LKB?2%GM\Qjf%D#>;$hBm:(7=Y']B@Zi2@:EVBHJ1-bKU)*55<_4TAN#9HoScZY%%!1GXZe.LX*$c]oF&pIKj4$4\i91eGb3A:V9MM)7UkrDL'?8.WoM9!N1kK8ZSUS+%_%f`9*6"UrY5bJ1=9u),>ha+J"\8SJVnhFTW%GU7>c,7;S7^e22PiDZ\A<7cN4bi'b]aZu:+8ZIXa'+A[ZHrLu#7l68WNq'_(V*_LnVn`pR@18I.$*p$$OWcu?!HI.b8<ePmKM.:q%MRaFg)AcBXCBrJul=GCCXBt2EN:%OQA*&7HNj+'n0Q;Dtc?O@?Euo`MD9@cRn<Q@k$OM=`1$J:AbkfD%=W2Q8m7XU5'E%/U>`,$T%@6ht(=UH(i@P^80/sn16-NQ:_Sm>[[aJ(XJ97\h,I?ArN/.)&9+Os)J,-Wh)RT'JBVQh=0B%<V>SQsb*ksQn$r4ZoD0*T$FcNYL`%.DbbFm/M"R[5[;AnA^L:o:S]*`e1UW/CFSLp0>rf<DX\*@L&$liZopg:a9G%4V-nII^)g=R(:?5,Pr\r#"famc&*(iOFjo)V_kle%19t2QDe'Aq;=,N4#m])-W(q_;M!@t%]"tTXi0#mD=EPN-WiS5f>n!c/AIc?qjVk._&8Q"*0-)BJ?]61;kK]6pWt0^0oO/^\+;rgG%4Hb=+O:6MmeZ+96c7R8tYDd94Rimlmi'@+tEWt3PIF\]/-./G:F,H[@+c@UdAI>r6,uG8+q/S@`FV%k4QZ2Rg'"'`s>%94)iSkJ'%>eP5*?/d;02LR6F\3P=\5A)Tg3SJk;gJB!(>iWg]c<TDTf2n_)EfI;HaXp]u^h_Vi8/FCXB9:jSLPsftAS7a3k+-.;9eoUn:1oDn%a"_-X9A.m+!sT*P<>/`te77?HgL*:6%C!379A6"Cem_3.MW;?!L&?hh'b\*M9-I10Pa!Qi1JfD#C0_cU\2%.lk8G<o[9`oe1*Op:%a-4\MfBQklV8Os#Zco6JX-*5rZ#$O>CPe&A%.d8_6Krh>UCIK$3U\NM(`-IM\SoF)mPtr]*[npX!'cmIZW&F20OH/\1mLCq-Fpmm%pG5X37YE\GQECX^Eh4W6W:^gdYfVgPXiuBn'Oa;-Z0+G)EAbjC33X0tO&;t/)S)/9A+nOtCUB4_#),_7EXiq9SeBDS7fgGD85?8j%(s`+:Ldg1:fe+Eo7S.u8auZ+60"Fs2-6'pp#gbY\\ElAE**<b7'atpq[1H.[9:c40@Jbdu*jKY!1CH98FAfHNK-1Xq!]FF@nI/e?%du&CL@9UJf.jc*qE5_rY-=`%RO0GlYr8)8@1"g?:!/_N_O*IX4rh6Au$q1g(_M07+GpOd`acFOj,reEJoH]fm!Rjt")_t;;oM$bu%.lM_hVJl/pY-m!6aKh[2V4of(`JuNaei(J+-FQOT\?WFP9"rW;4_#<Lc2hVCjWJ+"d4()+]tK)dAQWsaq,Ahh/."U[KujhqW6/pk%</=3q'au$^,]R"?QV24=H.3'SGiYebc\Z+A.1mGN\/ULKSY4.W"48B`\Rq9]E<mhq)4AZ>S`=!DCa@&7!3dT^00o%GLB*,B[/]S,%bX?C@=m_-/6OqE,D.V/MXNJ)2^#:_#hiR/h-0IQdBg+n\\G;r0-)D,u>F?58.T\>H+0hUM+0(T:$4J.QJMnTKN<j\^"WCI7:2Ao9%s,E@]_)^UFP"'$c(3Ac;#,\pR&L&\JO'"XlU-ceP+"S)g8BL]#qk`;1#b::g?]&5]C=gtHW>F[d_"`>dFChZjn4G>e9B9t):s=`H%Y72nH+bljYpfn/o]KaYG3j;)QT2Fq*)S):eBA?YCLMo.Z!l1lC]#F)^=Hm4Rj\5HrKJV-#1+'Jj>'&(`(ni3?<U`X$e4UB@:m>e=%E$--?'U,nZT57rbeR@S+qh7Uq;-]s%Z]mujJPo$b&uB"r&J&76Ufru3m-@#@)*+pY@/ks+06#2rafq+dHbcm[.<`cT=Mpf8IN]6;%1Ot+[7KR)"Q_&'$Iqee/Rb.NGf1Kg/N8V'0@Q?rFes9cE]7X',UQS<jePtjgN^MdpP![AT(a0H\%tJk+^nk%6Mb0R8cU-\jlmnk8%2c-tY(:g%LUp;^K57.g`b>QnW.nP`2.(sO#MXha9J^P)U'$MPIXH^1sMHm$s/2N1S2OGOGK?k6EB%8Gr!(&%>iWA[9+MTA0'Xl@T%+38E>Jd/"'-&0MaC*.VA?"C0$P0=,`"4WYgQOuHb/T36FFTole>UsA!<Z[>uEF0K=<-kgERSMdC":=Zc4u\/o%+#!K<aYtm9,E6;%npe]NHH*gNE/oYNn(R.6#QAp#ZHE`YkBEPO5<-sH.>`gY8f,.N6Lq0f*Y+>H"AdW/is.IW&Z<^RUoQ&a:qlJhN@bdt"W>au8Ra'0%9-T<M9A&/V>Bs_El(5e4+SeXH6DWnrM?0>7Ml$cb<0eM4.a^hjBokj9<A]8k!2K>f#"PmflU*k+a:I;VgnRDO"t<kJ>lcN;YbBG:%;D-EIE"$=#N]ca3^NJ=9J*E[F\,iZ%3P_7WQ2W*/S069_9c/?l1DHD<n_hUQj&[G-N6`>Kdek=qk3:A-d2G-?WTCC=&kQ8?7h2[F%;_R=m(,ueeHiOOUo$aCjMFDDijQ&`F)L9F)6!08U.j.?D:8&,AYLi@Dc)HnY";3tJ6407uILAqE%QcdSJ5_;04,VkFSBh6G+j#eN%nrP/\/La-m"3i$H=;9s'8J(AB)i683KaZa#>OoR^,W\hRf6BS\!R)*DNDc:/!7O4VZe19uTTiX`,!<Q0%F9rqYONH`/X%KDPKXn>%A0okIc5ouMr,mt_]j`Y:Y5gFJ7((0oNZsK:/Odd$)Oqb&=TXiilt#o@%+_r(1)[6*"\59]YVCSqif\T7(hSfH1@T"RkL8B.J[lJ%%H_'"ioe6k3n;"2EGo%JZ"Mf>7P#Q6!13fsme9m_1#\)Js!:<:V1hgo17$S6*A!mJ=<b`30lIkre"\m[gJ:HT)@k1fa3:t;m;b("b%a]Q[W#d`^'Str.n+;Nb-K6%csTi68\L.i<fZ,YRW,*a#P9Eh.ealD*F_I#(-J3ZJiS(%j"`?NEf_T6q$!YR8'19Il\q;4B\*3U\l%=lBK6+]fXg6YMl[+\6iW$MeR9-BIL1`G(<)Guc+Cre2$O0qK+O*F3u&9iBp>dha-B-;,X>=-BT2n-.'nL_q4k`/;WWaH,4&JR-'l%8]VAXdc8fH_&/Td8F]Y_*]3S\.tkN(P(cg3=<)t>W=eY]N-=HQ=al-qW1#]+jS8i]3(Wa.+F7%M(>Xgd!#M-dTLdAj(81,8P$0O'%P$ej=M\pgGKD9hUZmB`R4$8Ij]PS#GF>/V,&6#L:,n>nd)<Yd/HA'j@:p.J!5gkMm?!0aH$)1@MS\`366@VP-cZW?<pBUgjCZO>Y%"LV7,<*&rdW9p!_#Y%@T-m(D^=;oY)aqpirDKhTc>$C:)5SA&p*=%)qfF`0uOTT,6)6&MkdQGIePc)jF0.TO!OELa8+cV>S>!p;&%gs2>jZ6W9d&pb9iEbHZp6qS>[b7CBN2^trQ,6A!5$[rh^*RjSeQ#JR/Zm"Si,_^I[4IrR\WQI3jULcQC8ON-),pLS?AuotCA4$R4%cM>E;Ohm&6p75L25oq_]UEc3Y+NZ*LPn&A%fGI?n/I.p/("-9j9q9&7+a=C5<?+gAd^R6=gO]Q4<cLsG`2t/C4dW*6?ji(#OdqJW%,1*h+.0]2tOMrLN+66D8$:,dc&ian/E(VSQX)^[ZJXmrJ):CMt4Hi]%"3X$j%.NsoCoEkIh7<HFLagc)BaCU<crhEc&KFU]^EUBM%cK1tXXQ=G+QlT,f'[Na"fgs"!B$A@r"6*2r7@`;gJ9XG"Z5cu;Z5%FK4^X2mBX;?k,='WH$N^Bh!@NOZH?]P1]_FEqfga6Li:"mf%`K*%s0p';R`32f8!hW04nEY=Tncm43,XiL;@cVW>Gh!rEb(Z$f!&`'D5pR%%hN:/`_,5R6qJY'AXc%Fj`N'K&/-'&"A`SJ@k3!%2%[50Ls3%W>]`<2[HN#BIEZ;+4!Xj#\!bD0#>6Y,1H/X-D&iMbd>L/6D\p/7,k,R]t5-43LW+o;IAE(/dtH0W6RU'n4iUoj-u(/!G8%NU/^CE$@e*a0[!0]-O+]Pl,,JUpgk9=E`[OF/5%V"UA/k$l_af;*E<*.Y17O&Q_PWB@pQs]sPuq73E32;kE:hZ3>?!:0PG/T,/K#%_l<IMf0pY#2?c8u2SCGSjadh:XLu+EY86;cBh9_.Um;"5EldXlUn*kXj#6F*cA8#S?P&c;kX,sAeKe!;.!-*,92ea4EJXjD(ePei%f0Y<[S8X%NB/%]LJEVBT3]ep^I=Xf'GWt/<8[1h4P(PTcSBdAgJ3eTapp2V"h#LmiUJ'Q/o&M0-apZ*?Qh[*+U1Bp#@,8d+_,;F!%'m>9&FL?@@9*D`Io3Y$>js3P<\X=%@&*Z\ZTEXn;"F6)[o7Qk/'<gK`bKqMf1_EOP@5(!#Gn?o^M+7u5O_;%CHK2Hl(im8GN_&p:%Sfurf5q7&jU(q3M&3&hU,KLuYf^qor!gHeM_jtSlqr,=TnOlp(nW^?6ZfWHM\F<]6_U&^=hX9b+0g;/L"F4Rg,FeNi(T9"n`(<D1%f)t9P8-iP?Z$W!HlsV@3-A"'#ZiW7n]_Ed58S]L>.0']5">3eA<5mBciqs'IO7Q%s.QB@kp1beGT?Bo#aQGOAP;>-!,Jhk3D&b4#%j'E"S_ZKom(>NU,1&`-<akmL-jCH2<`^4PL,6/P$KL&k^V(O$X$>GP/H)I^]gGaB=#+AjIYE:"4KJ$AmA$Jd,%cOo_4HCK^-jL#d%Vbn.2/PeTr\=b\!GoJ#%X>33eU(43"b@sD,;kedGK\r.m=XoO?*HLDC\XXa;qU\dEoVt"WK.o$V.m_)jKJ\.iW6>;&8oosX.%4?8%cdUD$OFWIf0IDiE^B1JrP*V`(ON1Q?Vpn8:&EPJI"?%dgKon+;Uqf!h-O:N,n^h(K7f]J93*HB/J`N@I>[/<NKoV:`)=bO%KRB;A%8&<hK5NQ4'Uu:<a5H"aUX&1VrTfl>1Y6=[?j:st`$!)kf=JQo;ckNTWn#WFW"*bp'b1FE?PrZ^h-r\3EeL;W1_3P8"+GqAV[#6jm%SR<k]f2L6?U`e(eqBql$")^ci$TR_0aq[Z_!O)W56?!KhKAlJ(XKFr?7jkqZ^?EB-&*2\EZ2SuiJKn<:i[*S"juomnK&9Xl/-n7d%V&C20+PFR<VZlh[!Zij?EfL3,P_-!p1eS_FX?"'!ZFlHjPEq%b8Q]h(bc^Em=lA<tQ_TQpG)t!pA==d[4s[-^\;3XP?]4M[!-H3%%KG&G3C%`#^/OU.<!hA_JjYlI&f#IK9+mW(PcZF4V8PtW,hi[t:0i)jUZljAXUjurg(W)@^.Yop&Ie\T$0_4pM_,$1#j<eZg9EkM(%\/7bH1GZdf)J=MM+i2AG(\7/4-m^5/'=G&5O_a+SIHX:WKT^:B<Eb.\?1[lG%PEts'oYeaedJ0O,M)@Y@!uSt0`LMOeqYEr-*TJ&%?.=CS+sb=PF&XQ1THStV!EGSc_5BID]U356k#d'#>q-h3p0tqbQ"QH^r-qA475b@>=!%Dk`R@kDA'm<rSUGPp7cB`1(F/bM/B>"3%3@BSX(2):J-0ZI+F*Ro'YY\\-:YYq<%t.(WF:4OO);/VRd.kJT7u:,%ci:bnF4mhbb`;9.e2u`e-N_rqn!B`=OoYXgfE8`oNf41m%Q49c<ULhp$gO"D^lee+5F\%XrCoAWl)Q7s:cT-@Pf6)ob_4@*kVb+,^lW1TK/"!^;I:P+If-Mm._])fNqNb1\>&J)4CrJt4VH.1:%nXaHhV_d%1\$X/5e@Xc)HIn>197B5n>_1ms^Hc]T+Lr6SflZ=S1DVf[R]1iW_h[HB6iKhRiphUZN(!`&6"iuPpA.66Z:SmnV7uKY%Z<.<oU^+*R6J+YDEUXAh`"n\e'T1>h"mF2C`@e)GK:1dd[&uJI>=Whe#W>_:G??+8n>=Qo_+ss"1dnq`;)$<k"d9'$Yp-!_9EQm%%\KRG2m<aZO!J/R+fj.]ufn\0d0#R_(Z"+ctnFT&n&gEL5HSj>8I/+pP)17cug15;%R?"Ahq/S$8g_no!W4/D_%0!oX+:9hdOtIWj%UhDZ:eJ6-SP,THCKt>H9oS*37Sp53&ME3N5(gKRq`nHAd0a==>aB,,h>:$irXM^7cdBc>@b-5t9Mie:I-L5X>i38Le:KTrl9RBS0%`M9p<pb%sm(h`3Y9Yha5L.PRX.ooKHmWW=o.uZ86Zo@TZfim=d"M$c32bcYbM^22IXPPJ-oQLX;rIhauH'JI6T8G4bho0HE7,_J6%r4'^EaBX-sg3,K2^2N9+dV`af\%!q?\PgBmm,*B9aNkk8NCX%E1A-]_iq`16gWs#Q9Wkf&37[5XqkRY6DGK5k)o^V_^qi3DQtgZZ%[S>FiNRj0mXs&^679pB-%Z:ni?':GZ)R#j2F9Qf,^Ju#=FnFSn_Q+f^OCA?V31ZNhJ0Q"lZWI?A.6q.(S,,U=i!i"*Cr71E3bBN*%_cB)8$rPA$k"P?7gH[D_Fb^)H5km?/OENPaeE"784t2KBS5uC_[OepHOBg60fX^UDN<F8e;XVA?+/6.J#uYfRj\5>XpO?(A@jX-8%(8Y9+7AhWGO0JuU/P;<*J5?P1N+UM&Q([04\NK_j/?59D>AN`,_#m9bY<ldQgaN5\KUs?`X[bP_Pm4`G.ho2G_jiUt#h6p[p>R<K%-5=8fUj#Ih:K+2G5tI`Y[Z>QC<4(+2H^8MSfm_XZH<>pt6)mINn%W(08P+HSTcuPR!*LtQIEq^qP[u4dP@'606@1uS/GNGGV`KQK%3V**,6Z,Y]b'H6%#,.*`mN%aplJZl?[I/')*!#iaUDa*ZRu)m/rmQ+q'F`G2XK$CXWXDOt`N_P)r$W)/3\QfS^jnQsm<mMI^3ns:%5PW67r&?917.>V0[VFADhO(nLe"bIkr!od<6!u]_h%lq_Ab/u\HKF[sIJu19C>WZX4V#Xl:=WiUUjG.srY^@j4="^714DH!,uNW1%8j+7WkT)NF'SdqZk@MSsL98JCc\-A&@EWeb+"h'+30^kPpFLtA\TdQ?-AL&92'$E0eq5:_D#$i-a"tV:G!'?,LBp16b`?*,a.PD;%V_Q@r6jNf3YJbQH]H7tA[bSt+g#NY'XPstnKXb&,QtdGZ@;M(EQVi*'TFD]?eKltD=Eb+M$EMlDnJq,qb6GWDUR]IESD#YZ,'\pG%RYG+38<H.<74lRUDc<R+Xn<NdI\lI2S^Gq"s'TX,5%>7k:2Imh/5m5<j?.^[[nq1%1e.RA%Sm:T*DU:BUX4?Xa(Ge9WN/4S*%PJD%<Fg?J5YmXJ7h$kY^Ai))oTupudTKTg/hq1aZr_Ppm;XQ=K&=43$JdmT0n2I$,Aha,q>`5\\>o=8$Ld@o+I?S!I&q%RBdcB11'R+K%4uA[X#A`P:U8)qBK-%[n=*S$Bg`hoS_m:<\XQ5&__P<+[m-W3DD'_t*>EHf2fsb&8mVeVk0;&8DgIMkia4p1U;>t'V#Ic6g7e?QD%Nqq/kR.jeW5B&9mLu$eTL.ZJ[M`P[-(T_/AG7p/.<maNo8P9H8Ulr1J*CEid*g7?%K:rX;!TIPG+k=!DF81?FMbiN`O40=R]Y1o.%)*\!tcP+cLD#X&Aik2Q4rT0_\@\<`;4aQK;],@fA4LP-GDoP>Q?JfdWj%hus/AX+CE&J_)V'R-Mjgq8<DY9/_X%H8d$O(R9PqJRn%92m62f'8?&4b[C7.^;#b+TfS^D)537RtR27aS*\Q]^!\%+Gk,eUTBcEYuSIcSpb-pXP.1RE&aKC&d-:)*lh9T:fF"3`s'C-klKg(%EAFa^SCjib75"rMSFL2WQ&KT>>V^dT^h5*@]#<749b5ol50?bC1QMb,a30Q/I6Y!cOh-OEduj/lR>f\@5X5F+dM%5Qq%&ZhFN>!c%)TNWK5c[<0EU8-pN7Z(d@T?+8Hp_cUgWo?WU%QE<W>1ZPRJ65@\tGT:,42m=Z:eZZC=.9,&nO@#QFUi5,`&5H#pO]SJ_*#1l1_fU%^G\<S(6a'mJV-^VCIX1`a(<3RG"R<8<)6"tX]3[n@kD\/<\](6OlRS`?(MGBM0,Yfe4mA*qm/9TB8`7%)ijJdefG&/M,5KCX%DS[%==^,=f\-U^R:-.\fhOLn?^M]LZ'M%s\L't!<bFFQa+ciZ[f2G+Zn/&::MIeQ2c81j/c7.TLIILa`X-/OFT4;pM)\E._\&M(9O[S^%OJh1@o'P>b^-"=@clD?X3?YQNa?jU&o[H:\EH_E^BkD'*'@t>E)T=VeP.*>:87YM\^=(+4VN>UGJu8"@Ni]MJ0B9mX8UtC,i@RnJ%R.8t<7=H-nLFR46Dc=uNW*Ietmrl!c3%Pu<Ie'PQ#X4t[%";X@IlV*`W7;#8n;Ns2eUJS/g#3jBdbQT'l*JV[*2LQq1&NYQ`?#o(%MhRooGHk)Td\DXJ=RAku(\]F6D9Zsa7*!c%B.@V(*L+%5l-+2#B%>5SCDLC^9sogb9ePR($P/ui:IG8-JUjKA#`,Sf_][[#!"6$%%Y?YbPq_?(WJ#q)c-?7de?qM5NV@+8!,ET_89sksG<JV#l?+QmU`p;e,YD]>C)=?D`]Md1M#A8@."@onW)PJdt=`;Q^$?f=;_lXoq%_a\j0YKbbf2IT%39],&738)C*lF1E-.F<PWg='!'H)qIBM;H7sp[OSE[[$3lb>qfB[YqQ2Cu%OT2Ti'r'7So;[WK:/l7q@0gco)V%@gDY7_DB+;OI$hXX-`]:ZV4,eH[(]4-d_'e/92Lc>hXIj6JiHR*j"'hJplpY>44UWc"B@)01S:6Hml'9-bY3!c8KM7f(*VW#^e06%/%'Yr/T7j.?7P8\`3HuL3o??8B91rin]8:S\97HIPc%+nR:kS)DJ'p26[dP9--%,dClNMub7!^4o(:H@-\`*50?Lfj<'*$5Op[5<%aQ_@:)o3<qHgLVg=%Ls8H'E+<4SFk"X5ZK@a!SdQn&2H%*J+?)=<tuk4Rp[j*fg0jXdRfD&<(C'Znb/kL9rGWhc082E0>unWssX=%[!,&f9@;9VHF05-CXun39f\H6dR;:hYs0>%Dq-N@H2.!h.mIb'buU_<a:un+Age^67g/EkCnLb#N9u\#B6'Fcs4kVfYE"-4J'Loo%l]1O#a`$U@`4-tliOAmhd+el=<F2:i$k/=J!%EH_mQ9gj[!boMCgp]PQ5S\N+RA7)-(2>FM=9b5i%:ed9l>W&^U@h@V-8@F$=[tI%DfbW.WJ'kaVa-qGItfmF,jDP&l#H(U<'1urDB"0Tf-I=pMm\Lm$Acc>5(QJR]:Zk)X8m(g)Y?Tm7:VmcJ?m4PaQlm-"P-Da<;M1j%1i3S^qM4nWabqGJLgp^DeY\pNDY+1Z=H"/Kl4ntYP+GnG^E"q:0Fb]47fs%'=MPP/@eCgTG6BV%`.`TrlkZs]`F$tKI^kc==d$<o%O%:SEmH,r6)B&>Mah@!%'X*)ND>Db4<?!SGED)u?b(_^l27-PB'^i&s2/a5U+mIs[eCA\`a9HiB[1G#)bB2MN&WZ,a6[GU"qkWPX%C&tbXia3rkfFduP:*ZA"E^9iq#)hnJL4XMkV1'qWq;c".JZnOiNd7f>pcSUC^[C8lp[amQI(bDVZ<m$YCc.E,c+eg54klApEM"GP%^=R)PDh6"q,>IWrm#;sF[;j&D$c[;]%b]9IZ@G++OQ(Su\i"uAX&sUi.4A;5C+:[n_:bZ-8%H-Um;NJRpaG83JB56t8(iCOj*6bS%XeQ-NEQ95UY.=$^BM-hf)]Xm87jl.ET>aCk1BD+i:$u,Ln?@kK6tUV/`A^C`ofg&SnjuMdX1P=:WJru44qu\sK[FhYo[L8V.rIB)%lSr(MXt9U:-,A'f,2cJY@3cA?#ID#8^po.m:UYrE#uP?S2f`14Yus26T6GjVnH(fI+)rGa#sW]JXug:FG''GEQc`&X@]"r5FdsXC%U1df]S!4GRAf%qI0=Aim*)],MQIFjo+@u,)K&rAVjJ++(Zu6_X@6Qr`%)]E#\beK5%1.OkE)Rl4&C5H(7fA%'iZs.Wkc9IKf)&:T%E&8@p(l9@"N;i?sR71Nnn[pPoijuoah;%gL5gstO)e*4`<-ArO5X<hq&SDLe;F[+C+ip*,N_'PBnas:4VF\b8]7KL7Md,gGe9Q8V%K#RQb"5Q<h6pG@h.+^>RFp(B*+n8#OCH_XV#H2cl0Q3W98Ws'k5L9t/pRT,;1rqk,d-nA#^QR9P)rIi*-tkr%)NV/kSdn18laRo)%-BhV1iJAq(RaX0J=j6J._.W&0;YK-<.Vd8O,l#f1?$-Xd.HZUX^BI0ammK[8:!=e!=0?ng'jT>>(Q.f'9#M\f<.OAA8jDMYXQnq&%JE76oHC@<Yhlll%G\t>SlpIT>YH0Q2OHtD\BNc-Sh.Vm*^aXDsp[3U^@4$#<ik0!V8eQNJ8C"1PRDY8@T]a>ek,+i07175hSqa@T%NL!7UY%9?8V.jYf2dT)pB%t)%$cJ$>%+UecLm+%UiK2T=j-T:JPbu:NXXJ2"7"E2?'C39b-/QuSE/`^o8PRd;V/(t0m#%5lA_\I:%-U`;JbC7#S%;#9.U.ur1Q:_JO$L%]X4s3L<l_GR_@ISY%eN0kPT?%)a-`FW[^;i]CUu.e>VYZuHo/_7A\]U(p.1+u8)O;LY/).[M%Mq$JO&,6cOL:+l&Loi1cC)^k`Cnmd@[[*1JKbl5@FfY\Z)0&*QH9SGD_7(Lm=lH<XYU[FW#%.*aoKeD<,3^?=G51klj!'(G*TnWk%:J#l0==(+eCE\%bNF).Z2+mmSh0J-c5nK^a_^!SWinR$5p<DLB=`KG^\(;_]WU41@-\A<V$Th)Ejg&^QV!dAGf4H*f1et3M_(F3V%e3#!r;J8=]p@bs;?<NDn/#;i&b'H&e-*57a@?]k-dfdqe]+;TUL@W=k[i.++Ml7XH8'R4*3>>+c"l>\uZ`.g%[1sDr+%e1nW!3dP%imggHg[bZ]e#Flq0@l1+(0s.2=LXPW?jd5>niO$l02M5[l:6@&L$&nPs7ER%%n,i7jna.ReAA+Id?am2@5QNf?VeYM+(QCe^R_$!%epB1NXf7^WLX(CBCSGEIc-cto?!lK==Mb2D+Tg*clT`i$Pc*c#M-+/6;,d,$(#cO.XuE(_0`/Nh$'?"$E3fbg=fg8Qd+0kNg7Q)!%n,-qr^\L68PNrem$>ehj1$tlM6,Bn"[-t6\IIFf#Teol[@ZIUtQYFC.c+eZ"4JWA8.LG9WGlI2A][)_$1/:L6l,8.r#X4Dd4c]DM%]5E7d>[A&t)2X4u[A>0hSR(ghD3m?qLnm$'`V_+uNnX=2'I4!plPl[/)>sE,qRh7g05ZYiLU0FY1`kh!A!P39\;DCd7_Z9a,htkr%g35S(<]-LSY?fY?H2^]()LS;6&,%I\lr!<b"!%lpc4gSm.Z,V?*je9)41IlX1hm`i/o$l#_+Ds*WWFsFX47l?jJCbj-Xu&WSt&^9%l7%YE(^TX9c)/'f?/6eHDDX(g.rtp_'2C21>K!HhV&KQQ>#WEcpOg6J7?X3o$TaFcd]C+@4h_oMLPUO;V*P1AIQBWL7=L=kTni$R%0n<F64\%_Za@*:o'\70""(PrR464?BbbrC7L<R/.E,4RbHSS#j4.aHgi"k4Z@Z=6<7"W.bTo)W/ncIfUqu-]iQ7JPQ_DBK`clZ*H%i?haBphuW-m3rn3cb3HFPp#2>Rts\tBefY+@Ft0=BO_WrS2US#`".<6?+D>i='RAsogG?[<OKk7T0%l4g!%a$U?U/bp:rC@eIV&n%MD[">YUd"-NEK3LHq4h28X%Dg2"\&N/HVJb)P/rQW..6/XcPWrl2/UmT[C5f;K&Y:CHm+?hppgWhr,+5@ENTUQ=ltFdt.:bPc?.I%r6R&1mJXkfP:q:bBU8co/L^R?MEffLcbJn8Iks1K3Ongu1/+kc"AFs)kSGS\N%kL\JLH/?SbVOq39nTfr^]"h7nB_fW2JF'_#edq%Y[EW"hE#<K%ZPeu$rLG3pPCU/`!U%0+$:&eqT+ZloIn">$%D`s_N0b-p>O'`_\'B/bY,</Ue%*9dgsA>s.n\%J&B<^h^]GD#GL<.%=euu+b*Dk%K1G1dM88\Ie+h#Z$_55o4ab[Z$4joDDM+jh%'q'Cij=IHZ!XTr\e(G*mV7H4'dmE`LNTbZqV$,K&KIRk&)Gh&7:@(A%520oh5F[NWpWpK1S`er^^U/H;CF.Kjj"J0q3;b\Lo("o`G&<aNc[Mr;5J2Hg@sp.$rg?9OpAAk\[AFPgg`b$m`Kiq%3H)"j\!fIg%?8(H69hJS6b,DXi^U?9U-'X+uH*L[#P(?^r^cYZchbF.)X5A24M^RLG^U/H;CLqcCS:g]_19J%DK3pdhD+!XKIeqgqn\_F%]WH+l%,C\h'a?;a-cWcFg;'P;S5AMHX:p\V6OLD_(Q^fRi5*+eR?YDj":Plf+Ln-/2Xb2;SMFu7`_)I=nEB0QN>jCVn#j;fJ''^E*XkH`Y%JjZZO`F4BuVEbMj@<$u?Oe,%]6bjC;.?XR&=e,Q&5hh+"b>Y5bV(+;pV?1*MH[s-b!"<HXEZRs0lVSSmj1j,$k^.PP%l3jNIa-OF%gl/pK1Rb_li0+20ph6p\s&Fu:je%U<2-);DQN+HIG$D/Ro'oC1\'33q,.25pdI#29RRbD[5h3h9DicJGZm-V2j6#>6D\hI0)Cecn%D$LE!GTFE@pgYg:RdPbM"1cd;l@`L(nC;CPXI^_(R[/632?gpBh1-/?ekF]ME[/8=NgLQ#T`!r_m_d[[<^gGb4X$@-I$.\Bh2$j6%VQijd9mOB+>o65`i+s_PW#W6pC`.ccQ7Y,`djhuT'KuuX`Z>"7E:)*%/+`bWXnpZd46lq9qp27FlTaV5rnBYda@ULJgUb@n:)qZ&%V[gD'DT5(ES+4b_ipJEQYS>]#Je,J^?sP%K3`9ufkY\2<,/WpT`B&g0'hV\_0,b\L;hY%39S3e>pC_`(/iDQSaKrF%bNu)2Vt(AY%r3[PR@m=jS+&\31,3F=uTqZ_q`:N_4*\DHOo3Z_E_FlV06dM=00GbU)m\(pUS\*1!aJe%A:i-17!ZN$:'>]hYQ%YBt%@!(/oKj1!%"13WgS-`4Oq[/kP8\:Qd_nP3#,VajACuh%9Bnr1mV(4m.?4Z5bj"'aO,&fNk&,pRpI>PL9mQ;0nO>.?tJ!RU&=iNn<Xf8@59sEY,%I\Z[[W\GN*W`A_\O;rk6Qh`\SL6rQ0:FdF(MH_o>4Zfkb(qXo.i8=s!EQrnFEK.&(GQTO^%?lX_FLX:1;:hsF?^cI[_#TiQf8BCB%CWgp17DK,@f1:*k7BN@'/a(p@X($uN:HEjiI&mlC>Xk*7-'26INeiY1Fg1j'Mn;Ok0]BOmMBm'",s=N#`f;G_r");E),Cbij^"7h%rtHEC[pgtcri2,UK-E!^jiC)S)#a"JGZjrDFZ)l*q/VZ^YOE-G-PP,FZsEJ$Vc+1%_o<?Te77U#9_[3U&1sYXZA4,Uk`^OYkLsU#%@:Guu2Tk.aMAC4cS0Y>UnG.?IFpTp'&hoa0fq>ucYc=BOg6'!oW4GM$p+P'sDb/?+n[T)@D%lBap!i1J&P!t0,DJ;:RVVWf%Q?e`%;0p1@U7W\UMmL^.43bU`:r&pV6Yg+5G=KRelaDF(@?DmYTt2%h-b1P/g<2V#jIX,'Us(G9%;Y:Jd1ZTQN$8[Ubbq4]THpP]BmB<[%AHD#<R*6B7V_*!]aXE9L/%/!55d)=&;iT6rCA3%+Q$jq:/i%EmKk7/BlfQe9Cfn$MbD:7nYcuL8BVRSGdbL^T=,H7?`ROB2\C9sW%;Q4:b?2)[p"K^k&>`mQhF*h$S,_8`t.E5_"\,CtdQ%;O=kpdN]T`L\Fj`u#dRO!Wmim26DDY7M:NQ/ukCm;rVY]9PhPqcj"*q"L7%AENO7DpcYoO-B+X2N;T=*.N`b+"(ZI73kk8Pj60DRGJ&2>e-GI%gb/]pd,hpn?VqmNaK08R7g\`^ThE1-XaR[PkQ)$`7J,72X37[%i>rRjahG_,8h+r?D2:Eh4d*HOT'"4Eo_]cNm@0%-_%V:GJ7W)$(`.N&IktXHp>nSOlCO'fb4A];Q0/[=LA^)`%J`fm61jB[3JV'O%`6qAu2BOrO*N^qZ4aqJ&Rj3W1dnH.]R`/e+hn+lmqRopFfj.QKf8nJZ7"K5s>pDWp/Z;q,JBEI6bKVK:(H;U<HM7toi=@uAk.EpX%_?D.Pi@B=GH2#jhLAP/H94X?B;f3>8!B*PKgW:0[@Djo>MgQB<$%HCNa65^>:!PIPhd36Olj/kQc&oKT8S(dWVKr__PINH]!R"\a%%Q[cPjZ[*D*O><[S6oatLg"QAYlP>A(U^E,`.RL9H?9Ln`Ao2D#q*6`@O&G:,&rjPMsCITQE'#)bI\5\'YJ-Dq6Wk8/MF^M++nh#%&;e9W!mTkf;nSQ1ipmqhfp_XOAEaZid.;fT]`J$f>I2Y$>l5qfKY;IqN&Z)D]Lj/rfog,sp3'^kglKX)CE;DuS99^(M<i%g'"_qq%&=98+n:btdT,t+f<tp(t3#&0IA`fp;k-2/!08]&Oiij]JA?TA_L$^0p859?"-R(91\n!6^B"M<KX@8\]6#=?2:!)oh@6PpVlE-A"%_6sXFpiMAfd+$f8I?Y2!S/hB39d_:qe'8TSF^Kp50*rl"JZ.<LT\$d"f/sc#j>CK6(<=^<GfLK5a#r//Fm9P^YjirQ[8)3W1%1&d%43:e3/M:W;::(:3]::5W-4WT,$S<o6fV`l1PD3cm\!#$6JL#cuf-4=3Ji=kMG,>GUXEf;phFcDj4.R"j)8Ig-SnmM/XiqK"9^tnp%3SO)H7B$r)MnB:p)kudN#!3jBI2N:m+YkF.:Zgb>E:Q6tcX"$)G4?GeOBg!!/@%S;PE'#+<lf!dQ^=1C!EG:<J=dmV3G0"MWnH1H%Gn"uR8KV<jM"Bqb:;>Y@<lpg;IgV[_>8dVBN<D*c8T:kJ'>6d!O+[=K"8jQu"X'`>'8a*ReY@qW18meY<O2'i-Ha,TcR*D`o9@7I%GtRDr^QT6:;nZpd.mTTc,@-HDm#k.MB*d_J.?QbnOL/i5`"SMh/_=lYZ-"k9L(u5r)A$*Jb%l:a4(64Q^G]c,HnS'nr&24Y=$"-N%@IV>S9>AHg2jEFkau=4W.t>2_rO4$J7D))n]]l<-p/Mk1(olJq#R0+CB!J)2pdVNaTEuZJGU4jWm;#s5a^I0Q#hCAs)ea;;f[#u5%lbqK1Mbi2-[l]m:`(@[_acV<!0JSNir)<_1XEM&]k(O*(:gRD@d<'RNi]]C1^Cf'nUD+k18Ih0!Bf]`oNnKq)6s>nbQ0[#Mbo7EZ%M,O:G_2T9pG$^+n';,hLji'1db!*fOWoQ5P9$0W\Qu@_'+u'nfBqUWNVRVRU\K&2R/&^se,bo%q2,7C5_Qt3hUCeBAf_8auM3BQO%`M:+mq$+![bjN'`FUDDe"kP1:Hu$H#h:ZZuhR<=[$@3jq':kBI4$>@<gpgU[_1;`?o+2EA1R3P`KVn@P\:VdO"<62Qkr!KUlO_'h%mMEKd^$Zq\no32Dr3W<+eISuP"r[K=AtRq&G\pPX<(Q.,3X+IOS8mYsMjnmY$;!38pfI,:Oq#T#8?al5=/^^lTl/u)g]]R:P^W?m%h#4M:P4EFY,$cl6_:1rVBQnU/*T!qgPP>lSpiQB[(tWP]Rr^Hf5&3uX2?AWakSurLZpgqcg#PO(o8C:0W+5!Om:6kJe5'BSHPrNR%]ViVbV5/`:K%MJqDq:0HRG.$,ALD'?.tP;Hn]#^>bZI=2fKNYFhoYg(*W^4ZQ&Gk-hbam"l@ouT5AQVL:*mBPk^\QE*5QDDU/NY;%Zu.3>:eq])Zegj)^k^]B/WH#+SY$bSL`8sE=+ic!eOqXZ+Pg)ig;ONH5.?tCpo_TA="G0WHc6Ak"EOY7EmfZVENt-b@s0ro.RoJI%gms%Q3mX?i8E<H+38qVV&.\bG7cKa$=l".X"-ST*99nPtX0gkS[F]t"I#;3A7R39V!E-g>6tn/@kZZ8CN-`.-*>FTf<me1#'dPGV%<6FtcgWmd`5C7caEp+F>/$c&Wm**asX.QD5rr"KOm#MhI6:::lg`:)@&#&Inj'VDXIoQ=HW)gqMY=%km]">[p:#[g(-pnnBVRb>K%IliFkH9N;fL"r!F>rX1,-AN)'rJ#I4,]ilp8[ih-_Sj"Ei^8)<B.iTK6)2Y=F@S7?*;hCJ!qg[H8XDPqHFcuG3iJ3SZVq];JVua/%VL7_Cr70@(`>_!E;mhV]eG[f*&\FDccFZoei9Ot_@eac:5(7asERNh*gjWln*pp0afLn+F]XX,)qqOC%>>"X-99/*^D$7UdVejAD%!boK^hdo.8oOt\):Or;LN\CPH7sAm+A[2rKRB1hum&df$T^84')#DFr[E\[HfSY8S1eW0Z7[<)>`Ju$l5]3!9:e`+u4bcIk$,3ML%XYYr8^J1B(3,Dd+1M!kb'#nU/XaTWQ:/P3<ZA$ls7*)u&4a?-3%np#15EQTU^]#qIF)T[Hn<:TI9hF@sMpC(_"iG7@!M`Jids:Lb%$GFAo5U\fa16P\HcJ9^rdb?Suit'tB-*3B]1;bE$_dapC*n#0q1Kq5-7G9%2J#8hb:CQ4%]gNLu>b9;fii9QN045O;aO\``>;Lj<%mBUj_g$km0GsoH0;[Wh08?uUNfp0Iidt=S2$oi\gg[k9_N2<(<p%>luL8cIr#T2E7H*Y078(-KR*SVER`;,V:rKdU/5(e%W^cJ*b%L+Be-S4B`kR\cDqn+f.$W4k'A4'ZoMm)_e5:KkV_lLMYJgFRMRXM:m]ZhEKDC@c8lZVhG#JOcd(rO0O8VY2Mn/e)?q6M<rJI$/X8%G,ALBfh=cAkaKA2`!%6be)t)il-E_7^+*p')qg]rrj(q$!!Q8GH8Jtnb'ie9QITJSAHl]L7qgNIBl=4?<aYSAk5OMDGrkT^A2nRr%V^_pa>><Mr@bbtb+R'>MP=\Bt2oV)(I%dkLd]f;%%)o_[r%N\6[o:Xs\5q\X.>/o8CiqY\3YJ9\iRM_Wf0Z$3RcEL99?La/Gj4r@%jr_qq$h:h&oL$)aE/3[PA>UurllBnZUkJSBUn6$phIS(fL98dI#i'Ip+pZ?(@R<B)E;`A;mM6QZZo;BnQ;X:=maYH6om-8k,OV[e%>C@NW0BM>I2qIRWc1Q6[N'd4?&")3H,/K^TIX0Y3%"?]E=Na7PdIh+HbK;ZB8%"l#8O1BNn)/Qts'EXFV/]2jCe[O^.]g%EAgU)W%O96AC*^@$pj\GufZbt-Y=Q1ml9!Mc(jF;J4=mtO.;P]196!"s?N_dgq\$>@<UW@Q[Q-I@_l'+nYX61tuea`?V@mi;:#uW!a!0,tk%GBX(`6t1"hYf7c^Hl%8<D6\s=5fS#8"Mdu'iTS#^-G>uM";DdF8np#Nc4j7$K]@r-5`1WZqd63RaqX2g`aJikp&t)Ui>u8R;m+R'%(E(SI1(8H3Q^D3n>Qm=gI!?tQS&#3ij0_Y<qtl*;OUk7PZn%1R">*`>&!7T@R?>2FRF@W!=\`GbH<(5)T4\:jV:j`Ye(V7?pQ[(?%V7\)5C5\.6^<WQQJSf<3'\7?I0?@[h:>-<=RWuusj.KXd7<%[Af=,fEMnN214\t:0:aG`HPk+d..2NNJ==8,@I2F\;6b8X*^N,/L%?&dE3<+HTY@Bp#JO5&H7)q*@&]Q<1.n8<$=:Qr%r-!fbf9#iU=9BAdOK)858F!C>$eaqtfMc-;+[pQkM'PF\r8-`G,]s_NR)E77=%QCK$Le)t))l-EV3^*u\hctFichNMfPj%C\kV2lth:[EmT=shNU80s;3=#htV4;JB>h<W9hVY*E2>gJ!.l:D^Bk1MpIaV.jrn)sRO%NCh;N3,]W._#)#pT=laTBYeP;U)TmS)bj+lDb"pCd:.QK4:hl$+;M=&b,elc*O^CidXOkRo[`d3]#ru92jB-DP'!h;mcX?g"i!'O%Q0&p0KnDm8-WfEaB1)p]_,B>\$+?BHD[f4:.5'n';,@k':?P,OY;^`IgQCd)&^o-\.#/HjoH<ITXKY2mn[#-*i'BhK$`@JVlpm[F%.hj<q@M8&)<3Q]liicht9:D)T/,++Bo26&-MW40oF*Ju\;<qQj;e.71rX-oa!-"$Fc0*V'77'9lW[;Rb^\uQD^C+57U>-*<>P\Z4%W)*/`=iVZhmCJ>,oLc"eYa"F)fs&KD/,*.SI/e%SjFVWr$W3g25!Lf2"TP%m/pdhu>q]a7otrB&(I:pm@_gbY<%m#4=m%%QYiX+u%B,u)<>FMM`'L-22L@iY*I/`u*/'-2d&$,!TEH*!SR=36lFIkoih\d[N8.'!p<2deW2JoF]"G2:Za`[0XdtMW'>OArT\a;X.cZKH&%cG!&!]EDJJ,XVqJ`uFj8c0I,5)*Jp#2"ZC$G&$n5!Bf=IC3JY/;+G6%a\cUQe6?Kplk55e*W7YVbjn$``u:ig=4@#^3\iX$n6!JS%&=BB(?Ne>]].d@F."<hdZ&QnH!F'De:K/#sVu)J=LNNob_*@dq1?qSm"TbkXCM3XP[c!*qUnWRlnGNS:XM'XFAMrr,IIo'&n`;`7%]Mj2$pN9i`$&nX>Mi^),p*5nKJcZJ.54[]H6L8\7gFEnSFLtE"'guO?7p%SlDAghOM\1_![fg:^=b6#0jctdA.T0OCh_(iu@Vq,D%UY_(do%Ff%]cQN.mj`5`K"[4%agEMme&1##e*:`;VFT1s:]F,=A+$XCMJH3TKE>)6CG(/aObgknJpP^bYN+V79,f$:"2BMq/8B9c%aeMhiS1Q=TEs/q[KTT@iU.WD;BP[e3qq;X(b2hfqHC=Y=N5B4T[(;5C/1W"/3&2>WX`iENGF?JD4K@?>O$DMh&\q9aC8>[t>e_>;%Il<'+$rHo$Liis=iso1aE@hB^ALfj]35AXh\WN]`Th)1TLeI!`c=7gYi^&/RPllE&A*/,P*Ea^<FQicO-_:k/E/0,6iM$&E*f&b,%+fU1E2Pu@!.h?.),lY(:4@3+N)%&C7Sk,d`?=TD:d2kYiEEOFX*g[G/21>XRcb$mZ8LjB?R_L]o2#Q'!mAM[fD<cR&3ahIEF>4f;%bUPR@Y&Ed==\TU+\LKc9p7bETZf/`irb+!./\58;WZ:dq6Y</)[c2,7%f0VT/CgAk'mK4r!D)"C6_BSp38D5*N-Rmd)EeA)hmKUg%%q[Edb&nYIX_4k1/O$NqHX$e-qWao`]$kqTl[3N?PS@S,@R:?E"6u_3HhO2k1?pm*3V5?=oYq:Thl;'<bO1+9Zd%"gXMD7"fg%Io%:@k8m,kdS"p"b8o`=3Km)LP]lIcVR_U+EdTKA'B</Mn"5U(M#kq$:`_22DS?a"8C,2:mkSFENm9LsdgYL2HAk.)f""'/#QfE$DR@%chC.BgF-i,oWn,gnh;EU]?Wg\qT_nC5odF=TnEM7r:tEK=1[>iIW-ooopk6S91l=UAt,_G^\gGr+X-B$ig,<gORVMI0r:@WfAuG%%YO"@tIT@=U`Bf@.Vh(F9Y;i,o$91qg=XZI=Dd7j7'CD?l_4mC+G$sFsb4kA'hLhUh+ROCp?(qaHd#9c`q8R3ZEmI#1jot,mOCrf/%2\fcSWXn]T]Bq[PN<J*2bl6HOC3Pk[0`/JGS"u-[9nfQ:PFT:#US.k7&lb5J?&a8e=+JsW8,W=L]W\fo?b@=sm]LRAS%C/rl'0Vq%EX5EXlYnY;jJ1#Z<1ojmi^P1\<R=Pu4]C/!4G@>o6Q*ik:5[bU<7@#j@2BHW'^o4;-EnO3=Q7/^QZ[&"la6;kZqiuk-T-\<UQ(@q%`^Afp'V;c$!8157P]%^OL<0+`E4sln:$0P;ei(F^gagg5Rt=eLZ%Ric'tP$M->Z9:Yhip9jTVLB.tgg3YUUofpH%>`=qketYH8mP%5&U&;`oORjJ*QWpC!4uuhp84krR/T5WJR$S*nYYTjo=CIH7H>`?Y>mm2_&7?7eq#*q7s4tJHZ0:h,o*b.NRt^#K;,!3p#4mbu2!`%c:li9gXO%I2-k8KJo*pT/nFp8p^?e0B*]XBZ2Ul#oiqUk6Mj)U`pr147T,j9g05$k2jlfjr3%W0]uprZFMdBX1D&-2/K</@B@PAT%&[YLB+Q"SZC/aA:\D6s1AnP;g'I*`b-fsm[lJ`E]_tip=TEBB!39obNmEm!Hq*_sK6MZN]WmUgiYMndD9;S2#\1U%(k^r`.=M8q1%Ib5sJQE:67:*SemYuR5#NfVVh(ELO_?YAdVP[E'8'Z/8C+B00".-cI2]%qG12Op.l%>:#7K+^1N.Ie#%omN%UJi.4rg&kJ/#FJ`:%??#_i@]dJL>'nYf1=n[IHUl*[?=#j;2Y;g3^#55Be7L(F9.80tZ$gAjk`#"WiE3rC,?6t'82A^BBh7*@$PJ,2Fj9'"2'@0[Sg+Li%pAi1(5O>rW.mKZCG<M2k]N2r*(`8CBDJbV:o"0pXVSuBT5*[MiFTQ2n!UQXb-\srB3i\6f:hRD.Q!gD2:8J9'O5?u1F0nKNbC`e=%RgmMs@]%-k#`c/!kEa+:VfG6F\AI^"qu!E-=TMNVE3BmZb04Ln3]tO4iO6dqg,oQ)7"^:eX3qlB_)\5ZSV-eX`"!$L($rr2F_Wc#%NjVG_+")iJA+eJBRfllE)H%)"7m]i%NsGUcU^kc"QW*QiG3nG:Od"Z42QcO.^?--j`$o#UrKi/+A8jtmYc@R*_LX+FLFZTH=l?sF%_F(&.gJ34!9uSh#AC_#jS]u-_2r-[XMlr`IH-YSX(P0:_e:+kT[U]@p&ULYDPVCFbNfKd3kL$^5WU,k"=OO%toK923YkbruejGIe%$tJ75"R3tAlh:^cAEPGO'R3tsG^`\`QXA+()%o%$>,6I@;;jl-+d;AGbQ\kGR%06+k&JQlrp(*T7g5QgX,1mF4oM:^cTnQi9T0,W%hQS^-V[oiVXlJPFGZLW];)u@fS(cgk^5fCn^;OWC"i@-SNJ/C;9,Z-8KEs@5(dVhlL]WM89?QGcL3=/;ldKAHU5,<:j17GM8,s38%:!^F\UKlcLGS?SZqX?r.%-q"#'S_"H]>G'nBSG&26Jk+"/a8s%gS@AJA;!f*@H*V+mYZf"KDm`W>5bM1?2g-LR5=(V&&o3.'Ap26%,m1NX1[N@^MlOMRq!C()jB.TeSFT/7nN=r!b%A50CoODcB2QB^9*So,SQ[E%!Qfp*qX&Y^'5XuZ>6/"ca[7][,'+E6\)&iQ8Q=3k%'$/#%*jh*Y=Y/7j@NM:)>Zr=:5p4BldWul#5I`P9;kA<,0!7&!@9CUWpZNMfdNI?HjMqo\i&K'37.\gdmoK+Zl1<\BGo0HH/CKng%ei-i$S^c8M&N,u9'%<"AirXH=C^H)mj"-1VY0Kp.VPpCJatk!$o8"2!9C\dJo>?n$]N!LJ5/6M<q,uVG)W5V+((uB=4XrH>nQGUP%J7EPA'UU.:jhREZ>3o(a671.G(Wf:Hj#WLPC!bYl^Z`TSk+n(A3SpPInb->,#JkCQPpY-L`<7/?D)I@0B111I?;Kl'$[\?*/0X^p%MG@WU4o-V[.(G*Og#@_tAB3=5=V79-QkNZf9:0'0IaC1.Fgr-u\;O+T<HEG9i)?ol&7ms<SiPW/"@Uop`Rsmi7msgmXMq?NpgQ]?%4!C]Y#"/T[e*u%V)^+2u-\etoZaslJ>,5`#psi9Vr[Y0PMiS#=rb_dcOcBUMn0AFAqTJ)*iY;^+A7fko[i?-RCV<edX<,k3Ck@+a%:k)SP;Hf&DZESbk%"b)9RL.1!VHfW<N.6pV>k1_*r.cs=C.7f\O/ui0Y"bQ"O`.+M->#lGlrVOgO<R]H7q[mL;-KpDR^muUs)Ce$%2:-eOIW3PT(1M0M8N:8Y:3jm3[=H(R?V?=GD"h0[;-ZOnVG=bCi[Z#7l/=^LS?@R_n]'7i`F=4sLQWLX#+TPE::.n).ndE!Ltt&E%%f(57p(\lglYC-+`-&"b[mdWh2^BUlM%^W$0K0r*KAcf>M`jda8HBA2NEQ<e!SfNtYB2Nb<m>:jXF@-QFq[<&2V]%mT&besGKZJt%2MtXR]@,:-AC%]V8A&98#&mo#!KMV*hMFg#^S3'W)Qi)F/.YsB]?P.)fl`%Ol"F4R')l`m&$qYYZjtig#m>3978WY=F%%Z&2[YQA%*'k!EEE366?%n:j!A\IY>k(S3O=TjQ,,S^Z4TgHrQ\V@Xej>P6-4&L_BW/P\IL+<"kK<(4AY"s9E)m/mo$p,aEAKjdb<]9)QRbY5%"<!BD>R*J_J2DV5_k:*&8eu/-2-b^DS%kU"q:%@g6m!o%Ab?l.@tV5OgCLI=3k;MbgKUM=id<mQT=Bs;D.]uFm@."7RSOoJ/=B'L%LBN9ud#2&c+"_f*6uU]PQW?TG]hH/64$SF^8Z,i=LSI\-)3qDhpgkVI8&8HA,N_8NWZ+YnlZcL1L,D!iO..'2>[IssgNC%)[KYbl%[\V2mE[mP='0(64%M+Otm;`)AH5/(D7;S/rfgEV-r):`\G#RM5n_)k_%ZccB&=B3C$J1e;.Q*oU5H=Nm/TL@@eomsRrL^8&cSsGi%1fOVB(?GW[Z"=hAho7;krb\TU.It1OBs4r_5CNLVgKG2G_9^t]Y)BS1fsVKe2sOUV)*j.Fh5@^b1V"!U,q>:0IMuGlVNjIh%[aJ@%!PG+Cpq46'WH5";dG%kg?H&`I<l5crJp>l_.^qnkd0@8S<m,p?PKgLkc%t\t\]Iq#L?W:#Lh`?P.(_'AC(_*q!Cf;'<W1<;JD=oW%$[N"^fkYj-LU`7s?!*jFYt`=:lm-]=32&Nt-)q#0qJrH/>EaoDdV5[hC0e[5(L-"Ib5ZScGDWKB%N'LtCFHn3A>+[s1i`PupF_Ob%XQ)ecpgY#Rc>`Gq&E_GoDmTe5.XsOgd/kZp8RYm_`6:Vi&j`Oq&^3Q6@^Zla?"\B*hAhn[r3Z?'QRba&11)atE&I?gE,-DuUWIT7%U\8Pa@r(SuY.r1.0LIk[n`qSu/jYH2/Wk,a&FNAq-Oc/[K#7"u2AT/?]H.BRJ.YobC@UtMSsu*C@=JjM0fj#44W6d'<W6BD`/0S"%%<!;u2P7_+[>FZhg+1q+\e,N20Z3Z\F^_.`G\(rcS`Bg;8`u9acWldW1m(QMNKlm^p"'6_$55pXaK/pb5m%tskcNWXpsjgAVdhVW%<'+iNms3#l-mo_\Qt%)cC'[eFi#>fcoZ,i`f1`A:#ePoa([uEs-)WfSmDQn)6QD.W1rhSE'NZ!H=H^"2q`'>!Jf@>'aW)a_!Y0(G%Y$75uGkUkT7ni>+-ZU-%7d%t][jo=`;&#P7#l8LIEUY,'o5-&KYGr7kFCob*:fEeC)RjT(USnNP3;:#Xc0n$"Cn4*C#88=)T.Ulc%Q$Z9AN+^(c&<96%Y.P%Rj86&MNgLb8)(EPO(J'.D@e+YXdnj%IK*[ZnJ9!KT'E'gF=?i7',BpnG>Q3qk=P*#iNH)7(E$XAo>_0mg%qe-$G_Y!<iKKH)q!@o//90%<F_Mgm039kERI=LOs55tEi^\N*RZ2aR5qRaNAq"oR=_]QYhk/2+do:LO42h1TUJ,K9FqV+74n\a8^%_sbA?_pe)SmdIYus7!e,s75e@J,I2Kr1Cb(iualliICk*s2/l*jS\glIe-Y@ks'Rjru#.Y4o~>%AI9_PrivateDataEnd